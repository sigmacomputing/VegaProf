{"version":3,"file":"vega-lite.js","mappings":"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","sources":["webpack://vega-editor/./node_modules/vega-lite/build/src/aggregate.js","webpack://vega-editor/./node_modules/vega-lite/build/src/axis.js","webpack://vega-editor/./node_modules/vega-lite/build/src/bin.js","webpack://vega-editor/./node_modules/vega-lite/build/src/channel.js","webpack://vega-editor/./node_modules/vega-lite/build/src/channeldef.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/axis/assemble.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/axis/component.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/axis/config.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/axis/encode.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/axis/parse.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/axis/properties.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/buildmodel.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/common.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/compile.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/concat.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/aggregate.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/assemble.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/bin.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/calculate.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/dataflow.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/density.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/expressions.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/facet.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/filter.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/filterinvalid.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/flatten.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/fold.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/formatparse.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/geojson.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/geopoint.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/graticule.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/identifier.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/impute.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/index.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/joinaggregate.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/joinaggregatefacet.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/loess.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/lookup.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/optimize.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/optimizer.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/optimizers.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/parse.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/pivot.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/quantile.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/regression.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/sample.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/sequence.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/source.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/stack.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/subtree.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/timeunit.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/data/window.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/facet.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/format.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/guide.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/header/assemble.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/header/common.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/header/component.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/header/parse.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/layer.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/layoutsize/assemble.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/layoutsize/component.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/layoutsize/init.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/layoutsize/parse.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/legend/assemble.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/legend/component.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/legend/encode.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/legend/parse.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/legend/properties.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/mark/arc.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/mark/area.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/mark/bar.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/mark/encode/aria.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/mark/encode/base.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/mark/encode/color.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/mark/encode/conditional.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/mark/encode/defined.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/mark/encode/nonposition.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/mark/encode/offset.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/mark/encode/position-align.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/mark/encode/position-point.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/mark/encode/position-range.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/mark/encode/position-rect.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/mark/encode/text.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/mark/encode/tooltip.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/mark/encode/valueref.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/mark/encode/zindex.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/mark/geoshape.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/mark/image.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/mark/init.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/mark/line.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/mark/mark.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/mark/point.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/mark/rect.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/mark/rule.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/mark/text.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/mark/tick.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/model.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/predicate.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/projection/assemble.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/projection/component.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/projection/parse.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/resolve.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/scale/assemble.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/scale/component.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/scale/domain.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/scale/parse.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/scale/properties.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/scale/range.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/scale/type.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/selection/assemble.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/selection/clear.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/selection/index.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/selection/inputs.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/selection/interval.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/selection/legends.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/selection/nearest.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/selection/parse.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/selection/point.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/selection/project.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/selection/scales.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/selection/toggle.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/selection/translate.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/selection/zoom.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/signal.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/split.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compile/unit.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compositemark/base.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compositemark/boxplot.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compositemark/common.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compositemark/errorband.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compositemark/errorbar.js","webpack://vega-editor/./node_modules/vega-lite/build/src/compositemark/index.js","webpack://vega-editor/./node_modules/vega-lite/build/src/config.js","webpack://vega-editor/./node_modules/vega-lite/build/src/data.js","webpack://vega-editor/./node_modules/vega-lite/build/src/datetime.js","webpack://vega-editor/./node_modules/vega-lite/build/src/encoding.js","webpack://vega-editor/./node_modules/vega-lite/build/src/expr.js","webpack://vega-editor/./node_modules/vega-lite/build/src/guide.js","webpack://vega-editor/./node_modules/vega-lite/build/src/header.js","webpack://vega-editor/./node_modules/vega-lite/build/src/index.js","webpack://vega-editor/./node_modules/vega-lite/build/src/legend.js","webpack://vega-editor/./node_modules/vega-lite/build/src/log/index.js","webpack://vega-editor/./node_modules/vega-lite/build/src/log/message.js","webpack://vega-editor/./node_modules/vega-lite/build/src/logical.js","webpack://vega-editor/./node_modules/vega-lite/build/src/mark.js","webpack://vega-editor/./node_modules/vega-lite/build/src/normalize/core.js","webpack://vega-editor/./node_modules/vega-lite/build/src/normalize/index.js","webpack://vega-editor/./node_modules/vega-lite/build/src/normalize/pathoverlay.js","webpack://vega-editor/./node_modules/vega-lite/build/src/normalize/repeater.js","webpack://vega-editor/./node_modules/vega-lite/build/src/normalize/ruleforrangedline.js","webpack://vega-editor/./node_modules/vega-lite/build/src/normalize/selectioncompat.js","webpack://vega-editor/./node_modules/vega-lite/build/src/normalize/toplevelselection.js","webpack://vega-editor/./node_modules/vega-lite/build/src/parameter.js","webpack://vega-editor/./node_modules/vega-lite/build/src/predicate.js","webpack://vega-editor/./node_modules/vega-lite/build/src/projection.js","webpack://vega-editor/./node_modules/vega-lite/build/src/scale.js","webpack://vega-editor/./node_modules/vega-lite/build/src/selection.js","webpack://vega-editor/./node_modules/vega-lite/build/src/sort.js","webpack://vega-editor/./node_modules/vega-lite/build/src/spec/base.js","webpack://vega-editor/./node_modules/vega-lite/build/src/spec/concat.js","webpack://vega-editor/./node_modules/vega-lite/build/src/spec/facet.js","webpack://vega-editor/./node_modules/vega-lite/build/src/spec/layer.js","webpack://vega-editor/./node_modules/vega-lite/build/src/spec/map.js","webpack://vega-editor/./node_modules/vega-lite/build/src/spec/repeat.js","webpack://vega-editor/./node_modules/vega-lite/build/src/spec/toplevel.js","webpack://vega-editor/./node_modules/vega-lite/build/src/spec/unit.js","webpack://vega-editor/./node_modules/vega-lite/build/src/stack.js","webpack://vega-editor/./node_modules/vega-lite/build/src/timeunit.js","webpack://vega-editor/./node_modules/vega-lite/build/src/title.js","webpack://vega-editor/./node_modules/vega-lite/build/src/transform.js","webpack://vega-editor/./node_modules/vega-lite/build/src/type.js","webpack://vega-editor/./node_modules/vega-lite/build/src/util.js","webpack://vega-editor/./node_modules/vega-lite/build/src/vega.schema.js"],"sourcesContent":["import { isString } from 'vega-util';\nimport { contains } from './util';\nconst AGGREGATE_OP_INDEX = {\n    argmax: 1,\n    argmin: 1,\n    average: 1,\n    count: 1,\n    distinct: 1,\n    product: 1,\n    max: 1,\n    mean: 1,\n    median: 1,\n    min: 1,\n    missing: 1,\n    q1: 1,\n    q3: 1,\n    ci0: 1,\n    ci1: 1,\n    stderr: 1,\n    stdev: 1,\n    stdevp: 1,\n    sum: 1,\n    valid: 1,\n    values: 1,\n    variance: 1,\n    variancep: 1\n};\nexport const MULTIDOMAIN_SORT_OP_INDEX = {\n    count: 1,\n    min: 1,\n    max: 1\n};\nexport function isArgminDef(a) {\n    return !!a && !!a['argmin'];\n}\nexport function isArgmaxDef(a) {\n    return !!a && !!a['argmax'];\n}\nexport function isAggregateOp(a) {\n    return isString(a) && !!AGGREGATE_OP_INDEX[a];\n}\nexport const COUNTING_OPS = new Set([\n    'count',\n    'valid',\n    'missing',\n    'distinct'\n]);\nexport function isCountingAggregateOp(aggregate) {\n    return isString(aggregate) && COUNTING_OPS.has(aggregate);\n}\nexport function isMinMaxOp(aggregate) {\n    return isString(aggregate) && contains(['min', 'max'], aggregate);\n}\n/** Additive-based aggregation operations. These can be applied to stack. */\nexport const SUM_OPS = new Set([\n    'count',\n    'sum',\n    'distinct',\n    'valid',\n    'missing'\n]);\n/**\n * Aggregation operators that always produce values within the range [domainMin, domainMax].\n */\nexport const SHARED_DOMAIN_OPS = new Set([\n    'mean',\n    'average',\n    'median',\n    'q1',\n    'q3',\n    'min',\n    'max'\n]);\n//# sourceMappingURL=aggregate.js.map","import { keys } from './util';\nexport const CONDITIONAL_AXIS_PROP_INDEX = {\n    labelAlign: {\n        part: 'labels',\n        vgProp: 'align'\n    },\n    labelBaseline: {\n        part: 'labels',\n        vgProp: 'baseline'\n    },\n    labelColor: {\n        part: 'labels',\n        vgProp: 'fill'\n    },\n    labelFont: {\n        part: 'labels',\n        vgProp: 'font'\n    },\n    labelFontSize: {\n        part: 'labels',\n        vgProp: 'fontSize'\n    },\n    labelFontStyle: {\n        part: 'labels',\n        vgProp: 'fontStyle'\n    },\n    labelFontWeight: {\n        part: 'labels',\n        vgProp: 'fontWeight'\n    },\n    labelOpacity: {\n        part: 'labels',\n        vgProp: 'opacity'\n    },\n    labelOffset: null,\n    labelPadding: null,\n    gridColor: {\n        part: 'grid',\n        vgProp: 'stroke'\n    },\n    gridDash: {\n        part: 'grid',\n        vgProp: 'strokeDash'\n    },\n    gridDashOffset: {\n        part: 'grid',\n        vgProp: 'strokeDashOffset'\n    },\n    gridOpacity: {\n        part: 'grid',\n        vgProp: 'opacity'\n    },\n    gridWidth: {\n        part: 'grid',\n        vgProp: 'strokeWidth'\n    },\n    tickColor: {\n        part: 'ticks',\n        vgProp: 'stroke'\n    },\n    tickDash: {\n        part: 'ticks',\n        vgProp: 'strokeDash'\n    },\n    tickDashOffset: {\n        part: 'ticks',\n        vgProp: 'strokeDashOffset'\n    },\n    tickOpacity: {\n        part: 'ticks',\n        vgProp: 'opacity'\n    },\n    tickSize: null,\n    tickWidth: {\n        part: 'ticks',\n        vgProp: 'strokeWidth'\n    }\n};\nexport function isConditionalAxisValue(v) {\n    return v === null || v === void 0 ? void 0 : v.condition;\n}\nexport const AXIS_PARTS = ['domain', 'grid', 'labels', 'ticks', 'title'];\n/**\n * A dictionary listing whether a certain axis property is applicable for only main axes or only grid axes.\n */\nexport const AXIS_PROPERTY_TYPE = {\n    grid: 'grid',\n    gridCap: 'grid',\n    gridColor: 'grid',\n    gridDash: 'grid',\n    gridDashOffset: 'grid',\n    gridOpacity: 'grid',\n    gridScale: 'grid',\n    gridWidth: 'grid',\n    orient: 'main',\n    bandPosition: 'both',\n    aria: 'main',\n    description: 'main',\n    domain: 'main',\n    domainCap: 'main',\n    domainColor: 'main',\n    domainDash: 'main',\n    domainDashOffset: 'main',\n    domainOpacity: 'main',\n    domainWidth: 'main',\n    format: 'main',\n    formatType: 'main',\n    labelAlign: 'main',\n    labelAngle: 'main',\n    labelBaseline: 'main',\n    labelBound: 'main',\n    labelColor: 'main',\n    labelFlush: 'main',\n    labelFlushOffset: 'main',\n    labelFont: 'main',\n    labelFontSize: 'main',\n    labelFontStyle: 'main',\n    labelFontWeight: 'main',\n    labelLimit: 'main',\n    labelLineHeight: 'main',\n    labelOffset: 'main',\n    labelOpacity: 'main',\n    labelOverlap: 'main',\n    labelPadding: 'main',\n    labels: 'main',\n    labelSeparation: 'main',\n    maxExtent: 'main',\n    minExtent: 'main',\n    offset: 'both',\n    position: 'main',\n    tickCap: 'main',\n    tickColor: 'main',\n    tickDash: 'main',\n    tickDashOffset: 'main',\n    tickMinStep: 'both',\n    tickOffset: 'both',\n    tickOpacity: 'main',\n    tickRound: 'both',\n    ticks: 'main',\n    tickSize: 'main',\n    tickWidth: 'both',\n    title: 'main',\n    titleAlign: 'main',\n    titleAnchor: 'main',\n    titleAngle: 'main',\n    titleBaseline: 'main',\n    titleColor: 'main',\n    titleFont: 'main',\n    titleFontSize: 'main',\n    titleFontStyle: 'main',\n    titleFontWeight: 'main',\n    titleLimit: 'main',\n    titleLineHeight: 'main',\n    titleOpacity: 'main',\n    titlePadding: 'main',\n    titleX: 'main',\n    titleY: 'main',\n    encode: 'both',\n    scale: 'both',\n    tickBand: 'both',\n    tickCount: 'both',\n    tickExtra: 'both',\n    translate: 'both',\n    values: 'both',\n    zindex: 'both' // this is actually set afterward, so it doesn't matter\n};\nexport const COMMON_AXIS_PROPERTIES_INDEX = {\n    orient: 1,\n    aria: 1,\n    bandPosition: 1,\n    description: 1,\n    domain: 1,\n    domainCap: 1,\n    domainColor: 1,\n    domainDash: 1,\n    domainDashOffset: 1,\n    domainOpacity: 1,\n    domainWidth: 1,\n    format: 1,\n    formatType: 1,\n    grid: 1,\n    gridCap: 1,\n    gridColor: 1,\n    gridDash: 1,\n    gridDashOffset: 1,\n    gridOpacity: 1,\n    gridWidth: 1,\n    labelAlign: 1,\n    labelAngle: 1,\n    labelBaseline: 1,\n    labelBound: 1,\n    labelColor: 1,\n    labelFlush: 1,\n    labelFlushOffset: 1,\n    labelFont: 1,\n    labelFontSize: 1,\n    labelFontStyle: 1,\n    labelFontWeight: 1,\n    labelLimit: 1,\n    labelLineHeight: 1,\n    labelOffset: 1,\n    labelOpacity: 1,\n    labelOverlap: 1,\n    labelPadding: 1,\n    labels: 1,\n    labelSeparation: 1,\n    maxExtent: 1,\n    minExtent: 1,\n    offset: 1,\n    position: 1,\n    tickBand: 1,\n    tickCap: 1,\n    tickColor: 1,\n    tickCount: 1,\n    tickDash: 1,\n    tickDashOffset: 1,\n    tickExtra: 1,\n    tickMinStep: 1,\n    tickOffset: 1,\n    tickOpacity: 1,\n    tickRound: 1,\n    ticks: 1,\n    tickSize: 1,\n    tickWidth: 1,\n    title: 1,\n    titleAlign: 1,\n    titleAnchor: 1,\n    titleAngle: 1,\n    titleBaseline: 1,\n    titleColor: 1,\n    titleFont: 1,\n    titleFontSize: 1,\n    titleFontStyle: 1,\n    titleFontWeight: 1,\n    titleLimit: 1,\n    titleLineHeight: 1,\n    titleOpacity: 1,\n    titlePadding: 1,\n    titleX: 1,\n    titleY: 1,\n    translate: 1,\n    values: 1,\n    zindex: 1\n};\nconst AXIS_PROPERTIES_INDEX = Object.assign(Object.assign({}, COMMON_AXIS_PROPERTIES_INDEX), { style: 1, labelExpr: 1, encoding: 1 });\nexport function isAxisProperty(prop) {\n    return !!AXIS_PROPERTIES_INDEX[prop];\n}\n// Export for dependent projects\nexport const AXIS_PROPERTIES = keys(AXIS_PROPERTIES_INDEX);\nconst AXIS_CONFIGS_INDEX = {\n    axis: 1,\n    axisBand: 1,\n    axisBottom: 1,\n    axisDiscrete: 1,\n    axisLeft: 1,\n    axisPoint: 1,\n    axisQuantitative: 1,\n    axisRight: 1,\n    axisTemporal: 1,\n    axisTop: 1,\n    axisX: 1,\n    axisXBand: 1,\n    axisXDiscrete: 1,\n    axisXPoint: 1,\n    axisXQuantitative: 1,\n    axisXTemporal: 1,\n    axisY: 1,\n    axisYBand: 1,\n    axisYDiscrete: 1,\n    axisYPoint: 1,\n    axisYQuantitative: 1,\n    axisYTemporal: 1\n};\nexport const AXIS_CONFIGS = keys(AXIS_CONFIGS_INDEX);\n//# sourceMappingURL=axis.js.map","import { isBoolean, isObject } from 'vega-util';\nimport { COLOR, COLUMN, FILL, FILLOPACITY, OPACITY, ROW, SHAPE, SIZE, STROKE, STROKEDASH, STROKEOPACITY, STROKEWIDTH } from './channel';\nimport { normalizeBin } from './channeldef';\nimport { entries, keys, varName } from './util';\n/**\n * Create a key for the bin configuration. Not for prebinned bin.\n */\nexport function binToString(bin) {\n    if (isBoolean(bin)) {\n        bin = normalizeBin(bin, undefined);\n    }\n    return ('bin' +\n        keys(bin)\n            .map(p => (isParameterExtent(bin[p]) ? varName(`_${p}_${entries(bin[p])}`) : varName(`_${p}_${bin[p]}`)))\n            .join(''));\n}\n/**\n * Vega-Lite should bin the data.\n */\nexport function isBinning(bin) {\n    return bin === true || (isBinParams(bin) && !bin.binned);\n}\n/**\n * The data is already binned and so Vega-Lite should not bin it again.\n */\nexport function isBinned(bin) {\n    return bin === 'binned' || (isBinParams(bin) && bin.binned === true);\n}\nexport function isBinParams(bin) {\n    return isObject(bin);\n}\nexport function isParameterExtent(extent) {\n    return extent === null || extent === void 0 ? void 0 : extent['param'];\n}\nexport function autoMaxBins(channel) {\n    switch (channel) {\n        case ROW:\n        case COLUMN:\n        case SIZE:\n        case COLOR:\n        case FILL:\n        case STROKE:\n        case STROKEWIDTH:\n        case OPACITY:\n        case FILLOPACITY:\n        case STROKEOPACITY:\n        // Facets and Size shouldn't have too many bins\n        // We choose 6 like shape to simplify the rule [falls through]\n        case SHAPE:\n            return 6; // Vega's \"shape\" has 6 distinct values\n        case STROKEDASH:\n            return 4; // We only provide 5 different stroke dash values (but 4 is more effective)\n        default:\n            return 10;\n    }\n}\n//# sourceMappingURL=bin.js.map","/*\n * Constants and utilities for encoding channels (Visual variables)\n * such as 'x', 'y', 'color'.\n */\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { keys } from './util';\n// Facet\nexport const ROW = 'row';\nexport const COLUMN = 'column';\nexport const FACET = 'facet';\n// Position\nexport const X = 'x';\nexport const Y = 'y';\nexport const X2 = 'x2';\nexport const Y2 = 'y2';\n// Position Offset\nexport const XOFFSET = 'xOffset';\nexport const YOFFSET = 'yOffset';\n// Arc-Position\nexport const RADIUS = 'radius';\nexport const RADIUS2 = 'radius2';\nexport const THETA = 'theta';\nexport const THETA2 = 'theta2';\n// Geo Position\nexport const LATITUDE = 'latitude';\nexport const LONGITUDE = 'longitude';\nexport const LATITUDE2 = 'latitude2';\nexport const LONGITUDE2 = 'longitude2';\n// Mark property with scale\nexport const COLOR = 'color';\nexport const FILL = 'fill';\nexport const STROKE = 'stroke';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\nexport const ANGLE = 'angle';\nexport const OPACITY = 'opacity';\nexport const FILLOPACITY = 'fillOpacity';\nexport const STROKEOPACITY = 'strokeOpacity';\nexport const STROKEWIDTH = 'strokeWidth';\nexport const STROKEDASH = 'strokeDash';\n// Non-scale channel\nexport const TEXT = 'text';\nexport const ORDER = 'order';\nexport const DETAIL = 'detail';\nexport const KEY = 'key';\nexport const TOOLTIP = 'tooltip';\nexport const HREF = 'href';\nexport const URL = 'url';\nexport const DESCRIPTION = 'description';\nconst POSITION_CHANNEL_INDEX = {\n    x: 1,\n    y: 1,\n    x2: 1,\n    y2: 1\n};\nconst POLAR_POSITION_CHANNEL_INDEX = {\n    theta: 1,\n    theta2: 1,\n    radius: 1,\n    radius2: 1\n};\nexport function isPolarPositionChannel(c) {\n    return c in POLAR_POSITION_CHANNEL_INDEX;\n}\nconst GEO_POSIITON_CHANNEL_INDEX = {\n    longitude: 1,\n    longitude2: 1,\n    latitude: 1,\n    latitude2: 1\n};\nexport function getPositionChannelFromLatLong(channel) {\n    switch (channel) {\n        case LATITUDE:\n            return 'y';\n        case LATITUDE2:\n            return 'y2';\n        case LONGITUDE:\n            return 'x';\n        case LONGITUDE2:\n            return 'x2';\n    }\n}\nexport function isGeoPositionChannel(c) {\n    return c in GEO_POSIITON_CHANNEL_INDEX;\n}\nexport const GEOPOSITION_CHANNELS = keys(GEO_POSIITON_CHANNEL_INDEX);\nconst UNIT_CHANNEL_INDEX = Object.assign(Object.assign(Object.assign(Object.assign({}, POSITION_CHANNEL_INDEX), POLAR_POSITION_CHANNEL_INDEX), GEO_POSIITON_CHANNEL_INDEX), { xOffset: 1, yOffset: 1, \n    // color\n    color: 1, fill: 1, stroke: 1, \n    // other non-position with scale\n    opacity: 1, fillOpacity: 1, strokeOpacity: 1, strokeWidth: 1, strokeDash: 1, size: 1, angle: 1, shape: 1, \n    // channels without scales\n    order: 1, text: 1, detail: 1, key: 1, tooltip: 1, href: 1, url: 1, description: 1 });\nexport function isColorChannel(channel) {\n    return channel === COLOR || channel === FILL || channel === STROKE;\n}\nconst FACET_CHANNEL_INDEX = {\n    row: 1,\n    column: 1,\n    facet: 1\n};\nexport const FACET_CHANNELS = keys(FACET_CHANNEL_INDEX);\nconst CHANNEL_INDEX = Object.assign(Object.assign({}, UNIT_CHANNEL_INDEX), FACET_CHANNEL_INDEX);\nexport const CHANNELS = keys(CHANNEL_INDEX);\nconst { order: _o, detail: _d, tooltip: _tt1 } = CHANNEL_INDEX, SINGLE_DEF_CHANNEL_INDEX = __rest(CHANNEL_INDEX, [\"order\", \"detail\", \"tooltip\"]);\nconst { row: _r, column: _c, facet: _f } = SINGLE_DEF_CHANNEL_INDEX, SINGLE_DEF_UNIT_CHANNEL_INDEX = __rest(SINGLE_DEF_CHANNEL_INDEX, [\"row\", \"column\", \"facet\"]);\n/**\n * Channels that cannot have an array of channelDef.\n * model.fieldDef, getFieldDef only work for these channels.\n *\n * (The only two channels that can have an array of channelDefs are \"detail\" and \"order\".\n * Since there can be multiple fieldDefs for detail and order, getFieldDef/model.fieldDef\n * are not applicable for them. Similarly, selection projection won't work with \"detail\" and \"order\".)\n */\nexport const SINGLE_DEF_CHANNELS = keys(SINGLE_DEF_CHANNEL_INDEX);\nexport const SINGLE_DEF_UNIT_CHANNELS = keys(SINGLE_DEF_UNIT_CHANNEL_INDEX);\nexport function isSingleDefUnitChannel(str) {\n    return !!SINGLE_DEF_UNIT_CHANNEL_INDEX[str];\n}\nexport function isChannel(str) {\n    return !!CHANNEL_INDEX[str];\n}\nexport const SECONDARY_RANGE_CHANNEL = [X2, Y2, LATITUDE2, LONGITUDE2, THETA2, RADIUS2];\nexport function isSecondaryRangeChannel(c) {\n    const main = getMainRangeChannel(c);\n    return main !== c;\n}\n/**\n * Get the main channel for a range channel. E.g. `x` for `x2`.\n */\nexport function getMainRangeChannel(channel) {\n    switch (channel) {\n        case X2:\n            return X;\n        case Y2:\n            return Y;\n        case LATITUDE2:\n            return LATITUDE;\n        case LONGITUDE2:\n            return LONGITUDE;\n        case THETA2:\n            return THETA;\n        case RADIUS2:\n            return RADIUS;\n    }\n    return channel;\n}\nexport function getVgPositionChannel(channel) {\n    if (isPolarPositionChannel(channel)) {\n        switch (channel) {\n            case THETA:\n                return 'startAngle';\n            case THETA2:\n                return 'endAngle';\n            case RADIUS:\n                return 'outerRadius';\n            case RADIUS2:\n                return 'innerRadius';\n        }\n    }\n    return channel;\n}\n/**\n * Get the main channel for a range channel. E.g. `x` for `x2`.\n */\nexport function getSecondaryRangeChannel(channel) {\n    switch (channel) {\n        case X:\n            return X2;\n        case Y:\n            return Y2;\n        case LATITUDE:\n            return LATITUDE2;\n        case LONGITUDE:\n            return LONGITUDE2;\n        case THETA:\n            return THETA2;\n        case RADIUS:\n            return RADIUS2;\n    }\n    return undefined;\n}\nexport function getSizeChannel(channel) {\n    switch (channel) {\n        case X:\n        case X2:\n            return 'width';\n        case Y:\n        case Y2:\n            return 'height';\n    }\n    return undefined;\n}\n/**\n * Get the main channel for a range channel. E.g. `x` for `x2`.\n */\nexport function getOffsetChannel(channel) {\n    switch (channel) {\n        case X:\n            return 'xOffset';\n        case Y:\n            return 'yOffset';\n        case X2:\n            return 'x2Offset';\n        case Y2:\n            return 'y2Offset';\n        case THETA:\n            return 'thetaOffset';\n        case RADIUS:\n            return 'radiusOffset';\n        case THETA2:\n            return 'theta2Offset';\n        case RADIUS2:\n            return 'radius2Offset';\n    }\n    return undefined;\n}\n/**\n * Get the main channel for a range channel. E.g. `x` for `x2`.\n */\nexport function getOffsetScaleChannel(channel) {\n    switch (channel) {\n        case X:\n            return 'xOffset';\n        case Y:\n            return 'yOffset';\n    }\n    return undefined;\n}\nexport function getMainChannelFromOffsetChannel(channel) {\n    switch (channel) {\n        case 'xOffset':\n            return 'x';\n        case 'yOffset':\n            return 'y';\n    }\n}\n// CHANNELS without COLUMN, ROW\nexport const UNIT_CHANNELS = keys(UNIT_CHANNEL_INDEX);\n// NONPOSITION_CHANNELS = UNIT_CHANNELS without X, Y, X2, Y2;\nconst { x: _x, y: _y, \n// x2 and y2 share the same scale as x and y\nx2: _x2, y2: _y2, \n//\nxOffset: _xo, yOffset: _yo, latitude: _latitude, longitude: _longitude, latitude2: _latitude2, longitude2: _longitude2, theta: _theta, theta2: _theta2, radius: _radius, radius2: _radius2 } = UNIT_CHANNEL_INDEX, \n// The rest of unit channels then have scale\nNONPOSITION_CHANNEL_INDEX = __rest(UNIT_CHANNEL_INDEX, [\"x\", \"y\", \"x2\", \"y2\", \"xOffset\", \"yOffset\", \"latitude\", \"longitude\", \"latitude2\", \"longitude2\", \"theta\", \"theta2\", \"radius\", \"radius2\"]);\nexport const NONPOSITION_CHANNELS = keys(NONPOSITION_CHANNEL_INDEX);\nconst POSITION_SCALE_CHANNEL_INDEX = {\n    x: 1,\n    y: 1\n};\nexport const POSITION_SCALE_CHANNELS = keys(POSITION_SCALE_CHANNEL_INDEX);\nexport function isXorY(channel) {\n    return channel in POSITION_SCALE_CHANNEL_INDEX;\n}\nexport const POLAR_POSITION_SCALE_CHANNEL_INDEX = {\n    theta: 1,\n    radius: 1\n};\nexport const POLAR_POSITION_SCALE_CHANNELS = keys(POLAR_POSITION_SCALE_CHANNEL_INDEX);\nexport function getPositionScaleChannel(sizeType) {\n    return sizeType === 'width' ? X : Y;\n}\nconst OFFSET_SCALE_CHANNEL_INDEX = { xOffset: 1, yOffset: 1 };\nexport const OFFSET_SCALE_CHANNELS = keys(OFFSET_SCALE_CHANNEL_INDEX);\nexport function isXorYOffset(channel) {\n    return channel in OFFSET_SCALE_CHANNEL_INDEX;\n}\n// NON_POSITION_SCALE_CHANNEL = SCALE_CHANNELS without position / offset\nconst { \n// x2 and y2 share the same scale as x and y\n// text and tooltip have format instead of scale,\n// href has neither format, nor scale\ntext: _t, tooltip: _tt, href: _hr, url: _u, description: _al, \n// detail and order have no scale\ndetail: _dd, key: _k, order: _oo } = NONPOSITION_CHANNEL_INDEX, NONPOSITION_SCALE_CHANNEL_INDEX = __rest(NONPOSITION_CHANNEL_INDEX, [\"text\", \"tooltip\", \"href\", \"url\", \"description\", \"detail\", \"key\", \"order\"]);\nexport const NONPOSITION_SCALE_CHANNELS = keys(NONPOSITION_SCALE_CHANNEL_INDEX);\nexport function isNonPositionScaleChannel(channel) {\n    return !!NONPOSITION_CHANNEL_INDEX[channel];\n}\n/**\n * @returns whether Vega supports legends for a particular channel\n */\nexport function supportLegend(channel) {\n    switch (channel) {\n        case COLOR:\n        case FILL:\n        case STROKE:\n        case SIZE:\n        case SHAPE:\n        case OPACITY:\n        case STROKEWIDTH:\n        case STROKEDASH:\n            return true;\n        case FILLOPACITY:\n        case STROKEOPACITY:\n        case ANGLE:\n            return false;\n    }\n}\n// Declare SCALE_CHANNEL_INDEX\nconst SCALE_CHANNEL_INDEX = Object.assign(Object.assign(Object.assign(Object.assign({}, POSITION_SCALE_CHANNEL_INDEX), POLAR_POSITION_SCALE_CHANNEL_INDEX), OFFSET_SCALE_CHANNEL_INDEX), NONPOSITION_SCALE_CHANNEL_INDEX);\n/** List of channels with scales */\nexport const SCALE_CHANNELS = keys(SCALE_CHANNEL_INDEX);\nexport function isScaleChannel(channel) {\n    return !!SCALE_CHANNEL_INDEX[channel];\n}\n/**\n * Return whether a channel supports a particular mark type.\n * @param channel  channel name\n * @param mark the mark type\n * @return whether the mark supports the channel\n */\nexport function supportMark(channel, mark) {\n    return getSupportedMark(channel)[mark];\n}\nconst ALL_MARKS = {\n    // all marks\n    arc: 'always',\n    area: 'always',\n    bar: 'always',\n    circle: 'always',\n    geoshape: 'always',\n    image: 'always',\n    line: 'always',\n    rule: 'always',\n    point: 'always',\n    rect: 'always',\n    square: 'always',\n    trail: 'always',\n    text: 'always',\n    tick: 'always'\n};\nconst { geoshape: _g } = ALL_MARKS, ALL_MARKS_EXCEPT_GEOSHAPE = __rest(ALL_MARKS, [\"geoshape\"]);\n/**\n * Return a dictionary showing whether a channel supports mark type.\n * @param channel\n * @return A dictionary mapping mark types to 'always', 'binned', or undefined\n */\nfunction getSupportedMark(channel) {\n    switch (channel) {\n        case COLOR:\n        case FILL:\n        case STROKE:\n        // falls through\n        case DESCRIPTION:\n        case DETAIL:\n        case KEY:\n        case TOOLTIP:\n        case HREF:\n        case ORDER: // TODO: revise (order might not support rect, which is not stackable?)\n        case OPACITY:\n        case FILLOPACITY:\n        case STROKEOPACITY:\n        case STROKEWIDTH:\n        // falls through\n        case FACET:\n        case ROW: // falls through\n        case COLUMN:\n            return ALL_MARKS;\n        case X:\n        case Y:\n        case XOFFSET:\n        case YOFFSET:\n        case LATITUDE:\n        case LONGITUDE:\n            // all marks except geoshape. geoshape does not use X, Y -- it uses a projection\n            return ALL_MARKS_EXCEPT_GEOSHAPE;\n        case X2:\n        case Y2:\n        case LATITUDE2:\n        case LONGITUDE2:\n            return {\n                area: 'always',\n                bar: 'always',\n                image: 'always',\n                rect: 'always',\n                rule: 'always',\n                circle: 'binned',\n                point: 'binned',\n                square: 'binned',\n                tick: 'binned',\n                line: 'binned',\n                trail: 'binned'\n            };\n        case SIZE:\n            return {\n                point: 'always',\n                tick: 'always',\n                rule: 'always',\n                circle: 'always',\n                square: 'always',\n                bar: 'always',\n                text: 'always',\n                line: 'always',\n                trail: 'always'\n            };\n        case STROKEDASH:\n            return {\n                line: 'always',\n                point: 'always',\n                tick: 'always',\n                rule: 'always',\n                circle: 'always',\n                square: 'always',\n                bar: 'always',\n                geoshape: 'always'\n            };\n        case SHAPE:\n            return { point: 'always', geoshape: 'always' };\n        case TEXT:\n            return { text: 'always' };\n        case ANGLE:\n            return { point: 'always', square: 'always', text: 'always' };\n        case URL:\n            return { image: 'always' };\n        case THETA:\n            return { text: 'always', arc: 'always' };\n        case RADIUS:\n            return { text: 'always', arc: 'always' };\n        case THETA2:\n        case RADIUS2:\n            return { arc: 'always' };\n    }\n}\nexport function rangeType(channel) {\n    switch (channel) {\n        case X:\n        case Y:\n        case THETA:\n        case RADIUS:\n        case XOFFSET:\n        case YOFFSET:\n        case SIZE:\n        case ANGLE:\n        case STROKEWIDTH:\n        case OPACITY:\n        case FILLOPACITY:\n        case STROKEOPACITY:\n        // X2 and Y2 use X and Y scales, so they similarly have continuous range. [falls through]\n        case X2:\n        case Y2:\n        case THETA2:\n        case RADIUS2:\n            return undefined;\n        case FACET:\n        case ROW:\n        case COLUMN:\n        case SHAPE:\n        case STROKEDASH:\n        // TEXT, TOOLTIP, URL, and HREF have no scale but have discrete output [falls through]\n        case TEXT:\n        case TOOLTIP:\n        case HREF:\n        case URL:\n        case DESCRIPTION:\n            return 'discrete';\n        // Color can be either continuous or discrete, depending on scale type.\n        case COLOR:\n        case FILL:\n        case STROKE:\n            return 'flexible';\n        // No scale, no range type.\n        case LATITUDE:\n        case LONGITUDE:\n        case LATITUDE2:\n        case LONGITUDE2:\n        case DETAIL:\n        case KEY:\n        case ORDER:\n            return undefined;\n    }\n}\n//# sourceMappingURL=channel.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { isArray, isBoolean, isNumber, isString } from 'vega-util';\nimport { isAggregateOp, isArgmaxDef, isArgminDef, isCountingAggregateOp } from './aggregate';\nimport { autoMaxBins, binToString, isBinned, isBinning } from './bin';\nimport { ANGLE, COLOR, COLUMN, DESCRIPTION, DETAIL, FACET, FILL, FILLOPACITY, getSizeChannel, HREF, isScaleChannel, isSecondaryRangeChannel, isXorY, KEY, LATITUDE, LATITUDE2, LONGITUDE, LONGITUDE2, OPACITY, ORDER, RADIUS, RADIUS2, ROW, SHAPE, SIZE, STROKE, STROKEDASH, STROKEOPACITY, STROKEWIDTH, TEXT, THETA, THETA2, TOOLTIP, URL, X, X2, XOFFSET, Y, Y2, YOFFSET } from './channel';\nimport { getMarkConfig, getMarkPropOrConfig } from './compile/common';\nimport { isCustomFormatType } from './compile/format';\nimport { dateTimeToExpr, isDateTime } from './datetime';\nimport { isExprRef } from './expr';\nimport * as log from './log';\nimport { isRectBasedMark } from './mark';\nimport { hasDiscreteDomain, isContinuousToDiscrete, SCALE_CATEGORY_INDEX } from './scale';\nimport { isSortByChannel } from './sort';\nimport { isFacetFieldDef } from './spec/facet';\nimport { getTimeUnitParts, isLocalSingleTimeUnit, normalizeTimeUnit, timeUnitToString } from './timeunit';\nimport { getFullName, QUANTITATIVE } from './type';\nimport { flatAccessWithDatum, getFirstDefined, internalField, omit, removePathFromField, replacePathInField, stringify, titleCase } from './util';\nimport { isSignalRef } from './vega.schema';\nexport function isConditionalParameter(c) {\n    return c['param'];\n}\nexport function isRepeatRef(field) {\n    return field && !isString(field) && 'repeat' in field;\n}\nexport function toFieldDefBase(fieldDef) {\n    const { field, timeUnit, bin, aggregate } = fieldDef;\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, (timeUnit ? { timeUnit } : {})), (bin ? { bin } : {})), (aggregate ? { aggregate } : {})), { field });\n}\nexport function isSortableFieldDef(fieldDef) {\n    return 'sort' in fieldDef;\n}\nexport function getBandPosition({ fieldDef, fieldDef2, markDef: mark, config }) {\n    if (isFieldOrDatumDef(fieldDef) && fieldDef.bandPosition !== undefined) {\n        return fieldDef.bandPosition;\n    }\n    if (isFieldDef(fieldDef)) {\n        const { timeUnit, bin } = fieldDef;\n        if (timeUnit && !fieldDef2) {\n            return isRectBasedMark(mark.type) ? 0 : getMarkConfig('timeUnitBandPosition', mark, config);\n        }\n        else if (isBinning(bin)) {\n            return 0.5;\n        }\n    }\n    return undefined;\n}\nexport function getBandSize({ channel, fieldDef, fieldDef2, markDef: mark, config, scaleType, useVlSizeChannel }) {\n    var _a, _b, _c;\n    const sizeChannel = getSizeChannel(channel);\n    const size = getMarkPropOrConfig(useVlSizeChannel ? 'size' : sizeChannel, mark, config, {\n        vgChannel: sizeChannel\n    });\n    if (size !== undefined) {\n        return size;\n    }\n    if (isFieldDef(fieldDef)) {\n        const { timeUnit, bin } = fieldDef;\n        if (timeUnit && !fieldDef2) {\n            return { band: getMarkConfig('timeUnitBandSize', mark, config) };\n        }\n        else if (isBinning(bin) && !hasDiscreteDomain(scaleType)) {\n            return { band: 1 };\n        }\n    }\n    if (isRectBasedMark(mark.type)) {\n        if (scaleType) {\n            if (hasDiscreteDomain(scaleType)) {\n                return ((_a = config[mark.type]) === null || _a === void 0 ? void 0 : _a.discreteBandSize) || { band: 1 };\n            }\n            else {\n                return (_b = config[mark.type]) === null || _b === void 0 ? void 0 : _b.continuousBandSize;\n            }\n        }\n        return (_c = config[mark.type]) === null || _c === void 0 ? void 0 : _c.discreteBandSize;\n    }\n    return undefined;\n}\nexport function hasBandEnd(fieldDef, fieldDef2, markDef, config) {\n    if (isBinning(fieldDef.bin) || (fieldDef.timeUnit && isTypedFieldDef(fieldDef) && fieldDef.type === 'temporal')) {\n        // Need to check bandPosition because non-rect marks (e.g., point) with timeUnit\n        // doesn't have to use bandEnd if there is no bandPosition.\n        return getBandPosition({ fieldDef, fieldDef2, markDef, config }) !== undefined;\n    }\n    return false;\n}\nexport function isConditionalDef(channelDef) {\n    return channelDef && 'condition' in channelDef;\n}\n/**\n * Return if a channelDef is a ConditionalValueDef with ConditionFieldDef\n */\nexport function hasConditionalFieldDef(channelDef) {\n    const condition = channelDef === null || channelDef === void 0 ? void 0 : channelDef['condition'];\n    return !!condition && !isArray(condition) && isFieldDef(condition);\n}\nexport function hasConditionalFieldOrDatumDef(channelDef) {\n    const condition = channelDef === null || channelDef === void 0 ? void 0 : channelDef['condition'];\n    return !!condition && !isArray(condition) && isFieldOrDatumDef(condition);\n}\nexport function hasConditionalValueDef(channelDef) {\n    const condition = channelDef === null || channelDef === void 0 ? void 0 : channelDef['condition'];\n    return !!condition && (isArray(condition) || isValueDef(condition));\n}\nexport function isFieldDef(channelDef) {\n    // TODO: we can't use field in channelDef here as it's somehow failing runtime test\n    return channelDef && (!!channelDef['field'] || channelDef['aggregate'] === 'count');\n}\nexport function channelDefType(channelDef) {\n    return channelDef === null || channelDef === void 0 ? void 0 : channelDef['type'];\n}\nexport function isDatumDef(channelDef) {\n    return channelDef && 'datum' in channelDef;\n}\nexport function isContinuousFieldOrDatumDef(cd) {\n    // TODO: make datum support DateTime object\n    return (isTypedFieldDef(cd) && !isDiscrete(cd)) || isNumericDataDef(cd);\n}\nexport function isQuantitativeFieldOrDatumDef(cd) {\n    // TODO: make datum support DateTime object\n    return channelDefType(cd) === 'quantitative' || isNumericDataDef(cd);\n}\nexport function isNumericDataDef(cd) {\n    return isDatumDef(cd) && isNumber(cd.datum);\n}\nexport function isFieldOrDatumDef(channelDef) {\n    return isFieldDef(channelDef) || isDatumDef(channelDef);\n}\nexport function isTypedFieldDef(channelDef) {\n    return channelDef && ('field' in channelDef || channelDef['aggregate'] === 'count') && 'type' in channelDef;\n}\nexport function isValueDef(channelDef) {\n    return channelDef && 'value' in channelDef && 'value' in channelDef;\n}\nexport function isScaleFieldDef(channelDef) {\n    return channelDef && ('scale' in channelDef || 'sort' in channelDef);\n}\nexport function isPositionFieldOrDatumDef(channelDef) {\n    return channelDef && ('axis' in channelDef || 'stack' in channelDef || 'impute' in channelDef);\n}\nexport function isMarkPropFieldOrDatumDef(channelDef) {\n    return channelDef && 'legend' in channelDef;\n}\nexport function isStringFieldOrDatumDef(channelDef) {\n    return channelDef && ('format' in channelDef || 'formatType' in channelDef);\n}\nexport function toStringFieldDef(fieldDef) {\n    // omit properties that don't exist in string field defs\n    return omit(fieldDef, ['legend', 'axis', 'header', 'scale']);\n}\nfunction isOpFieldDef(fieldDef) {\n    return 'op' in fieldDef;\n}\n/**\n * Get a Vega field reference from a Vega-Lite field def.\n */\nexport function vgField(fieldDef, opt = {}) {\n    var _a, _b, _c;\n    let field = fieldDef.field;\n    const prefix = opt.prefix;\n    let suffix = opt.suffix;\n    let argAccessor = ''; // for accessing argmin/argmax field at the end without getting escaped\n    if (isCount(fieldDef)) {\n        field = internalField('count');\n    }\n    else {\n        let fn;\n        if (!opt.nofn) {\n            if (isOpFieldDef(fieldDef)) {\n                fn = fieldDef.op;\n            }\n            else {\n                const { bin, aggregate, timeUnit } = fieldDef;\n                if (isBinning(bin)) {\n                    fn = binToString(bin);\n                    suffix = ((_a = opt.binSuffix) !== null && _a !== void 0 ? _a : '') + ((_b = opt.suffix) !== null && _b !== void 0 ? _b : '');\n                }\n                else if (aggregate) {\n                    if (isArgmaxDef(aggregate)) {\n                        argAccessor = `[\"${field}\"]`;\n                        field = `argmax_${aggregate.argmax}`;\n                    }\n                    else if (isArgminDef(aggregate)) {\n                        argAccessor = `[\"${field}\"]`;\n                        field = `argmin_${aggregate.argmin}`;\n                    }\n                    else {\n                        fn = String(aggregate);\n                    }\n                }\n                else if (timeUnit) {\n                    fn = timeUnitToString(timeUnit);\n                    suffix = ((!['range', 'mid'].includes(opt.binSuffix) && opt.binSuffix) || '') + ((_c = opt.suffix) !== null && _c !== void 0 ? _c : '');\n                }\n            }\n        }\n        if (fn) {\n            field = field ? `${fn}_${field}` : fn;\n        }\n    }\n    if (suffix) {\n        field = `${field}_${suffix}`;\n    }\n    if (prefix) {\n        field = `${prefix}_${field}`;\n    }\n    if (opt.forAs) {\n        return removePathFromField(field);\n    }\n    else if (opt.expr) {\n        // Expression to access flattened field. No need to escape dots.\n        return flatAccessWithDatum(field, opt.expr) + argAccessor;\n    }\n    else {\n        // We flattened all fields so paths should have become dot.\n        return replacePathInField(field) + argAccessor;\n    }\n}\nexport function isDiscrete(def) {\n    switch (def.type) {\n        case 'nominal':\n        case 'ordinal':\n        case 'geojson':\n            return true;\n        case 'quantitative':\n            return isFieldDef(def) && !!def.bin;\n        case 'temporal':\n            return false;\n    }\n    throw new Error(log.message.invalidFieldType(def.type));\n}\nexport function isDiscretizing(def) {\n    var _a;\n    return isScaleFieldDef(def) && isContinuousToDiscrete((_a = def.scale) === null || _a === void 0 ? void 0 : _a.type);\n}\nexport function isCount(fieldDef) {\n    return fieldDef.aggregate === 'count';\n}\nexport function verbalTitleFormatter(fieldDef, config) {\n    var _a;\n    const { field, bin, timeUnit, aggregate } = fieldDef;\n    if (aggregate === 'count') {\n        return config.countTitle;\n    }\n    else if (isBinning(bin)) {\n        return `${field} (binned)`;\n    }\n    else if (timeUnit) {\n        const unit = (_a = normalizeTimeUnit(timeUnit)) === null || _a === void 0 ? void 0 : _a.unit;\n        if (unit) {\n            return `${field} (${getTimeUnitParts(unit).join('-')})`;\n        }\n    }\n    else if (aggregate) {\n        if (isArgmaxDef(aggregate)) {\n            return `${field} for max ${aggregate.argmax}`;\n        }\n        else if (isArgminDef(aggregate)) {\n            return `${field} for min ${aggregate.argmin}`;\n        }\n        else {\n            return `${titleCase(aggregate)} of ${field}`;\n        }\n    }\n    return field;\n}\nexport function functionalTitleFormatter(fieldDef) {\n    const { aggregate, bin, timeUnit, field } = fieldDef;\n    if (isArgmaxDef(aggregate)) {\n        return `${field} for argmax(${aggregate.argmax})`;\n    }\n    else if (isArgminDef(aggregate)) {\n        return `${field} for argmin(${aggregate.argmin})`;\n    }\n    const timeUnitParams = normalizeTimeUnit(timeUnit);\n    const fn = aggregate || (timeUnitParams === null || timeUnitParams === void 0 ? void 0 : timeUnitParams.unit) || ((timeUnitParams === null || timeUnitParams === void 0 ? void 0 : timeUnitParams.maxbins) && 'timeunit') || (isBinning(bin) && 'bin');\n    if (fn) {\n        return `${fn.toUpperCase()}(${field})`;\n    }\n    else {\n        return field;\n    }\n}\nexport const defaultTitleFormatter = (fieldDef, config) => {\n    switch (config.fieldTitle) {\n        case 'plain':\n            return fieldDef.field;\n        case 'functional':\n            return functionalTitleFormatter(fieldDef);\n        default:\n            return verbalTitleFormatter(fieldDef, config);\n    }\n};\nlet titleFormatter = defaultTitleFormatter;\nexport function setTitleFormatter(formatter) {\n    titleFormatter = formatter;\n}\nexport function resetTitleFormatter() {\n    setTitleFormatter(defaultTitleFormatter);\n}\nexport function title(fieldOrDatumDef, config, { allowDisabling, includeDefault = true }) {\n    var _a, _b;\n    const guideTitle = (_a = getGuide(fieldOrDatumDef)) === null || _a === void 0 ? void 0 : _a.title;\n    if (!isFieldDef(fieldOrDatumDef)) {\n        return guideTitle !== null && guideTitle !== void 0 ? guideTitle : fieldOrDatumDef.title;\n    }\n    const fieldDef = fieldOrDatumDef;\n    const def = includeDefault ? defaultTitle(fieldDef, config) : undefined;\n    if (allowDisabling) {\n        return getFirstDefined(guideTitle, fieldDef.title, def);\n    }\n    else {\n        return (_b = guideTitle !== null && guideTitle !== void 0 ? guideTitle : fieldDef.title) !== null && _b !== void 0 ? _b : def;\n    }\n}\nexport function getGuide(fieldDef) {\n    if (isPositionFieldOrDatumDef(fieldDef) && fieldDef.axis) {\n        return fieldDef.axis;\n    }\n    else if (isMarkPropFieldOrDatumDef(fieldDef) && fieldDef.legend) {\n        return fieldDef.legend;\n    }\n    else if (isFacetFieldDef(fieldDef) && fieldDef.header) {\n        return fieldDef.header;\n    }\n    return undefined;\n}\nexport function defaultTitle(fieldDef, config) {\n    return titleFormatter(fieldDef, config);\n}\nexport function getFormatMixins(fieldDef) {\n    var _a;\n    if (isStringFieldOrDatumDef(fieldDef)) {\n        const { format, formatType } = fieldDef;\n        return { format, formatType };\n    }\n    else {\n        const guide = (_a = getGuide(fieldDef)) !== null && _a !== void 0 ? _a : {};\n        const { format, formatType } = guide;\n        return { format, formatType };\n    }\n}\nexport function defaultType(fieldDef, channel) {\n    var _a;\n    switch (channel) {\n        case 'latitude':\n        case 'longitude':\n            return 'quantitative';\n        case 'row':\n        case 'column':\n        case 'facet':\n        case 'shape':\n        case 'strokeDash':\n            return 'nominal';\n        case 'order':\n            return 'ordinal';\n    }\n    if (isSortableFieldDef(fieldDef) && isArray(fieldDef.sort)) {\n        return 'ordinal';\n    }\n    const { aggregate, bin, timeUnit } = fieldDef;\n    if (timeUnit) {\n        return 'temporal';\n    }\n    if (bin || (aggregate && !isArgmaxDef(aggregate) && !isArgminDef(aggregate))) {\n        return 'quantitative';\n    }\n    if (isScaleFieldDef(fieldDef) && ((_a = fieldDef.scale) === null || _a === void 0 ? void 0 : _a.type)) {\n        switch (SCALE_CATEGORY_INDEX[fieldDef.scale.type]) {\n            case 'numeric':\n            case 'discretizing':\n                return 'quantitative';\n            case 'time':\n                return 'temporal';\n        }\n    }\n    return 'nominal';\n}\n/**\n * Returns the fieldDef -- either from the outer channelDef or from the condition of channelDef.\n * @param channelDef\n */\nexport function getFieldDef(channelDef) {\n    if (isFieldDef(channelDef)) {\n        return channelDef;\n    }\n    else if (hasConditionalFieldDef(channelDef)) {\n        return channelDef.condition;\n    }\n    return undefined;\n}\nexport function getFieldOrDatumDef(channelDef) {\n    if (isFieldOrDatumDef(channelDef)) {\n        return channelDef;\n    }\n    else if (hasConditionalFieldOrDatumDef(channelDef)) {\n        return channelDef.condition;\n    }\n    return undefined;\n}\n/**\n * Convert type to full, lowercase type, or augment the fieldDef with a default type if missing.\n */\nexport function initChannelDef(channelDef, channel, config, opt = {}) {\n    if (isString(channelDef) || isNumber(channelDef) || isBoolean(channelDef)) {\n        const primitiveType = isString(channelDef) ? 'string' : isNumber(channelDef) ? 'number' : 'boolean';\n        log.warn(log.message.primitiveChannelDef(channel, primitiveType, channelDef));\n        return { value: channelDef };\n    }\n    // If a fieldDef contains a field, we need type.\n    if (isFieldOrDatumDef(channelDef)) {\n        return initFieldOrDatumDef(channelDef, channel, config, opt);\n    }\n    else if (hasConditionalFieldOrDatumDef(channelDef)) {\n        return Object.assign(Object.assign({}, channelDef), { \n            // Need to cast as normalizeFieldDef normally return FieldDef, but here we know that it is definitely Condition<FieldDef>\n            condition: initFieldOrDatumDef(channelDef.condition, channel, config, opt) });\n    }\n    return channelDef;\n}\nexport function initFieldOrDatumDef(fd, channel, config, opt) {\n    if (isStringFieldOrDatumDef(fd)) {\n        const { format, formatType } = fd, rest = __rest(fd, [\"format\", \"formatType\"]);\n        if (isCustomFormatType(formatType) && !config.customFormatTypes) {\n            log.warn(log.message.customFormatTypeNotAllowed(channel));\n            return initFieldOrDatumDef(rest, channel, config, opt);\n        }\n    }\n    else {\n        const guideType = isPositionFieldOrDatumDef(fd)\n            ? 'axis'\n            : isMarkPropFieldOrDatumDef(fd)\n                ? 'legend'\n                : isFacetFieldDef(fd)\n                    ? 'header'\n                    : null;\n        if (guideType && fd[guideType]) {\n            const _a = fd[guideType], { format, formatType } = _a, newGuide = __rest(_a, [\"format\", \"formatType\"]);\n            if (isCustomFormatType(formatType) && !config.customFormatTypes) {\n                log.warn(log.message.customFormatTypeNotAllowed(channel));\n                return initFieldOrDatumDef(Object.assign(Object.assign({}, fd), { [guideType]: newGuide }), channel, config, opt);\n            }\n        }\n    }\n    if (isFieldDef(fd)) {\n        return initFieldDef(fd, channel, opt);\n    }\n    return initDatumDef(fd);\n}\nfunction initDatumDef(datumDef) {\n    let type = datumDef['type'];\n    if (type) {\n        return datumDef;\n    }\n    const { datum } = datumDef;\n    type = isNumber(datum) ? 'quantitative' : isString(datum) ? 'nominal' : isDateTime(datum) ? 'temporal' : undefined;\n    return Object.assign(Object.assign({}, datumDef), { type });\n}\nexport function initFieldDef(fd, channel, { compositeMark = false } = {}) {\n    const { aggregate, timeUnit, bin, field } = fd;\n    const fieldDef = Object.assign({}, fd);\n    // Drop invalid aggregate\n    if (!compositeMark && aggregate && !isAggregateOp(aggregate) && !isArgmaxDef(aggregate) && !isArgminDef(aggregate)) {\n        log.warn(log.message.invalidAggregate(aggregate));\n        delete fieldDef.aggregate;\n    }\n    // Normalize Time Unit\n    if (timeUnit) {\n        fieldDef.timeUnit = normalizeTimeUnit(timeUnit);\n    }\n    if (field) {\n        fieldDef.field = `${field}`;\n    }\n    // Normalize bin\n    if (isBinning(bin)) {\n        fieldDef.bin = normalizeBin(bin, channel);\n    }\n    if (isBinned(bin) && !isXorY(channel)) {\n        log.warn(log.message.channelShouldNotBeUsedForBinned(channel));\n    }\n    // Normalize Type\n    if (isTypedFieldDef(fieldDef)) {\n        const { type } = fieldDef;\n        const fullType = getFullName(type);\n        if (type !== fullType) {\n            // convert short type to full type\n            fieldDef.type = fullType;\n        }\n        if (type !== 'quantitative') {\n            if (isCountingAggregateOp(aggregate)) {\n                log.warn(log.message.invalidFieldTypeForCountAggregate(type, aggregate));\n                fieldDef.type = 'quantitative';\n            }\n        }\n    }\n    else if (!isSecondaryRangeChannel(channel)) {\n        // If type is empty / invalid, then augment with default type\n        const newType = defaultType(fieldDef, channel);\n        fieldDef['type'] = newType;\n    }\n    if (isTypedFieldDef(fieldDef)) {\n        const { compatible, warning } = channelCompatibility(fieldDef, channel) || {};\n        if (compatible === false) {\n            log.warn(warning);\n        }\n    }\n    if (isSortableFieldDef(fieldDef) && isString(fieldDef.sort)) {\n        const { sort } = fieldDef;\n        if (isSortByChannel(sort)) {\n            return Object.assign(Object.assign({}, fieldDef), { sort: { encoding: sort } });\n        }\n        const sub = sort.substr(1);\n        if (sort.charAt(0) === '-' && isSortByChannel(sub)) {\n            return Object.assign(Object.assign({}, fieldDef), { sort: { encoding: sub, order: 'descending' } });\n        }\n    }\n    if (isFacetFieldDef(fieldDef)) {\n        const { header } = fieldDef;\n        if (header) {\n            const { orient } = header, rest = __rest(header, [\"orient\"]);\n            if (orient) {\n                return Object.assign(Object.assign({}, fieldDef), { header: Object.assign(Object.assign({}, rest), { labelOrient: header.labelOrient || orient, titleOrient: header.titleOrient || orient }) });\n            }\n        }\n    }\n    return fieldDef;\n}\nexport function normalizeBin(bin, channel) {\n    if (isBoolean(bin)) {\n        return { maxbins: autoMaxBins(channel) };\n    }\n    else if (bin === 'binned') {\n        return {\n            binned: true\n        };\n    }\n    else if (!bin.maxbins && !bin.step) {\n        return Object.assign(Object.assign({}, bin), { maxbins: autoMaxBins(channel) });\n    }\n    else {\n        return bin;\n    }\n}\nconst COMPATIBLE = { compatible: true };\nexport function channelCompatibility(fieldDef, channel) {\n    const type = fieldDef.type;\n    if (type === 'geojson' && channel !== 'shape') {\n        return {\n            compatible: false,\n            warning: `Channel ${channel} should not be used with a geojson data.`\n        };\n    }\n    switch (channel) {\n        case ROW:\n        case COLUMN:\n        case FACET:\n            if (!isDiscrete(fieldDef)) {\n                return {\n                    compatible: false,\n                    warning: log.message.channelShouldBeDiscrete(channel)\n                };\n            }\n            return COMPATIBLE;\n        case X:\n        case Y:\n        case XOFFSET:\n        case YOFFSET:\n        case COLOR:\n        case FILL:\n        case STROKE:\n        case TEXT:\n        case DETAIL:\n        case KEY:\n        case TOOLTIP:\n        case HREF:\n        case URL:\n        case ANGLE:\n        case THETA:\n        case RADIUS:\n        case DESCRIPTION:\n            return COMPATIBLE;\n        case LONGITUDE:\n        case LONGITUDE2:\n        case LATITUDE:\n        case LATITUDE2:\n            if (type !== QUANTITATIVE) {\n                return {\n                    compatible: false,\n                    warning: `Channel ${channel} should be used with a quantitative field only, not ${fieldDef.type} field.`\n                };\n            }\n            return COMPATIBLE;\n        case OPACITY:\n        case FILLOPACITY:\n        case STROKEOPACITY:\n        case STROKEWIDTH:\n        case SIZE:\n        case THETA2:\n        case RADIUS2:\n        case X2:\n        case Y2:\n            if (type === 'nominal' && !fieldDef['sort']) {\n                return {\n                    compatible: false,\n                    warning: `Channel ${channel} should not be used with an unsorted discrete field.`\n                };\n            }\n            return COMPATIBLE;\n        case SHAPE:\n        case STROKEDASH:\n            if (!isDiscrete(fieldDef) && !isDiscretizing(fieldDef)) {\n                return {\n                    compatible: false,\n                    warning: log.message.channelShouldBeDiscreteOrDiscretizing(channel)\n                };\n            }\n            return COMPATIBLE;\n        case ORDER:\n            if (fieldDef.type === 'nominal' && !('sort' in fieldDef)) {\n                return {\n                    compatible: false,\n                    warning: `Channel order is inappropriate for nominal field, which has no inherent order.`\n                };\n            }\n            return COMPATIBLE;\n    }\n}\n/**\n * Check if the field def uses a time format or does not use any format but is temporal\n * (this does not cover field defs that are temporal but use a number format).\n */\nexport function isFieldOrDatumDefForTimeFormat(fieldOrDatumDef) {\n    const { formatType } = getFormatMixins(fieldOrDatumDef);\n    return formatType === 'time' || (!formatType && isTimeFieldDef(fieldOrDatumDef));\n}\n/**\n * Check if field def has type `temporal`. If you want to also cover field defs that use a time format, use `isTimeFormatFieldDef`.\n */\nexport function isTimeFieldDef(def) {\n    return def && (def['type'] === 'temporal' || (isFieldDef(def) && !!def.timeUnit));\n}\n/**\n * Getting a value associated with a fielddef.\n * Convert the value to Vega expression if applicable (for datetime object, or string if the field def is temporal or has timeUnit)\n */\nexport function valueExpr(v, { timeUnit, type, wrapTime, undefinedIfExprNotRequired }) {\n    var _a;\n    const unit = timeUnit && ((_a = normalizeTimeUnit(timeUnit)) === null || _a === void 0 ? void 0 : _a.unit);\n    let isTime = unit || type === 'temporal';\n    let expr;\n    if (isExprRef(v)) {\n        expr = v.expr;\n    }\n    else if (isSignalRef(v)) {\n        expr = v.signal;\n    }\n    else if (isDateTime(v)) {\n        isTime = true;\n        expr = dateTimeToExpr(v);\n    }\n    else if (isString(v) || isNumber(v)) {\n        if (isTime) {\n            expr = `datetime(${stringify(v)})`;\n            if (isLocalSingleTimeUnit(unit)) {\n                // for single timeUnit, we will use dateTimeToExpr to convert number/string to match the timeUnit\n                if ((isNumber(v) && v < 10000) || (isString(v) && isNaN(Date.parse(v)))) {\n                    expr = dateTimeToExpr({ [unit]: v });\n                }\n            }\n        }\n    }\n    if (expr) {\n        return wrapTime && isTime ? `time(${expr})` : expr;\n    }\n    // number or boolean or normal string\n    return undefinedIfExprNotRequired ? undefined : stringify(v);\n}\n/**\n * Standardize value array -- convert each value to Vega expression if applicable\n */\nexport function valueArray(fieldOrDatumDef, values) {\n    const { type } = fieldOrDatumDef;\n    return values.map(v => {\n        const expr = valueExpr(v, {\n            timeUnit: isFieldDef(fieldOrDatumDef) ? fieldOrDatumDef.timeUnit : undefined,\n            type,\n            undefinedIfExprNotRequired: true\n        });\n        // return signal for the expression if we need an expression\n        if (expr !== undefined) {\n            return { signal: expr };\n        }\n        // otherwise just return the original value\n        return v;\n    });\n}\n/**\n * Checks whether a fieldDef for a particular channel requires a computed bin range.\n */\nexport function binRequiresRange(fieldDef, channel) {\n    if (!isBinning(fieldDef.bin)) {\n        console.warn('Only call this method for binned field defs.');\n        return false;\n    }\n    // We need the range only when the user explicitly forces a binned field to be use discrete scale. In this case, bin range is used in axis and legend labels.\n    // We could check whether the axis or legend exists (not disabled) but that seems overkill.\n    return isScaleChannel(channel) && ['ordinal', 'nominal'].includes(fieldDef.type);\n}\n//# sourceMappingURL=channeldef.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { array, isArray } from 'vega-util';\nimport { AXIS_PARTS, AXIS_PROPERTY_TYPE, CONDITIONAL_AXIS_PROP_INDEX, isConditionalAxisValue } from '../../axis';\nimport { POSITION_SCALE_CHANNELS } from '../../channel';\nimport { defaultTitle } from '../../channeldef';\nimport { isText } from '../../title';\nimport { contains, getFirstDefined, isEmpty, replaceAll } from '../../util';\nimport { isSignalRef } from '../../vega.schema';\nimport { exprFromValueRefOrSignalRef } from '../common';\nimport { expression } from '../predicate';\nfunction assembleTitle(title, config) {\n    if (!title) {\n        return undefined;\n    }\n    if (isArray(title) && !isText(title)) {\n        return title.map(fieldDef => defaultTitle(fieldDef, config)).join(', ');\n    }\n    return title;\n}\nfunction setAxisEncode(axis, part, vgProp, vgRef) {\n    var _a, _b, _c;\n    var _d, _e;\n    (_a = axis.encode) !== null && _a !== void 0 ? _a : (axis.encode = {});\n    (_b = (_d = axis.encode)[part]) !== null && _b !== void 0 ? _b : (_d[part] = {});\n    (_c = (_e = axis.encode[part]).update) !== null && _c !== void 0 ? _c : (_e.update = {});\n    // TODO: remove as any after https://github.com/prisma/nexus-prisma/issues/291\n    axis.encode[part].update[vgProp] = vgRef;\n}\nexport function assembleAxis(axisCmpt, kind, config, opt = { header: false }) {\n    var _a, _b;\n    const _c = axisCmpt.combine(), { disable, orient, scale, labelExpr, title, zindex } = _c, axis = __rest(_c, [\"disable\", \"orient\", \"scale\", \"labelExpr\", \"title\", \"zindex\"]);\n    if (disable) {\n        return undefined;\n    }\n    for (const prop in axis) {\n        const propType = AXIS_PROPERTY_TYPE[prop];\n        const propValue = axis[prop];\n        if (propType && propType !== kind && propType !== 'both') {\n            // Remove properties that are not valid for this kind of axis\n            delete axis[prop];\n        }\n        else if (isConditionalAxisValue(propValue)) {\n            // deal with conditional axis value\n            const { condition } = propValue, valueOrSignalRef = __rest(propValue, [\"condition\"]);\n            const conditions = array(condition);\n            const propIndex = CONDITIONAL_AXIS_PROP_INDEX[prop];\n            if (propIndex) {\n                const { vgProp, part } = propIndex;\n                // If there is a corresponding Vega property for the channel,\n                // use Vega's custom axis encoding and delete the original axis property to avoid conflicts\n                const vgRef = [\n                    ...conditions.map(c => {\n                        const { test } = c, valueOrSignalCRef = __rest(c, [\"test\"]);\n                        return Object.assign({ test: expression(null, test) }, valueOrSignalCRef);\n                    }),\n                    valueOrSignalRef\n                ];\n                setAxisEncode(axis, part, vgProp, vgRef);\n                delete axis[prop];\n            }\n            else if (propIndex === null) {\n                // If propIndex is null, this means we support conditional axis property by converting the condition to signal instead.\n                const signalRef = {\n                    signal: conditions\n                        .map(c => {\n                        const { test } = c, valueOrSignalCRef = __rest(c, [\"test\"]);\n                        return `${expression(null, test)} ? ${exprFromValueRefOrSignalRef(valueOrSignalCRef)} : `;\n                    })\n                        .join('') + exprFromValueRefOrSignalRef(valueOrSignalRef)\n                };\n                axis[prop] = signalRef;\n            }\n        }\n        else if (isSignalRef(propValue)) {\n            const propIndex = CONDITIONAL_AXIS_PROP_INDEX[prop];\n            if (propIndex) {\n                const { vgProp, part } = propIndex;\n                setAxisEncode(axis, part, vgProp, propValue);\n                delete axis[prop];\n            } // else do nothing since the property already supports signal\n        }\n        // Do not pass labelAlign/Baseline = null to Vega since it won't pass the schema\n        // Note that we need to use null so the default labelAlign is preserved.\n        if (contains(['labelAlign', 'labelBaseline'], prop) && axis[prop] === null) {\n            delete axis[prop];\n        }\n    }\n    if (kind === 'grid') {\n        if (!axis.grid) {\n            return undefined;\n        }\n        // Remove unnecessary encode block\n        if (axis.encode) {\n            // Only need to keep encode block for grid\n            const { grid } = axis.encode;\n            axis.encode = Object.assign({}, (grid ? { grid } : {}));\n            if (isEmpty(axis.encode)) {\n                delete axis.encode;\n            }\n        }\n        return Object.assign(Object.assign({ scale,\n            orient }, axis), { domain: false, labels: false, aria: false, \n            // Always set min/maxExtent to 0 to ensure that `config.axis*.minExtent` and `config.axis*.maxExtent`\n            // would not affect gridAxis\n            maxExtent: 0, minExtent: 0, ticks: false, zindex: getFirstDefined(zindex, 0) // put grid behind marks by default\n         });\n    }\n    else {\n        // kind === 'main'\n        if (!opt.header && axisCmpt.mainExtracted) {\n            // if mainExtracted has been extracted to a separate facet\n            return undefined;\n        }\n        if (labelExpr !== undefined) {\n            let expr = labelExpr;\n            if (((_b = (_a = axis.encode) === null || _a === void 0 ? void 0 : _a.labels) === null || _b === void 0 ? void 0 : _b.update) && isSignalRef(axis.encode.labels.update.text)) {\n                expr = replaceAll(labelExpr, 'datum.label', axis.encode.labels.update.text.signal);\n            }\n            setAxisEncode(axis, 'labels', 'text', { signal: expr });\n        }\n        if (axis.labelAlign === null) {\n            delete axis.labelAlign;\n        }\n        // Remove unnecessary encode block\n        if (axis.encode) {\n            for (const part of AXIS_PARTS) {\n                if (!axisCmpt.hasAxisPart(part)) {\n                    delete axis.encode[part];\n                }\n            }\n            if (isEmpty(axis.encode)) {\n                delete axis.encode;\n            }\n        }\n        const titleString = assembleTitle(title, config);\n        return Object.assign(Object.assign(Object.assign(Object.assign({ scale,\n            orient, grid: false }, (titleString ? { title: titleString } : {})), axis), (config.aria === false ? { aria: false } : {})), { zindex: getFirstDefined(zindex, 0) // put axis line above marks by default\n         });\n    }\n}\n/**\n * Add axis signals so grid line works correctly\n * (Fix https://github.com/vega/vega-lite/issues/4226)\n */\nexport function assembleAxisSignals(model) {\n    const { axes } = model.component;\n    const signals = [];\n    for (const channel of POSITION_SCALE_CHANNELS) {\n        if (axes[channel]) {\n            for (const axis of axes[channel]) {\n                if (!axis.get('disable') && !axis.get('gridScale')) {\n                    // If there is x-axis but no y-scale for gridScale, need to set height/width so x-axis can draw the grid with the right height. Same for y-axis and width.\n                    const sizeType = channel === 'x' ? 'height' : 'width';\n                    const update = model.getSizeSignalRef(sizeType).signal;\n                    if (sizeType !== update) {\n                        signals.push({\n                            name: sizeType,\n                            update\n                        });\n                    }\n                }\n            }\n        }\n    }\n    return signals;\n}\nexport function assembleAxes(axisComponents, config) {\n    const { x = [], y = [] } = axisComponents;\n    return [\n        ...x.map(a => assembleAxis(a, 'grid', config)),\n        ...y.map(a => assembleAxis(a, 'grid', config)),\n        ...x.map(a => assembleAxis(a, 'main', config)),\n        ...y.map(a => assembleAxis(a, 'main', config))\n    ].filter(a => a); // filter undefined\n}\n//# sourceMappingURL=assemble.js.map","import { COMMON_AXIS_PROPERTIES_INDEX } from '../../axis';\nimport { duplicate, keys } from '../../util';\nimport { isSignalRef } from '../../vega.schema';\nimport { Split } from '../split';\nfunction isFalseOrNull(v) {\n    return v === false || v === null;\n}\nconst AXIS_COMPONENT_PROPERTIES_INDEX = Object.assign(Object.assign({ disable: 1, gridScale: 1, scale: 1 }, COMMON_AXIS_PROPERTIES_INDEX), { labelExpr: 1, encode: 1 });\nexport const AXIS_COMPONENT_PROPERTIES = keys(AXIS_COMPONENT_PROPERTIES_INDEX);\nexport class AxisComponent extends Split {\n    constructor(explicit = {}, implicit = {}, mainExtracted = false) {\n        super();\n        this.explicit = explicit;\n        this.implicit = implicit;\n        this.mainExtracted = mainExtracted;\n    }\n    clone() {\n        return new AxisComponent(duplicate(this.explicit), duplicate(this.implicit), this.mainExtracted);\n    }\n    hasAxisPart(part) {\n        // FIXME(https://github.com/vega/vega-lite/issues/2552) this method can be wrong if users use a Vega theme.\n        if (part === 'axis') {\n            // always has the axis container part\n            return true;\n        }\n        if (part === 'grid' || part === 'title') {\n            return !!this.get(part);\n        }\n        // Other parts are enabled by default, so they should not be false or null.\n        return !isFalseOrNull(this.get(part));\n    }\n    hasOrientSignalRef() {\n        return isSignalRef(this.explicit.orient);\n    }\n}\n//# sourceMappingURL=component.js.map","import { array } from 'vega-util';\nimport { isQuantitative } from '../../scale';\nimport { keys, titleCase } from '../../util';\nimport { isSignalRef } from '../../vega.schema';\nimport { getStyleConfig, signalOrStringValue } from '../common';\nfunction getAxisConfigFromConfigTypes(configTypes, config, channel, orient) {\n    // TODO: add special casing to add conditional value based on orient signal\n    return Object.assign.apply(null, [\n        {},\n        ...configTypes.map(configType => {\n            if (configType === 'axisOrient') {\n                const orient1 = channel === 'x' ? 'bottom' : 'left';\n                const orientConfig1 = config[channel === 'x' ? 'axisBottom' : 'axisLeft'] || {};\n                const orientConfig2 = config[channel === 'x' ? 'axisTop' : 'axisRight'] || {};\n                const props = new Set([...keys(orientConfig1), ...keys(orientConfig2)]);\n                const conditionalOrientAxisConfig = {};\n                for (const prop of props.values()) {\n                    conditionalOrientAxisConfig[prop] = {\n                        // orient is surely signal in this case\n                        signal: `${orient['signal']} === \"${orient1}\" ? ${signalOrStringValue(orientConfig1[prop])} : ${signalOrStringValue(orientConfig2[prop])}`\n                    };\n                }\n                return conditionalOrientAxisConfig;\n            }\n            return config[configType];\n        })\n    ]);\n}\nexport function getAxisConfigs(channel, scaleType, orient, config) {\n    const typeBasedConfigTypes = scaleType === 'band'\n        ? ['axisDiscrete', 'axisBand']\n        : scaleType === 'point'\n            ? ['axisDiscrete', 'axisPoint']\n            : isQuantitative(scaleType)\n                ? ['axisQuantitative']\n                : scaleType === 'time' || scaleType === 'utc'\n                    ? ['axisTemporal']\n                    : [];\n    const axisChannel = channel === 'x' ? 'axisX' : 'axisY';\n    const axisOrient = isSignalRef(orient) ? 'axisOrient' : `axis${titleCase(orient)}`; // axisTop, axisBottom, ...\n    const vlOnlyConfigTypes = [\n        // technically Vega does have axisBand, but if we make another separation here,\n        // it will further introduce complexity in the code\n        ...typeBasedConfigTypes,\n        ...typeBasedConfigTypes.map(c => axisChannel + c.substr(4))\n    ];\n    const vgConfigTypes = ['axis', axisOrient, axisChannel];\n    return {\n        vlOnlyAxisConfig: getAxisConfigFromConfigTypes(vlOnlyConfigTypes, config, channel, orient),\n        vgAxisConfig: getAxisConfigFromConfigTypes(vgConfigTypes, config, channel, orient),\n        axisConfigStyle: getAxisConfigStyle([...vgConfigTypes, ...vlOnlyConfigTypes], config)\n    };\n}\nexport function getAxisConfigStyle(axisConfigTypes, config) {\n    var _a;\n    const toMerge = [{}];\n    for (const configType of axisConfigTypes) {\n        // TODO: add special casing to add conditional value based on orient signal\n        let style = (_a = config[configType]) === null || _a === void 0 ? void 0 : _a.style;\n        if (style) {\n            style = array(style);\n            for (const s of style) {\n                toMerge.push(config.style[s]);\n            }\n        }\n    }\n    return Object.assign.apply(null, toMerge);\n}\nexport function getAxisConfig(property, styleConfigIndex, style, axisConfigs = {}) {\n    var _a;\n    const styleConfig = getStyleConfig(property, style, styleConfigIndex);\n    if (styleConfig !== undefined) {\n        return {\n            configFrom: 'style',\n            configValue: styleConfig\n        };\n    }\n    for (const configFrom of ['vlOnlyAxisConfig', 'vgAxisConfig', 'axisConfigStyle']) {\n        if (((_a = axisConfigs[configFrom]) === null || _a === void 0 ? void 0 : _a[property]) !== undefined) {\n            return { configFrom, configValue: axisConfigs[configFrom][property] };\n        }\n    }\n    return {};\n}\n//# sourceMappingURL=config.js.map","import { getSecondaryRangeChannel } from '../../channel';\nimport { channelDefType, getFieldOrDatumDef, isFieldDef, isPositionFieldOrDatumDef } from '../../channeldef';\nimport { formatCustomType, isCustomFormatType } from '../format';\nexport function labels(model, channel, specifiedLabelsSpec) {\n    var _a;\n    const { encoding, config } = model;\n    const fieldOrDatumDef = (_a = getFieldOrDatumDef(encoding[channel])) !== null && _a !== void 0 ? _a : getFieldOrDatumDef(encoding[getSecondaryRangeChannel(channel)]);\n    const axis = model.axis(channel) || {};\n    const { format, formatType } = axis;\n    if (isCustomFormatType(formatType)) {\n        return Object.assign({ text: formatCustomType({\n                fieldOrDatumDef,\n                field: 'datum.value',\n                format,\n                formatType,\n                config\n            }) }, specifiedLabelsSpec);\n    }\n    else if (format === undefined && formatType === undefined && config.customFormatTypes) {\n        if (channelDefType(fieldOrDatumDef) === 'quantitative') {\n            if (isPositionFieldOrDatumDef(fieldOrDatumDef) &&\n                fieldOrDatumDef.stack === 'normalize' &&\n                config.normalizedNumberFormatType) {\n                return Object.assign({ text: formatCustomType({\n                        fieldOrDatumDef,\n                        field: 'datum.value',\n                        format: config.normalizedNumberFormat,\n                        formatType: config.normalizedNumberFormatType,\n                        config\n                    }) }, specifiedLabelsSpec);\n            }\n            else if (config.numberFormatType) {\n                return Object.assign({ text: formatCustomType({\n                        fieldOrDatumDef,\n                        field: 'datum.value',\n                        format: config.numberFormat,\n                        formatType: config.numberFormatType,\n                        config\n                    }) }, specifiedLabelsSpec);\n            }\n        }\n        if (channelDefType(fieldOrDatumDef) === 'temporal' &&\n            config.timeFormatType &&\n            isFieldDef(fieldOrDatumDef) &&\n            !fieldOrDatumDef.timeUnit) {\n            return Object.assign({ text: formatCustomType({\n                    fieldOrDatumDef,\n                    field: 'datum.value',\n                    format: config.timeFormat,\n                    formatType: config.timeFormatType,\n                    config\n                }) }, specifiedLabelsSpec);\n        }\n    }\n    return specifiedLabelsSpec;\n}\n//# sourceMappingURL=encode.js.map","import { AXIS_PARTS, isAxisProperty, isConditionalAxisValue } from '../../axis';\nimport { POSITION_SCALE_CHANNELS } from '../../channel';\nimport { getFieldOrDatumDef } from '../../channeldef';\nimport { getFirstDefined, isEmpty, keys, normalizeAngle } from '../../util';\nimport { isSignalRef } from '../../vega.schema';\nimport { mergeTitleComponent } from '../common';\nimport { guideEncodeEntry } from '../guide';\nimport { parseGuideResolve } from '../resolve';\nimport { defaultTieBreaker, mergeValuesWithExplicit } from '../split';\nimport { AxisComponent, AXIS_COMPONENT_PROPERTIES } from './component';\nimport { getAxisConfig, getAxisConfigs } from './config';\nimport * as encode from './encode';\nimport { axisRules, defaultOrient, getFieldDefTitle, getLabelAngle } from './properties';\nexport function parseUnitAxes(model) {\n    return POSITION_SCALE_CHANNELS.reduce((axis, channel) => {\n        if (model.component.scales[channel]) {\n            axis[channel] = [parseAxis(channel, model)];\n        }\n        return axis;\n    }, {});\n}\nconst OPPOSITE_ORIENT = {\n    bottom: 'top',\n    top: 'bottom',\n    left: 'right',\n    right: 'left'\n};\nexport function parseLayerAxes(model) {\n    var _a;\n    const { axes, resolve } = model.component;\n    const axisCount = { top: 0, bottom: 0, right: 0, left: 0 };\n    for (const child of model.children) {\n        child.parseAxesAndHeaders();\n        for (const channel of keys(child.component.axes)) {\n            resolve.axis[channel] = parseGuideResolve(model.component.resolve, channel);\n            if (resolve.axis[channel] === 'shared') {\n                // If the resolve says shared (and has not been overridden)\n                // We will try to merge and see if there is a conflict\n                axes[channel] = mergeAxisComponents(axes[channel], child.component.axes[channel]);\n                if (!axes[channel]) {\n                    // If merge returns nothing, there is a conflict so we cannot make the axis shared.\n                    // Thus, mark axis as independent and remove the axis component.\n                    resolve.axis[channel] = 'independent';\n                    delete axes[channel];\n                }\n            }\n        }\n    }\n    // Move axes to layer's axis component and merge shared axes\n    for (const channel of POSITION_SCALE_CHANNELS) {\n        for (const child of model.children) {\n            if (!child.component.axes[channel]) {\n                // skip if the child does not have a particular axis\n                continue;\n            }\n            if (resolve.axis[channel] === 'independent') {\n                // If axes are independent, concat the axisComponent array.\n                axes[channel] = ((_a = axes[channel]) !== null && _a !== void 0 ? _a : []).concat(child.component.axes[channel]);\n                // Automatically adjust orient\n                for (const axisComponent of child.component.axes[channel]) {\n                    const { value: orient, explicit } = axisComponent.getWithExplicit('orient');\n                    if (isSignalRef(orient)) {\n                        continue;\n                    }\n                    if (axisCount[orient] > 0 && !explicit) {\n                        // Change axis orient if the number do not match\n                        const oppositeOrient = OPPOSITE_ORIENT[orient];\n                        if (axisCount[orient] > axisCount[oppositeOrient]) {\n                            axisComponent.set('orient', oppositeOrient, false);\n                        }\n                    }\n                    axisCount[orient]++;\n                    // TODO(https://github.com/vega/vega-lite/issues/2634): automatically add extra offset?\n                }\n            }\n            // After merging, make sure to remove axes from child\n            delete child.component.axes[channel];\n        }\n        // Suppress grid lines for dual axis charts (https://github.com/vega/vega-lite/issues/4676)\n        if (resolve.axis[channel] === 'independent' && axes[channel] && axes[channel].length > 1) {\n            for (const axisCmpt of axes[channel]) {\n                if (!!axisCmpt.get('grid') && !axisCmpt.explicit.grid) {\n                    axisCmpt.implicit.grid = false;\n                }\n            }\n        }\n    }\n}\nfunction mergeAxisComponents(mergedAxisCmpts, childAxisCmpts) {\n    if (mergedAxisCmpts) {\n        // FIXME: this is a bit wrong once we support multiple axes\n        if (mergedAxisCmpts.length !== childAxisCmpts.length) {\n            return undefined; // Cannot merge axis component with different number of axes.\n        }\n        const length = mergedAxisCmpts.length;\n        for (let i = 0; i < length; i++) {\n            const merged = mergedAxisCmpts[i];\n            const child = childAxisCmpts[i];\n            if (!!merged !== !!child) {\n                return undefined;\n            }\n            else if (merged && child) {\n                const mergedOrient = merged.getWithExplicit('orient');\n                const childOrient = child.getWithExplicit('orient');\n                if (mergedOrient.explicit && childOrient.explicit && mergedOrient.value !== childOrient.value) {\n                    // TODO: throw warning if resolve is explicit (We don't have info about explicit/implicit resolve yet.)\n                    // Cannot merge due to inconsistent orient\n                    return undefined;\n                }\n                else {\n                    mergedAxisCmpts[i] = mergeAxisComponent(merged, child);\n                }\n            }\n        }\n    }\n    else {\n        // For first one, return a copy of the child\n        return childAxisCmpts.map(axisComponent => axisComponent.clone());\n    }\n    return mergedAxisCmpts;\n}\nfunction mergeAxisComponent(merged, child) {\n    for (const prop of AXIS_COMPONENT_PROPERTIES) {\n        const mergedValueWithExplicit = mergeValuesWithExplicit(merged.getWithExplicit(prop), child.getWithExplicit(prop), prop, 'axis', \n        // Tie breaker function\n        (v1, v2) => {\n            switch (prop) {\n                case 'title':\n                    return mergeTitleComponent(v1, v2);\n                case 'gridScale':\n                    return {\n                        explicit: v1.explicit,\n                        value: getFirstDefined(v1.value, v2.value)\n                    };\n            }\n            return defaultTieBreaker(v1, v2, prop, 'axis');\n        });\n        merged.setWithExplicit(prop, mergedValueWithExplicit);\n    }\n    return merged;\n}\nfunction isExplicit(value, property, axis, model, channel) {\n    if (property === 'disable') {\n        return axis !== undefined; // if axis is specified or null/false, then its enable/disable state is explicit\n    }\n    axis = axis || {};\n    switch (property) {\n        case 'titleAngle':\n        case 'labelAngle':\n            return value === (isSignalRef(axis.labelAngle) ? axis.labelAngle : normalizeAngle(axis.labelAngle));\n        case 'values':\n            return !!axis.values;\n        // specified axis.values is already respected, but may get transformed.\n        case 'encode':\n            // both VL axis.encoding and axis.labelAngle affect VG axis.encode\n            return !!axis.encoding || !!axis.labelAngle;\n        case 'title':\n            // title can be explicit if fieldDef.title is set\n            if (value === getFieldDefTitle(model, channel)) {\n                return true;\n            }\n    }\n    // Otherwise, things are explicit if the returned value matches the specified property\n    return value === axis[property];\n}\n/**\n * Properties to always include values from config\n */\nconst propsToAlwaysIncludeConfig = new Set([\n    'grid',\n    'translate',\n    // the rest are not axis configs in Vega, but are in VL, so we need to set too.\n    'format',\n    'formatType',\n    'orient',\n    'labelExpr',\n    'tickCount',\n    'position',\n    'tickMinStep'\n]);\nfunction parseAxis(channel, model) {\n    var _a, _b, _c;\n    let axis = model.axis(channel);\n    const axisComponent = new AxisComponent();\n    const fieldOrDatumDef = getFieldOrDatumDef(model.encoding[channel]);\n    const { mark, config } = model;\n    const orient = (axis === null || axis === void 0 ? void 0 : axis.orient) ||\n        ((_a = config[channel === 'x' ? 'axisX' : 'axisY']) === null || _a === void 0 ? void 0 : _a.orient) ||\n        ((_b = config.axis) === null || _b === void 0 ? void 0 : _b.orient) ||\n        defaultOrient(channel);\n    const scaleType = model.getScaleComponent(channel).get('type');\n    const axisConfigs = getAxisConfigs(channel, scaleType, orient, model.config);\n    const disable = axis !== undefined ? !axis : getAxisConfig('disable', config.style, axis === null || axis === void 0 ? void 0 : axis.style, axisConfigs).configValue;\n    axisComponent.set('disable', disable, axis !== undefined);\n    if (disable) {\n        return axisComponent;\n    }\n    axis = axis || {};\n    const labelAngle = getLabelAngle(fieldOrDatumDef, axis, channel, config.style, axisConfigs);\n    const ruleParams = {\n        fieldOrDatumDef,\n        axis,\n        channel,\n        model,\n        scaleType,\n        orient,\n        labelAngle,\n        mark,\n        config\n    };\n    // 1.2. Add properties\n    for (const property of AXIS_COMPONENT_PROPERTIES) {\n        const value = property in axisRules ? axisRules[property](ruleParams) : isAxisProperty(property) ? axis[property] : undefined;\n        const hasValue = value !== undefined;\n        const explicit = isExplicit(value, property, axis, model, channel);\n        if (hasValue && explicit) {\n            axisComponent.set(property, value, explicit);\n        }\n        else {\n            const { configValue = undefined, configFrom = undefined } = isAxisProperty(property) && property !== 'values'\n                ? getAxisConfig(property, config.style, axis.style, axisConfigs)\n                : {};\n            const hasConfigValue = configValue !== undefined;\n            if (hasValue && !hasConfigValue) {\n                // only set property if it is explicitly set or has no config value (otherwise we will accidentally override config)\n                axisComponent.set(property, value, explicit);\n            }\n            else if (\n            // Cases need implicit values\n            // 1. Axis config that aren't available in Vega\n            !(configFrom === 'vgAxisConfig') ||\n                // 2. Certain properties are always included (see `propsToAlwaysIncludeConfig`'s declaration for more details)\n                (propsToAlwaysIncludeConfig.has(property) && hasConfigValue) ||\n                // 3. Conditional axis values and signals\n                isConditionalAxisValue(configValue) ||\n                isSignalRef(configValue)) {\n                // If a config is specified and is conditional, copy conditional value from axis config\n                axisComponent.set(property, configValue, false);\n            }\n        }\n    }\n    // 2) Add guide encode definition groups\n    const axisEncoding = (_c = axis.encoding) !== null && _c !== void 0 ? _c : {};\n    const axisEncode = AXIS_PARTS.reduce((e, part) => {\n        var _a;\n        if (!axisComponent.hasAxisPart(part)) {\n            // No need to create encode for a disabled part.\n            return e;\n        }\n        const axisEncodingPart = guideEncodeEntry((_a = axisEncoding[part]) !== null && _a !== void 0 ? _a : {}, model);\n        const value = part === 'labels' ? encode.labels(model, channel, axisEncodingPart) : axisEncodingPart;\n        if (value !== undefined && !isEmpty(value)) {\n            e[part] = { update: value };\n        }\n        return e;\n    }, {});\n    // FIXME: By having encode as one property, we won't have fine grained encode merging.\n    if (!isEmpty(axisEncode)) {\n        axisComponent.set('encode', axisEncode, !!axis.encoding || axis.labelAngle !== undefined);\n    }\n    return axisComponent;\n}\n//# sourceMappingURL=parse.js.map","import { isArray, isObject } from 'vega-util';\nimport { isBinned, isBinning } from '../../bin';\nimport { X } from '../../channel';\nimport { isDiscrete, isFieldDef, toFieldDefBase, valueArray } from '../../channeldef';\nimport { hasDiscreteDomain } from '../../scale';\nimport { normalizeTimeUnit } from '../../timeunit';\nimport { NOMINAL, ORDINAL } from '../../type';\nimport { contains, normalizeAngle } from '../../util';\nimport { isSignalRef } from '../../vega.schema';\nimport { mergeTitle, mergeTitleFieldDefs } from '../common';\nimport { guideFormat, guideFormatType } from '../format';\nimport { getAxisConfig } from './config';\nexport const axisRules = {\n    scale: ({ model, channel }) => model.scaleName(channel),\n    format: ({ fieldOrDatumDef, config, axis }) => {\n        const { format, formatType } = axis;\n        return guideFormat(fieldOrDatumDef, fieldOrDatumDef.type, format, formatType, config, true);\n    },\n    formatType: ({ axis, fieldOrDatumDef, scaleType }) => {\n        const { formatType } = axis;\n        return guideFormatType(formatType, fieldOrDatumDef, scaleType);\n    },\n    grid: ({ fieldOrDatumDef, axis, scaleType }) => { var _a; return (_a = axis.grid) !== null && _a !== void 0 ? _a : defaultGrid(scaleType, fieldOrDatumDef); },\n    gridScale: ({ model, channel }) => gridScale(model, channel),\n    labelAlign: ({ axis, labelAngle, orient, channel }) => axis.labelAlign || defaultLabelAlign(labelAngle, orient, channel),\n    labelAngle: ({ labelAngle }) => labelAngle,\n    labelBaseline: ({ axis, labelAngle, orient, channel }) => axis.labelBaseline || defaultLabelBaseline(labelAngle, orient, channel),\n    labelFlush: ({ axis, fieldOrDatumDef, channel }) => { var _a; return (_a = axis.labelFlush) !== null && _a !== void 0 ? _a : defaultLabelFlush(fieldOrDatumDef.type, channel); },\n    labelOverlap: ({ axis, fieldOrDatumDef, scaleType }) => {\n        var _a;\n        return (_a = axis.labelOverlap) !== null && _a !== void 0 ? _a : defaultLabelOverlap(fieldOrDatumDef.type, scaleType, isFieldDef(fieldOrDatumDef) && !!fieldOrDatumDef.timeUnit, isFieldDef(fieldOrDatumDef) ? fieldOrDatumDef.sort : undefined);\n    },\n    // we already calculate orient in parse\n    orient: ({ orient }) => orient,\n    tickCount: ({ channel, model, axis, fieldOrDatumDef, scaleType }) => {\n        var _a;\n        const sizeType = channel === 'x' ? 'width' : channel === 'y' ? 'height' : undefined;\n        const size = sizeType ? model.getSizeSignalRef(sizeType) : undefined;\n        return (_a = axis.tickCount) !== null && _a !== void 0 ? _a : defaultTickCount({ fieldOrDatumDef, scaleType, size, values: axis.values });\n    },\n    title: ({ axis, model, channel }) => {\n        if (axis.title !== undefined) {\n            return axis.title;\n        }\n        const fieldDefTitle = getFieldDefTitle(model, channel);\n        if (fieldDefTitle !== undefined) {\n            return fieldDefTitle;\n        }\n        const fieldDef = model.typedFieldDef(channel);\n        const channel2 = channel === 'x' ? 'x2' : 'y2';\n        const fieldDef2 = model.fieldDef(channel2);\n        // If title not specified, store base parts of fieldDef (and fieldDef2 if exists)\n        return mergeTitleFieldDefs(fieldDef ? [toFieldDefBase(fieldDef)] : [], isFieldDef(fieldDef2) ? [toFieldDefBase(fieldDef2)] : []);\n    },\n    values: ({ axis, fieldOrDatumDef }) => values(axis, fieldOrDatumDef),\n    zindex: ({ axis, fieldOrDatumDef, mark }) => { var _a; return (_a = axis.zindex) !== null && _a !== void 0 ? _a : defaultZindex(mark, fieldOrDatumDef); }\n};\n// TODO: we need to refactor this method after we take care of config refactoring\n/**\n * Default rules for whether to show a grid should be shown for a channel.\n * If `grid` is unspecified, the default value is `true` for ordinal scales that are not binned\n */\nexport function defaultGrid(scaleType, fieldDef) {\n    return !hasDiscreteDomain(scaleType) && isFieldDef(fieldDef) && !isBinning(fieldDef === null || fieldDef === void 0 ? void 0 : fieldDef.bin) && !isBinned(fieldDef === null || fieldDef === void 0 ? void 0 : fieldDef.bin);\n}\nexport function gridScale(model, channel) {\n    const gridChannel = channel === 'x' ? 'y' : 'x';\n    if (model.getScaleComponent(gridChannel)) {\n        return model.scaleName(gridChannel);\n    }\n    return undefined;\n}\nexport function getLabelAngle(fieldOrDatumDef, axis, channel, styleConfig, axisConfigs) {\n    const labelAngle = axis === null || axis === void 0 ? void 0 : axis.labelAngle;\n    // try axis value\n    if (labelAngle !== undefined) {\n        return isSignalRef(labelAngle) ? labelAngle : normalizeAngle(labelAngle);\n    }\n    else {\n        // try axis config value\n        const { configValue: angle } = getAxisConfig('labelAngle', styleConfig, axis === null || axis === void 0 ? void 0 : axis.style, axisConfigs);\n        if (angle !== undefined) {\n            return normalizeAngle(angle);\n        }\n        else {\n            // get default value\n            if (channel === X &&\n                contains([NOMINAL, ORDINAL], fieldOrDatumDef.type) &&\n                !(isFieldDef(fieldOrDatumDef) && fieldOrDatumDef.timeUnit)) {\n                return 270;\n            }\n            // no default\n            return undefined;\n        }\n    }\n}\nexport function normalizeAngleExpr(angle) {\n    return `(((${angle.signal} % 360) + 360) % 360)`;\n}\nexport function defaultLabelBaseline(angle, orient, channel, alwaysIncludeMiddle) {\n    if (angle !== undefined) {\n        if (channel === 'x') {\n            if (isSignalRef(angle)) {\n                const a = normalizeAngleExpr(angle);\n                const orientIsTop = isSignalRef(orient) ? `(${orient.signal} === \"top\")` : orient === 'top';\n                return {\n                    signal: `(45 < ${a} && ${a} < 135) || (225 < ${a} && ${a} < 315) ? \"middle\" :` +\n                        `(${a} <= 45 || 315 <= ${a}) === ${orientIsTop} ? \"bottom\" : \"top\"`\n                };\n            }\n            if ((45 < angle && angle < 135) || (225 < angle && angle < 315)) {\n                return 'middle';\n            }\n            if (isSignalRef(orient)) {\n                const op = angle <= 45 || 315 <= angle ? '===' : '!==';\n                return { signal: `${orient.signal} ${op} \"top\" ? \"bottom\" : \"top\"` };\n            }\n            return (angle <= 45 || 315 <= angle) === (orient === 'top') ? 'bottom' : 'top';\n        }\n        else {\n            if (isSignalRef(angle)) {\n                const a = normalizeAngleExpr(angle);\n                const orientIsLeft = isSignalRef(orient) ? `(${orient.signal} === \"left\")` : orient === 'left';\n                const middle = alwaysIncludeMiddle ? '\"middle\"' : 'null';\n                return {\n                    signal: `${a} <= 45 || 315 <= ${a} || (135 <= ${a} && ${a} <= 225) ? ${middle} : (45 <= ${a} && ${a} <= 135) === ${orientIsLeft} ? \"top\" : \"bottom\"`\n                };\n            }\n            if (angle <= 45 || 315 <= angle || (135 <= angle && angle <= 225)) {\n                return alwaysIncludeMiddle ? 'middle' : null;\n            }\n            if (isSignalRef(orient)) {\n                const op = 45 <= angle && angle <= 135 ? '===' : '!==';\n                return { signal: `${orient.signal} ${op} \"left\" ? \"top\" : \"bottom\"` };\n            }\n            return (45 <= angle && angle <= 135) === (orient === 'left') ? 'top' : 'bottom';\n        }\n    }\n    return undefined;\n}\nexport function defaultLabelAlign(angle, orient, channel) {\n    if (angle === undefined) {\n        return undefined;\n    }\n    const isX = channel === 'x';\n    const startAngle = isX ? 0 : 90;\n    const mainOrient = isX ? 'bottom' : 'left';\n    if (isSignalRef(angle)) {\n        const a = normalizeAngleExpr(angle);\n        const orientIsMain = isSignalRef(orient) ? `(${orient.signal} === \"${mainOrient}\")` : orient === mainOrient;\n        return {\n            signal: `(${startAngle ? `(${a} + 90)` : a} % 180 === 0) ? ${isX ? null : '\"center\"'} :` +\n                `(${startAngle} < ${a} && ${a} < ${180 + startAngle}) === ${orientIsMain} ? \"left\" : \"right\"`\n        };\n    }\n    if ((angle + startAngle) % 180 === 0) {\n        // For bottom, use default label align so label flush still works\n        return isX ? null : 'center';\n    }\n    if (isSignalRef(orient)) {\n        const op = startAngle < angle && angle < 180 + startAngle ? '===' : '!==';\n        const orientIsMain = `${orient.signal} ${op} \"${mainOrient}\"`;\n        return {\n            signal: `${orientIsMain} ? \"left\" : \"right\"`\n        };\n    }\n    if ((startAngle < angle && angle < 180 + startAngle) === (orient === mainOrient)) {\n        return 'left';\n    }\n    return 'right';\n}\nexport function defaultLabelFlush(type, channel) {\n    if (channel === 'x' && contains(['quantitative', 'temporal'], type)) {\n        return true;\n    }\n    return undefined;\n}\nexport function defaultLabelOverlap(type, scaleType, hasTimeUnit, sort) {\n    // do not prevent overlap for nominal data because there is no way to infer what the missing labels are\n    if ((hasTimeUnit && !isObject(sort)) || (type !== 'nominal' && type !== 'ordinal')) {\n        if (scaleType === 'log' || scaleType === 'symlog') {\n            return 'greedy';\n        }\n        return true;\n    }\n    return undefined;\n}\nexport function defaultOrient(channel) {\n    return channel === 'x' ? 'bottom' : 'left';\n}\nexport function defaultTickCount({ fieldOrDatumDef, scaleType, size, values: vals }) {\n    var _a;\n    if (!vals && !hasDiscreteDomain(scaleType) && scaleType !== 'log') {\n        if (isFieldDef(fieldOrDatumDef)) {\n            if (isBinning(fieldOrDatumDef.bin)) {\n                // for binned data, we don't want more ticks than maxbins\n                return { signal: `ceil(${size.signal}/10)` };\n            }\n            if (fieldOrDatumDef.timeUnit &&\n                contains(['month', 'hours', 'day', 'quarter'], (_a = normalizeTimeUnit(fieldOrDatumDef.timeUnit)) === null || _a === void 0 ? void 0 : _a.unit)) {\n                return undefined;\n            }\n        }\n        return { signal: `ceil(${size.signal}/40)` };\n    }\n    return undefined;\n}\nexport function getFieldDefTitle(model, channel) {\n    const channel2 = channel === 'x' ? 'x2' : 'y2';\n    const fieldDef = model.fieldDef(channel);\n    const fieldDef2 = model.fieldDef(channel2);\n    const title1 = fieldDef ? fieldDef.title : undefined;\n    const title2 = fieldDef2 ? fieldDef2.title : undefined;\n    if (title1 && title2) {\n        return mergeTitle(title1, title2);\n    }\n    else if (title1) {\n        return title1;\n    }\n    else if (title2) {\n        return title2;\n    }\n    else if (title1 !== undefined) {\n        // falsy value to disable config\n        return title1;\n    }\n    else if (title2 !== undefined) {\n        // falsy value to disable config\n        return title2;\n    }\n    return undefined;\n}\nexport function values(axis, fieldOrDatumDef) {\n    const vals = axis.values;\n    if (isArray(vals)) {\n        return valueArray(fieldOrDatumDef, vals);\n    }\n    else if (isSignalRef(vals)) {\n        return vals;\n    }\n    return undefined;\n}\nexport function defaultZindex(mark, fieldDef) {\n    if (mark === 'rect' && isDiscrete(fieldDef)) {\n        return 1;\n    }\n    return 0;\n}\n//# sourceMappingURL=properties.js.map","import * as log from '../log';\nimport { isAnyConcatSpec, isFacetSpec, isLayerSpec, isUnitSpec } from '../spec';\nimport { ConcatModel } from './concat';\nimport { FacetModel } from './facet';\nimport { LayerModel } from './layer';\nimport { UnitModel } from './unit';\nexport function buildModel(spec, parent, parentGivenName, unitSize, config) {\n    if (isFacetSpec(spec)) {\n        return new FacetModel(spec, parent, parentGivenName, config);\n    }\n    else if (isLayerSpec(spec)) {\n        return new LayerModel(spec, parent, parentGivenName, unitSize, config);\n    }\n    else if (isUnitSpec(spec)) {\n        return new UnitModel(spec, parent, parentGivenName, unitSize, config);\n    }\n    else if (isAnyConcatSpec(spec)) {\n        return new ConcatModel(spec, parent, parentGivenName, config);\n    }\n    throw new Error(log.message.invalidSpec(spec));\n}\n//# sourceMappingURL=buildmodel.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { array, isArray, stringValue } from 'vega-util';\nimport { vgField } from '../channeldef';\nimport { isExprRef } from '../expr';\nimport { isText } from '../title';\nimport { deepEqual, getFirstDefined } from '../util';\nimport { isSignalRef } from '../vega.schema';\nexport const BIN_RANGE_DELIMITER = ' \\u2013 ';\nexport function signalOrValueRefWithCondition(val) {\n    const condition = isArray(val.condition)\n        ? val.condition.map(conditionalSignalRefOrValue)\n        : conditionalSignalRefOrValue(val.condition);\n    return Object.assign(Object.assign({}, signalRefOrValue(val)), { condition });\n}\nexport function signalRefOrValue(value) {\n    if (isExprRef(value)) {\n        const { expr } = value, rest = __rest(value, [\"expr\"]);\n        return Object.assign({ signal: expr }, rest);\n    }\n    return value;\n}\nexport function conditionalSignalRefOrValue(value) {\n    if (isExprRef(value)) {\n        const { expr } = value, rest = __rest(value, [\"expr\"]);\n        return Object.assign({ signal: expr }, rest);\n    }\n    return value;\n}\nexport function signalOrValueRef(value) {\n    if (isExprRef(value)) {\n        const { expr } = value, rest = __rest(value, [\"expr\"]);\n        return Object.assign({ signal: expr }, rest);\n    }\n    if (isSignalRef(value)) {\n        return value;\n    }\n    return value !== undefined ? { value } : undefined;\n}\nexport function exprFromSignalRefOrValue(ref) {\n    if (isSignalRef(ref)) {\n        return ref.signal;\n    }\n    return stringValue(ref);\n}\nexport function exprFromValueRefOrSignalRef(ref) {\n    if (isSignalRef(ref)) {\n        return ref.signal;\n    }\n    return stringValue(ref.value);\n}\nexport function signalOrStringValue(v) {\n    if (isSignalRef(v)) {\n        return v.signal;\n    }\n    return v == null ? null : stringValue(v);\n}\nexport function applyMarkConfig(e, model, propsList) {\n    for (const property of propsList) {\n        const value = getMarkConfig(property, model.markDef, model.config);\n        if (value !== undefined) {\n            e[property] = signalOrValueRef(value);\n        }\n    }\n    return e;\n}\nexport function getStyles(mark) {\n    var _a;\n    return [].concat(mark.type, (_a = mark.style) !== null && _a !== void 0 ? _a : []);\n}\nexport function getMarkPropOrConfig(channel, mark, config, opt = {}) {\n    const { vgChannel, ignoreVgConfig } = opt;\n    if (vgChannel && mark[vgChannel] !== undefined) {\n        return mark[vgChannel];\n    }\n    else if (mark[channel] !== undefined) {\n        return mark[channel];\n    }\n    else if (ignoreVgConfig && (!vgChannel || vgChannel === channel)) {\n        return undefined;\n    }\n    return getMarkConfig(channel, mark, config, opt);\n}\n/**\n * Return property value from style or mark specific config property if exists.\n * Otherwise, return general mark specific config.\n */\nexport function getMarkConfig(channel, mark, config, { vgChannel } = {}) {\n    return getFirstDefined(\n    // style config has highest precedence\n    vgChannel ? getMarkStyleConfig(channel, mark, config.style) : undefined, getMarkStyleConfig(channel, mark, config.style), \n    // then mark-specific config\n    vgChannel ? config[mark.type][vgChannel] : undefined, config[mark.type][channel], // Need to cast because MarkDef doesn't perfectly match with AnyMarkConfig, but if the type isn't available, we'll get nothing here, which is fine\n    // If there is vgChannel, skip vl channel.\n    // For example, vl size for text is vg fontSize, but config.mark.size is only for point size.\n    vgChannel ? config.mark[vgChannel] : config.mark[channel] // Need to cast for the same reason as above\n    );\n}\nexport function getMarkStyleConfig(prop, mark, styleConfigIndex) {\n    return getStyleConfig(prop, getStyles(mark), styleConfigIndex);\n}\nexport function getStyleConfig(p, styles, styleConfigIndex) {\n    styles = array(styles);\n    let value;\n    for (const style of styles) {\n        const styleConfig = styleConfigIndex[style];\n        if (styleConfig && styleConfig[p] !== undefined) {\n            value = styleConfig[p];\n        }\n    }\n    return value;\n}\n/**\n * Return Vega sort parameters (tuple of field and order).\n */\nexport function sortParams(orderDef, fieldRefOption) {\n    return array(orderDef).reduce((s, orderChannelDef) => {\n        var _a;\n        s.field.push(vgField(orderChannelDef, fieldRefOption));\n        s.order.push((_a = orderChannelDef.sort) !== null && _a !== void 0 ? _a : 'ascending');\n        return s;\n    }, { field: [], order: [] });\n}\nexport function mergeTitleFieldDefs(f1, f2) {\n    const merged = [...f1];\n    f2.forEach(fdToMerge => {\n        for (const fieldDef1 of merged) {\n            // If already exists, no need to append to merged array\n            if (deepEqual(fieldDef1, fdToMerge)) {\n                return;\n            }\n        }\n        merged.push(fdToMerge);\n    });\n    return merged;\n}\nexport function mergeTitle(title1, title2) {\n    if (deepEqual(title1, title2) || !title2) {\n        // if titles are the same or title2 is falsy\n        return title1;\n    }\n    else if (!title1) {\n        // if title1 is falsy\n        return title2;\n    }\n    else {\n        return [...array(title1), ...array(title2)].join(', ');\n    }\n}\nexport function mergeTitleComponent(v1, v2) {\n    const v1Val = v1.value;\n    const v2Val = v2.value;\n    if (v1Val == null || v2Val === null) {\n        return {\n            explicit: v1.explicit,\n            value: null\n        };\n    }\n    else if ((isText(v1Val) || isSignalRef(v1Val)) && (isText(v2Val) || isSignalRef(v2Val))) {\n        return {\n            explicit: v1.explicit,\n            value: mergeTitle(v1Val, v2Val)\n        };\n    }\n    else if (isText(v1Val) || isSignalRef(v1Val)) {\n        return {\n            explicit: v1.explicit,\n            value: v1Val\n        };\n    }\n    else if (isText(v2Val) || isSignalRef(v2Val)) {\n        return {\n            explicit: v1.explicit,\n            value: v2Val\n        };\n    }\n    else if (!isText(v1Val) && !isSignalRef(v1Val) && !isText(v2Val) && !isSignalRef(v2Val)) {\n        return {\n            explicit: v1.explicit,\n            value: mergeTitleFieldDefs(v1Val, v2Val)\n        };\n    }\n    /* istanbul ignore next: Condition should not happen -- only for warning in development. */\n    throw new Error('It should never reach here');\n}\n//# sourceMappingURL=common.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { isString, mergeConfig } from 'vega-util';\nimport { getPositionScaleChannel } from '../channel';\nimport * as vlFieldDef from '../channeldef';\nimport { initConfig, stripAndRedirectConfig } from '../config';\nimport * as log from '../log';\nimport { normalize } from '../normalize';\nimport { assembleParameterSignals } from '../parameter';\nimport { extractTopLevelProperties, getFitType, isFitType } from '../spec/toplevel';\nimport { keys } from '../util';\nimport { buildModel } from './buildmodel';\nimport { assembleRootData } from './data/assemble';\nimport { optimizeDataflow } from './data/optimize';\n/**\n * Vega-Lite's main function, for compiling Vega-Lite spec into Vega spec.\n *\n * At a high-level, we make the following transformations in different phases:\n *\n * Input spec\n *     |\n *     |  (Normalization)\n *     v\n * Normalized Spec (Row/Column channels in single-view specs becomes faceted specs, composite marks becomes layered specs.)\n *     |\n *     |  (Build Model)\n *     v\n * A model tree of the spec\n *     |\n *     |  (Parse)\n *     v\n * A model tree with parsed components (intermediate structure of visualization primitives in a format that can be easily merged)\n *     |\n *     | (Optimize)\n *     v\n * A model tree with parsed components with the data component optimized\n *     |\n *     | (Assemble)\n *     v\n * Vega spec\n *\n * @param inputSpec The Vega-Lite specification.\n * @param opt       Optional arguments passed to the Vega-Lite compiler.\n * @returns         An object containing the compiled Vega spec and normalized Vega-Lite spec.\n */\nexport function compile(inputSpec, opt = {}) {\n    // 0. Augment opt with default opts\n    if (opt.logger) {\n        // set the singleton logger to the provided logger\n        log.set(opt.logger);\n    }\n    if (opt.fieldTitle) {\n        // set the singleton field title formatter\n        vlFieldDef.setTitleFormatter(opt.fieldTitle);\n    }\n    try {\n        // 1. Initialize config by deep merging default config with the config provided via option and the input spec.\n        const config = initConfig(mergeConfig(opt.config, inputSpec.config));\n        // 2. Normalize: Convert input spec -> normalized spec\n        // - Decompose all extended unit specs into composition of unit spec. For example, a box plot get expanded into multiple layers of bars, ticks, and rules. The shorthand row/column channel is also expanded to a facet spec.\n        // - Normalize autosize and width or height spec\n        const spec = normalize(inputSpec, config);\n        // 3. Build Model: normalized spec -> Model (a tree structure)\n        // This phases instantiates the models with default config by doing a top-down traversal. This allows us to pass properties that child models derive from their parents via their constructors.\n        // See the abstract `Model` class and its children (UnitModel, LayerModel, FacetModel, ConcatModel) for different types of models.\n        const model = buildModel(spec, null, '', undefined, config);\n        // 4 Parse: Model --> Model with components\n        // Note that components = intermediate representations that are equivalent to Vega specs.\n        // We need these intermediate representation because we need to merge many visualization \"components\" like projections, scales, axes, and legends.\n        // We will later convert these components into actual Vega specs in the assemble phase.\n        // In this phase, we do a bottom-up traversal over the whole tree to\n        // parse for each type of components once (e.g., data, layout, mark, scale).\n        // By doing bottom-up traversal, we start parsing components of unit specs and\n        // then merge child components of parent composite specs.\n        //\n        // Please see inside model.parse() for order of different components parsed.\n        model.parse();\n        // drawDataflow(model.component.data.sources);\n        // 5. Optimize the dataflow. This will modify the data component of the model.\n        optimizeDataflow(model.component.data, model);\n        // drawDataflow(model.component.data.sources);\n        // 6. Assemble: convert model components --> Vega Spec.\n        const vgSpec = assembleTopLevelModel(model, getTopLevelProperties(inputSpec, spec.autosize, config, model), inputSpec.datasets, inputSpec.usermeta);\n        return {\n            spec: vgSpec,\n            normalized: spec\n        };\n    }\n    finally {\n        // Reset the singleton logger if a logger is provided\n        if (opt.logger) {\n            log.reset();\n        }\n        // Reset the singleton field title formatter if provided\n        if (opt.fieldTitle) {\n            vlFieldDef.resetTitleFormatter();\n        }\n    }\n}\nfunction getTopLevelProperties(inputSpec, autosize, config, model) {\n    const width = model.component.layoutSize.get('width');\n    const height = model.component.layoutSize.get('height');\n    if (autosize === undefined) {\n        autosize = { type: 'pad' };\n        if (model.hasAxisOrientSignalRef()) {\n            autosize.resize = true;\n        }\n    }\n    else if (isString(autosize)) {\n        autosize = { type: autosize };\n    }\n    if (width && height && isFitType(autosize.type)) {\n        if (width === 'step' && height === 'step') {\n            log.warn(log.message.droppingFit());\n            autosize.type = 'pad';\n        }\n        else if (width === 'step' || height === 'step') {\n            // effectively XOR, because else if\n            // get step dimension\n            const sizeType = width === 'step' ? 'width' : 'height';\n            // log that we're dropping fit for respective channel\n            log.warn(log.message.droppingFit(getPositionScaleChannel(sizeType)));\n            // setting type to inverse fit (so if we dropped fit-x, type is now fit-y)\n            const inverseSizeType = sizeType === 'width' ? 'height' : 'width';\n            autosize.type = getFitType(inverseSizeType);\n        }\n    }\n    return Object.assign(Object.assign(Object.assign({}, (keys(autosize).length === 1 && autosize.type\n        ? autosize.type === 'pad'\n            ? {}\n            : { autosize: autosize.type }\n        : { autosize })), extractTopLevelProperties(config, false)), extractTopLevelProperties(inputSpec, true));\n}\n/*\n * Assemble the top-level model to a Vega spec.\n *\n * Note: this couldn't be `model.assemble()` since the top-level model\n * needs some special treatment to generate top-level properties.\n */\nfunction assembleTopLevelModel(model, topLevelProperties, datasets = {}, usermeta) {\n    // Config with Vega-Lite only config removed.\n    const vgConfig = model.config ? stripAndRedirectConfig(model.config) : undefined;\n    const data = [].concat(model.assembleSelectionData([]), \n    // only assemble data in the root\n    assembleRootData(model.component.data, datasets));\n    const projections = model.assembleProjections();\n    const title = model.assembleTitle();\n    const style = model.assembleGroupStyle();\n    const encodeEntry = model.assembleGroupEncodeEntry(true);\n    let layoutSignals = model.assembleLayoutSignals();\n    // move width and height signals with values to top level\n    layoutSignals = layoutSignals.filter(signal => {\n        if ((signal.name === 'width' || signal.name === 'height') && signal.value !== undefined) {\n            topLevelProperties[signal.name] = +signal.value;\n            return false;\n        }\n        return true;\n    });\n    const { params } = topLevelProperties, otherTopLevelProps = __rest(topLevelProperties, [\"params\"]);\n    return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({ $schema: 'https://vega.github.io/schema/vega/v5.json' }, (model.description ? { description: model.description } : {})), otherTopLevelProps), (title ? { title } : {})), (style ? { style } : {})), (encodeEntry ? { encode: { update: encodeEntry } } : {})), { data }), (projections.length > 0 ? { projections } : {})), model.assembleGroup([\n        ...layoutSignals,\n        ...model.assembleSelectionTopLevelSignals([]),\n        ...assembleParameterSignals(params)\n    ])), (vgConfig ? { config: vgConfig } : {})), (usermeta ? { usermeta } : {}));\n}\n//# sourceMappingURL=compile.js.map","import * as log from '../log';\nimport { isHConcatSpec, isVConcatSpec } from '../spec';\nimport { keys } from '../util';\nimport { buildModel } from './buildmodel';\nimport { parseData } from './data/parse';\nimport { assembleLayoutSignals } from './layoutsize/assemble';\nimport { parseConcatLayoutSize } from './layoutsize/parse';\nimport { Model } from './model';\nexport class ConcatModel extends Model {\n    constructor(spec, parent, parentGivenName, config) {\n        var _a, _b, _c, _d;\n        super(spec, 'concat', parent, parentGivenName, config, spec.resolve);\n        if (((_b = (_a = spec.resolve) === null || _a === void 0 ? void 0 : _a.axis) === null || _b === void 0 ? void 0 : _b.x) === 'shared' || ((_d = (_c = spec.resolve) === null || _c === void 0 ? void 0 : _c.axis) === null || _d === void 0 ? void 0 : _d.y) === 'shared') {\n            log.warn(log.message.CONCAT_CANNOT_SHARE_AXIS);\n        }\n        this.children = this.getChildren(spec).map((child, i) => {\n            return buildModel(child, this, this.getName(`concat_${i}`), undefined, config);\n        });\n    }\n    parseData() {\n        this.component.data = parseData(this);\n        for (const child of this.children) {\n            child.parseData();\n        }\n    }\n    parseSelections() {\n        // Merge selections up the hierarchy so that they may be referenced\n        // across unit specs. Persist their definitions within each child\n        // to assemble signals which remain within output Vega unit groups.\n        this.component.selection = {};\n        for (const child of this.children) {\n            child.parseSelections();\n            for (const key of keys(child.component.selection)) {\n                this.component.selection[key] = child.component.selection[key];\n            }\n        }\n    }\n    parseMarkGroup() {\n        for (const child of this.children) {\n            child.parseMarkGroup();\n        }\n    }\n    parseAxesAndHeaders() {\n        for (const child of this.children) {\n            child.parseAxesAndHeaders();\n        }\n        // TODO(#2415): support shared axes\n    }\n    getChildren(spec) {\n        if (isVConcatSpec(spec)) {\n            return spec.vconcat;\n        }\n        else if (isHConcatSpec(spec)) {\n            return spec.hconcat;\n        }\n        return spec.concat;\n    }\n    parseLayoutSize() {\n        parseConcatLayoutSize(this);\n    }\n    parseAxisGroup() {\n        return null;\n    }\n    assembleSelectionTopLevelSignals(signals) {\n        return this.children.reduce((sg, child) => child.assembleSelectionTopLevelSignals(sg), signals);\n    }\n    assembleSignals() {\n        this.children.forEach(child => child.assembleSignals());\n        return [];\n    }\n    assembleLayoutSignals() {\n        const layoutSignals = assembleLayoutSignals(this);\n        for (const child of this.children) {\n            layoutSignals.push(...child.assembleLayoutSignals());\n        }\n        return layoutSignals;\n    }\n    assembleSelectionData(data) {\n        return this.children.reduce((db, child) => child.assembleSelectionData(db), data);\n    }\n    assembleMarks() {\n        // only children have marks\n        return this.children.map(child => {\n            const title = child.assembleTitle();\n            const style = child.assembleGroupStyle();\n            const encodeEntry = child.assembleGroupEncodeEntry(false);\n            return Object.assign(Object.assign(Object.assign(Object.assign({ type: 'group', name: child.getName('group') }, (title ? { title } : {})), (style ? { style } : {})), (encodeEntry ? { encode: { update: encodeEntry } } : {})), child.assembleGroup());\n        });\n    }\n    assembleGroupStyle() {\n        return undefined;\n    }\n    assembleDefaultLayout() {\n        const columns = this.layout.columns;\n        return Object.assign(Object.assign({}, (columns != null ? { columns } : {})), { bounds: 'full', \n            // Use align each so it can work with multiple plots with different size\n            align: 'each' });\n    }\n}\n//# sourceMappingURL=concat.js.map","import { isArgmaxDef, isArgminDef } from '../../aggregate';\nimport { getPositionChannelFromLatLong, getSecondaryRangeChannel, isGeoPositionChannel, isScaleChannel } from '../../channel';\nimport { binRequiresRange, hasBandEnd, isScaleFieldDef, isTypedFieldDef, vgField } from '../../channeldef';\nimport * as log from '../../log';\nimport { isFieldRange } from '../../scale';\nimport { duplicate, hash, keys, replacePathInField, setEqual } from '../../util';\nimport { isUnitModel } from '../model';\nimport { DataFlowNode } from './dataflow';\nfunction addDimension(dims, channel, fieldDef, model) {\n    var _a;\n    const channelDef2 = isUnitModel(model) ? model.encoding[getSecondaryRangeChannel(channel)] : undefined;\n    if (isTypedFieldDef(fieldDef) &&\n        isUnitModel(model) &&\n        hasBandEnd(fieldDef, channelDef2, model.markDef, model.config)) {\n        dims.add(vgField(fieldDef, {}));\n        dims.add(vgField(fieldDef, { suffix: 'end' }));\n        if (fieldDef.bin && binRequiresRange(fieldDef, channel)) {\n            dims.add(vgField(fieldDef, { binSuffix: 'range' }));\n        }\n    }\n    else if (isGeoPositionChannel(channel)) {\n        const posChannel = getPositionChannelFromLatLong(channel);\n        dims.add(model.getName(posChannel));\n    }\n    else {\n        dims.add(vgField(fieldDef));\n    }\n    if (isScaleFieldDef(fieldDef) && isFieldRange((_a = fieldDef.scale) === null || _a === void 0 ? void 0 : _a.range)) {\n        dims.add(fieldDef.scale.range.field);\n    }\n    return dims;\n}\nfunction mergeMeasures(parentMeasures, childMeasures) {\n    var _a;\n    for (const field of keys(childMeasures)) {\n        // when we merge a measure, we either have to add an aggregation operator or even a new field\n        const ops = childMeasures[field];\n        for (const op of keys(ops)) {\n            if (field in parentMeasures) {\n                // add operator to existing measure field\n                parentMeasures[field][op] = new Set([...((_a = parentMeasures[field][op]) !== null && _a !== void 0 ? _a : []), ...ops[op]]);\n            }\n            else {\n                parentMeasures[field] = { [op]: ops[op] };\n            }\n        }\n    }\n}\nexport class AggregateNode extends DataFlowNode {\n    /**\n     * @param dimensions string set for dimensions\n     * @param measures dictionary mapping field name => dict of aggregation functions and names to use\n     */\n    constructor(parent, dimensions, measures) {\n        super(parent);\n        this.dimensions = dimensions;\n        this.measures = measures;\n    }\n    clone() {\n        return new AggregateNode(null, new Set(this.dimensions), duplicate(this.measures));\n    }\n    get groupBy() {\n        return this.dimensions;\n    }\n    static makeFromEncoding(parent, model) {\n        let isAggregate = false;\n        model.forEachFieldDef(fd => {\n            if (fd.aggregate) {\n                isAggregate = true;\n            }\n        });\n        const meas = {};\n        const dims = new Set();\n        if (!isAggregate) {\n            // no need to create this node if the model has no aggregation\n            return null;\n        }\n        model.forEachFieldDef((fieldDef, channel) => {\n            var _a, _b, _c, _d;\n            const { aggregate, field } = fieldDef;\n            if (aggregate) {\n                if (aggregate === 'count') {\n                    (_a = meas['*']) !== null && _a !== void 0 ? _a : (meas['*'] = {});\n                    meas['*']['count'] = new Set([vgField(fieldDef, { forAs: true })]);\n                }\n                else {\n                    if (isArgminDef(aggregate) || isArgmaxDef(aggregate)) {\n                        const op = isArgminDef(aggregate) ? 'argmin' : 'argmax';\n                        const argField = aggregate[op];\n                        (_b = meas[argField]) !== null && _b !== void 0 ? _b : (meas[argField] = {});\n                        meas[argField][op] = new Set([vgField({ op, field: argField }, { forAs: true })]);\n                    }\n                    else {\n                        (_c = meas[field]) !== null && _c !== void 0 ? _c : (meas[field] = {});\n                        meas[field][aggregate] = new Set([vgField(fieldDef, { forAs: true })]);\n                    }\n                    // For scale channel with domain === 'unaggregated', add min/max so we can use their union as unaggregated domain\n                    if (isScaleChannel(channel) && model.scaleDomain(channel) === 'unaggregated') {\n                        (_d = meas[field]) !== null && _d !== void 0 ? _d : (meas[field] = {});\n                        meas[field]['min'] = new Set([vgField({ field, aggregate: 'min' }, { forAs: true })]);\n                        meas[field]['max'] = new Set([vgField({ field, aggregate: 'max' }, { forAs: true })]);\n                    }\n                }\n            }\n            else {\n                addDimension(dims, channel, fieldDef, model);\n            }\n        });\n        if (dims.size + keys(meas).length === 0) {\n            return null;\n        }\n        return new AggregateNode(parent, dims, meas);\n    }\n    static makeFromTransform(parent, t) {\n        var _a, _b, _c;\n        const dims = new Set();\n        const meas = {};\n        for (const s of t.aggregate) {\n            const { op, field, as } = s;\n            if (op) {\n                if (op === 'count') {\n                    (_a = meas['*']) !== null && _a !== void 0 ? _a : (meas['*'] = {});\n                    meas['*']['count'] = new Set([as ? as : vgField(s, { forAs: true })]);\n                }\n                else {\n                    (_b = meas[field]) !== null && _b !== void 0 ? _b : (meas[field] = {});\n                    meas[field][op] = new Set([as ? as : vgField(s, { forAs: true })]);\n                }\n            }\n        }\n        for (const s of (_c = t.groupby) !== null && _c !== void 0 ? _c : []) {\n            dims.add(s);\n        }\n        if (dims.size + keys(meas).length === 0) {\n            return null;\n        }\n        return new AggregateNode(parent, dims, meas);\n    }\n    merge(other) {\n        if (setEqual(this.dimensions, other.dimensions)) {\n            mergeMeasures(this.measures, other.measures);\n            return true;\n        }\n        log.debug('different dimensions, cannot merge');\n        return false;\n    }\n    addDimensions(fields) {\n        fields.forEach(this.dimensions.add, this.dimensions);\n    }\n    dependentFields() {\n        return new Set([...this.dimensions, ...keys(this.measures)]);\n    }\n    producedFields() {\n        const out = new Set();\n        for (const field of keys(this.measures)) {\n            for (const op of keys(this.measures[field])) {\n                const m = this.measures[field][op];\n                if (m.size === 0) {\n                    out.add(`${op}_${field}`);\n                }\n                else {\n                    m.forEach(out.add, out);\n                }\n            }\n        }\n        return out;\n    }\n    hash() {\n        return `Aggregate ${hash({ dimensions: this.dimensions, measures: this.measures })}`;\n    }\n    assemble() {\n        const ops = [];\n        const fields = [];\n        const as = [];\n        for (const field of keys(this.measures)) {\n            for (const op of keys(this.measures[field])) {\n                for (const alias of this.measures[field][op]) {\n                    as.push(alias);\n                    ops.push(op);\n                    fields.push(field === '*' ? null : replacePathInField(field));\n                }\n            }\n        }\n        const result = {\n            type: 'aggregate',\n            groupby: [...this.dimensions].map(replacePathInField),\n            ops,\n            fields,\n            as\n        };\n        return result;\n    }\n}\n//# sourceMappingURL=aggregate.js.map","import { isUrlData } from '../../data';\nimport { AggregateNode } from './aggregate';\nimport { BinNode } from './bin';\nimport { CalculateNode } from './calculate';\nimport { OutputNode } from './dataflow';\nimport { DensityTransformNode } from './density';\nimport { FacetNode } from './facet';\nimport { FilterNode } from './filter';\nimport { FilterInvalidNode } from './filterinvalid';\nimport { FlattenTransformNode } from './flatten';\nimport { FoldTransformNode } from './fold';\nimport { ParseNode } from './formatparse';\nimport { GeoJSONNode } from './geojson';\nimport { GeoPointNode } from './geopoint';\nimport { GraticuleNode } from './graticule';\nimport { IdentifierNode } from './identifier';\nimport { ImputeNode } from './impute';\nimport { JoinAggregateTransformNode } from './joinaggregate';\nimport { LoessTransformNode } from './loess';\nimport { LookupNode } from './lookup';\nimport { QuantileTransformNode } from './quantile';\nimport { RegressionTransformNode } from './regression';\nimport { PivotTransformNode } from './pivot';\nimport { SampleTransformNode } from './sample';\nimport { SequenceNode } from './sequence';\nimport { SourceNode } from './source';\nimport { StackNode } from './stack';\nimport { TimeUnitNode } from './timeunit';\nimport { WindowTransformNode } from './window';\nfunction makeWalkTree(data) {\n    // to name datasources\n    let datasetIndex = 0;\n    /**\n     * Recursively walk down the tree.\n     */\n    function walkTree(node, dataSource) {\n        var _a;\n        if (node instanceof SourceNode) {\n            // If the source is a named data source or a data source with values, we need\n            // to put it in a different data source. Otherwise, Vega may override the data.\n            if (!node.isGenerator && !isUrlData(node.data)) {\n                data.push(dataSource);\n                const newData = {\n                    name: null,\n                    source: dataSource.name,\n                    transform: []\n                };\n                dataSource = newData;\n            }\n        }\n        if (node instanceof ParseNode) {\n            if (node.parent instanceof SourceNode && !dataSource.source) {\n                // If node's parent is a root source and the data source does not refer to another data source, use normal format parse\n                dataSource.format = Object.assign(Object.assign({}, ((_a = dataSource.format) !== null && _a !== void 0 ? _a : {})), { parse: node.assembleFormatParse() });\n                // add calculates for all nested fields\n                dataSource.transform.push(...node.assembleTransforms(true));\n            }\n            else {\n                // Otherwise use Vega expression to parse\n                dataSource.transform.push(...node.assembleTransforms());\n            }\n        }\n        if (node instanceof FacetNode) {\n            if (!dataSource.name) {\n                dataSource.name = `data_${datasetIndex++}`;\n            }\n            if (!dataSource.source || dataSource.transform.length > 0) {\n                data.push(dataSource);\n                node.data = dataSource.name;\n            }\n            else {\n                node.data = dataSource.source;\n            }\n            data.push(...node.assemble());\n            // break here because the rest of the tree has to be taken care of by the facet.\n            return;\n        }\n        if (node instanceof GraticuleNode ||\n            node instanceof SequenceNode ||\n            node instanceof FilterInvalidNode ||\n            node instanceof FilterNode ||\n            node instanceof CalculateNode ||\n            node instanceof GeoPointNode ||\n            node instanceof AggregateNode ||\n            node instanceof LookupNode ||\n            node instanceof WindowTransformNode ||\n            node instanceof JoinAggregateTransformNode ||\n            node instanceof FoldTransformNode ||\n            node instanceof FlattenTransformNode ||\n            node instanceof DensityTransformNode ||\n            node instanceof LoessTransformNode ||\n            node instanceof QuantileTransformNode ||\n            node instanceof RegressionTransformNode ||\n            node instanceof IdentifierNode ||\n            node instanceof SampleTransformNode ||\n            node instanceof PivotTransformNode) {\n            dataSource.transform.push(node.assemble());\n        }\n        if (node instanceof BinNode ||\n            node instanceof TimeUnitNode ||\n            node instanceof ImputeNode ||\n            node instanceof StackNode ||\n            node instanceof GeoJSONNode) {\n            dataSource.transform.push(...node.assemble());\n        }\n        if (node instanceof OutputNode) {\n            if (dataSource.source && dataSource.transform.length === 0) {\n                node.setSource(dataSource.source);\n            }\n            else if (node.parent instanceof OutputNode) {\n                // Note that an output node may be required but we still do not assemble a\n                // separate data source for it.\n                node.setSource(dataSource.name);\n            }\n            else {\n                if (!dataSource.name) {\n                    dataSource.name = `data_${datasetIndex++}`;\n                }\n                // Here we set the name of the datasource we generated. From now on\n                // other assemblers can use it.\n                node.setSource(dataSource.name);\n                // if this node has more than one child, we will add a datasource automatically\n                if (node.numChildren() === 1) {\n                    data.push(dataSource);\n                    const newData = {\n                        name: null,\n                        source: dataSource.name,\n                        transform: []\n                    };\n                    dataSource = newData;\n                }\n            }\n        }\n        switch (node.numChildren()) {\n            case 0:\n                // done\n                if (node instanceof OutputNode && (!dataSource.source || dataSource.transform.length > 0)) {\n                    // do not push empty datasources that are simply references\n                    data.push(dataSource);\n                }\n                break;\n            case 1:\n                walkTree(node.children[0], dataSource);\n                break;\n            default: {\n                if (!dataSource.name) {\n                    dataSource.name = `data_${datasetIndex++}`;\n                }\n                let source = dataSource.name;\n                if (!dataSource.source || dataSource.transform.length > 0) {\n                    data.push(dataSource);\n                }\n                else {\n                    source = dataSource.source;\n                }\n                for (const child of node.children) {\n                    const newData = {\n                        name: null,\n                        source,\n                        transform: []\n                    };\n                    walkTree(child, newData);\n                }\n                break;\n            }\n        }\n    }\n    return walkTree;\n}\n/**\n * Assemble data sources that are derived from faceted data.\n */\nexport function assembleFacetData(root) {\n    const data = [];\n    const walkTree = makeWalkTree(data);\n    for (const child of root.children) {\n        walkTree(child, {\n            source: root.name,\n            name: null,\n            transform: []\n        });\n    }\n    return data;\n}\n/**\n * Create Vega data array from a given compiled model and append all of them to the given array\n *\n * @param  model\n * @param  data array\n * @return modified data array\n */\nexport function assembleRootData(dataComponent, datasets) {\n    var _a, _b;\n    const data = [];\n    // dataComponent.sources.forEach(debug);\n    // draw(dataComponent.sources);\n    const walkTree = makeWalkTree(data);\n    let sourceIndex = 0;\n    for (const root of dataComponent.sources) {\n        // assign a name if the source does not have a name yet\n        if (!root.hasName()) {\n            root.dataName = `source_${sourceIndex++}`;\n        }\n        const newData = root.assemble();\n        walkTree(root, newData);\n    }\n    // remove empty transform arrays for cleaner output\n    for (const d of data) {\n        if (d.transform.length === 0) {\n            delete d.transform;\n        }\n    }\n    // move sources without transforms (the ones that are potentially used in lookups) to the beginning\n    let whereTo = 0;\n    for (const [i, d] of data.entries()) {\n        if (((_a = d.transform) !== null && _a !== void 0 ? _a : []).length === 0 && !d.source) {\n            data.splice(whereTo++, 0, data.splice(i, 1)[0]);\n        }\n    }\n    // now fix the from references in lookup transforms\n    for (const d of data) {\n        for (const t of (_b = d.transform) !== null && _b !== void 0 ? _b : []) {\n            if (t.type === 'lookup') {\n                t.from = dataComponent.outputNodes[t.from].getSource();\n            }\n        }\n    }\n    // inline values for datasets that are in the datastore\n    for (const d of data) {\n        if (d.name in datasets) {\n            d.values = datasets[d.name];\n        }\n    }\n    return data;\n}\n//# sourceMappingURL=assemble.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { isString } from 'vega-util';\nimport { binToString, isBinning, isParameterExtent } from '../../bin';\nimport { binRequiresRange, isTypedFieldDef, normalizeBin, vgField } from '../../channeldef';\nimport { duplicate, hash, isEmpty, keys, replacePathInField, unique, vals } from '../../util';\nimport { binFormatExpression } from '../format';\nimport { isUnitModel } from '../model';\nimport { parseSelectionExtent } from '../selection/parse';\nimport { DataFlowNode } from './dataflow';\nfunction rangeFormula(model, fieldDef, channel, config) {\n    var _a, _b;\n    if (binRequiresRange(fieldDef, channel)) {\n        // read format from axis or legend, if there is no format then use config.numberFormat\n        const guide = isUnitModel(model)\n            ? (_b = (_a = model.axis(channel)) !== null && _a !== void 0 ? _a : model.legend(channel)) !== null && _b !== void 0 ? _b : {}\n            : {};\n        const startField = vgField(fieldDef, { expr: 'datum' });\n        const endField = vgField(fieldDef, { expr: 'datum', binSuffix: 'end' });\n        return {\n            formulaAs: vgField(fieldDef, { binSuffix: 'range', forAs: true }),\n            formula: binFormatExpression(startField, endField, guide.format, guide.formatType, config)\n        };\n    }\n    return {};\n}\nfunction binKey(bin, field) {\n    return `${binToString(bin)}_${field}`;\n}\nfunction getSignalsFromModel(model, key) {\n    return {\n        signal: model.getName(`${key}_bins`),\n        extentSignal: model.getName(`${key}_extent`)\n    };\n}\nexport function getBinSignalName(model, field, bin) {\n    var _a;\n    const normalizedBin = (_a = normalizeBin(bin, undefined)) !== null && _a !== void 0 ? _a : {};\n    const key = binKey(normalizedBin, field);\n    return model.getName(`${key}_bins`);\n}\nfunction isBinTransform(t) {\n    return 'as' in t;\n}\nfunction createBinComponent(t, bin, model) {\n    let as;\n    let span;\n    if (isBinTransform(t)) {\n        as = isString(t.as) ? [t.as, `${t.as}_end`] : [t.as[0], t.as[1]];\n    }\n    else {\n        as = [vgField(t, { forAs: true }), vgField(t, { binSuffix: 'end', forAs: true })];\n    }\n    const normalizedBin = Object.assign({}, normalizeBin(bin, undefined));\n    const key = binKey(normalizedBin, t.field);\n    const { signal, extentSignal } = getSignalsFromModel(model, key);\n    if (isParameterExtent(normalizedBin.extent)) {\n        const ext = normalizedBin.extent;\n        span = parseSelectionExtent(model, ext.param, ext);\n        delete normalizedBin.extent; // Vega-Lite selection extent map to Vega's span property.\n    }\n    const binComponent = Object.assign(Object.assign(Object.assign({ bin: normalizedBin, field: t.field, as: [as] }, (signal ? { signal } : {})), (extentSignal ? { extentSignal } : {})), (span ? { span } : {}));\n    return { key, binComponent };\n}\nexport class BinNode extends DataFlowNode {\n    constructor(parent, bins) {\n        super(parent);\n        this.bins = bins;\n    }\n    clone() {\n        return new BinNode(null, duplicate(this.bins));\n    }\n    static makeFromEncoding(parent, model) {\n        const bins = model.reduceFieldDef((binComponentIndex, fieldDef, channel) => {\n            if (isTypedFieldDef(fieldDef) && isBinning(fieldDef.bin)) {\n                const { key, binComponent } = createBinComponent(fieldDef, fieldDef.bin, model);\n                binComponentIndex[key] = Object.assign(Object.assign(Object.assign({}, binComponent), binComponentIndex[key]), rangeFormula(model, fieldDef, channel, model.config));\n            }\n            return binComponentIndex;\n        }, {});\n        if (isEmpty(bins)) {\n            return null;\n        }\n        return new BinNode(parent, bins);\n    }\n    /**\n     * Creates a bin node from BinTransform.\n     * The optional parameter should provide\n     */\n    static makeFromTransform(parent, t, model) {\n        const { key, binComponent } = createBinComponent(t, t.bin, model);\n        return new BinNode(parent, {\n            [key]: binComponent\n        });\n    }\n    /**\n     * Merge bin nodes. This method either integrates the bin config from the other node\n     * or if this node already has a bin config, renames the corresponding signal in the model.\n     */\n    merge(other, renameSignal) {\n        for (const key of keys(other.bins)) {\n            if (key in this.bins) {\n                renameSignal(other.bins[key].signal, this.bins[key].signal);\n                // Ensure that we don't have duplicate names for signal pairs\n                this.bins[key].as = unique([...this.bins[key].as, ...other.bins[key].as], hash);\n            }\n            else {\n                this.bins[key] = other.bins[key];\n            }\n        }\n        for (const child of other.children) {\n            other.removeChild(child);\n            child.parent = this;\n        }\n        other.remove();\n    }\n    producedFields() {\n        return new Set(vals(this.bins)\n            .map(c => c.as)\n            .flat(2));\n    }\n    dependentFields() {\n        return new Set(vals(this.bins).map(c => c.field));\n    }\n    hash() {\n        return `Bin ${hash(this.bins)}`;\n    }\n    assemble() {\n        return vals(this.bins).flatMap(bin => {\n            const transform = [];\n            const [binAs, ...remainingAs] = bin.as;\n            const _a = bin.bin, { extent } = _a, params = __rest(_a, [\"extent\"]);\n            const binTrans = Object.assign(Object.assign(Object.assign({ type: 'bin', field: replacePathInField(bin.field), as: binAs, signal: bin.signal }, (!isParameterExtent(extent) ? { extent } : { extent: null })), (bin.span ? { span: { signal: `span(${bin.span})` } } : {})), params);\n            if (!extent && bin.extentSignal) {\n                transform.push({\n                    type: 'extent',\n                    field: replacePathInField(bin.field),\n                    signal: bin.extentSignal\n                });\n                binTrans.extent = { signal: bin.extentSignal };\n            }\n            transform.push(binTrans);\n            for (const as of remainingAs) {\n                for (let i = 0; i < 2; i++) {\n                    transform.push({\n                        type: 'formula',\n                        expr: vgField({ field: binAs[i] }, { expr: 'datum' }),\n                        as: as[i]\n                    });\n                }\n            }\n            if (bin.formula) {\n                transform.push({\n                    type: 'formula',\n                    expr: bin.formula,\n                    as: bin.formulaAs\n                });\n            }\n            return transform;\n        });\n    }\n}\n//# sourceMappingURL=bin.js.map","import { isScaleFieldDef, vgField } from '../../channeldef';\nimport { fieldFilterExpression } from '../../predicate';\nimport { isSortArray } from '../../sort';\nimport { duplicate, hash } from '../../util';\nimport { DataFlowNode } from './dataflow';\nimport { getDependentFields } from './expressions';\nexport class CalculateNode extends DataFlowNode {\n    constructor(parent, transform) {\n        super(parent);\n        this.transform = transform;\n        this._dependentFields = getDependentFields(this.transform.calculate);\n    }\n    clone() {\n        return new CalculateNode(null, duplicate(this.transform));\n    }\n    static parseAllForSortIndex(parent, model) {\n        // get all the encoding with sort fields from model\n        model.forEachFieldDef((fieldDef, channel) => {\n            if (!isScaleFieldDef(fieldDef)) {\n                return;\n            }\n            if (isSortArray(fieldDef.sort)) {\n                const { field, timeUnit } = fieldDef;\n                const sort = fieldDef.sort;\n                // generate `datum[\"a\"] === val0 ? 0 : datum[\"a\"] === val1 ? 1 : ... : n` via FieldEqualPredicate\n                const calculate = sort\n                    .map((sortValue, i) => {\n                    return `${fieldFilterExpression({ field, timeUnit, equal: sortValue })} ? ${i} : `;\n                })\n                    .join('') + sort.length;\n                parent = new CalculateNode(parent, {\n                    calculate,\n                    as: sortArrayIndexField(fieldDef, channel, { forAs: true })\n                });\n            }\n        });\n        return parent;\n    }\n    producedFields() {\n        return new Set([this.transform.as]);\n    }\n    dependentFields() {\n        return this._dependentFields;\n    }\n    assemble() {\n        return {\n            type: 'formula',\n            expr: this.transform.calculate,\n            as: this.transform.as\n        };\n    }\n    hash() {\n        return `Calculate ${hash(this.transform)}`;\n    }\n}\nexport function sortArrayIndexField(fieldDef, channel, opt) {\n    return vgField(fieldDef, Object.assign({ prefix: channel, suffix: 'sort_index' }, (opt !== null && opt !== void 0 ? opt : {})));\n}\n//# sourceMappingURL=calculate.js.map","import * as log from '../../log';\nimport { uniqueId } from '../../util';\n/**\n * A node in the dataflow tree.\n */\nexport class DataFlowNode {\n    constructor(parent, debugName) {\n        this.debugName = debugName;\n        this._children = [];\n        this._parent = null;\n        if (parent) {\n            this.parent = parent;\n        }\n    }\n    /**\n     * Clone this node with a deep copy but don't clone links to children or parents.\n     */\n    clone() {\n        throw new Error('Cannot clone node');\n    }\n    get parent() {\n        return this._parent;\n    }\n    /**\n     * Set the parent of the node and also add this node to the parent's children.\n     */\n    set parent(parent) {\n        this._parent = parent;\n        if (parent) {\n            parent.addChild(this);\n        }\n    }\n    get children() {\n        return this._children;\n    }\n    numChildren() {\n        return this._children.length;\n    }\n    addChild(child, loc) {\n        // do not add the same child twice\n        if (this._children.includes(child)) {\n            log.warn(log.message.ADD_SAME_CHILD_TWICE);\n            return;\n        }\n        if (loc !== undefined) {\n            this._children.splice(loc, 0, child);\n        }\n        else {\n            this._children.push(child);\n        }\n    }\n    removeChild(oldChild) {\n        const loc = this._children.indexOf(oldChild);\n        this._children.splice(loc, 1);\n        return loc;\n    }\n    /**\n     * Remove node from the dataflow.\n     */\n    remove() {\n        let loc = this._parent.removeChild(this);\n        for (const child of this._children) {\n            // do not use the set method because we want to insert at a particular location\n            child._parent = this._parent;\n            this._parent.addChild(child, loc++);\n        }\n    }\n    /**\n     * Insert another node as a parent of this node.\n     */\n    insertAsParentOf(other) {\n        const parent = other.parent;\n        parent.removeChild(this);\n        this.parent = parent;\n        other.parent = this;\n    }\n    swapWithParent() {\n        const parent = this._parent;\n        const newParent = parent.parent;\n        // reconnect the children\n        for (const child of this._children) {\n            child.parent = parent;\n        }\n        // remove old links\n        this._children = []; // equivalent to removing every child link one by one\n        parent.removeChild(this);\n        const loc = parent.parent.removeChild(parent);\n        // swap two nodes but maintain order in children\n        this._parent = newParent;\n        newParent.addChild(this, loc);\n        parent.parent = this;\n    }\n}\nexport class OutputNode extends DataFlowNode {\n    /**\n     * @param source The name of the source. Will change in assemble.\n     * @param type The type of the output node.\n     * @param refCounts A global ref counter map.\n     */\n    constructor(parent, source, type, refCounts) {\n        super(parent, source);\n        this.type = type;\n        this.refCounts = refCounts;\n        this._source = this._name = source;\n        if (this.refCounts && !(this._name in this.refCounts)) {\n            this.refCounts[this._name] = 0;\n        }\n    }\n    clone() {\n        const cloneObj = new this.constructor();\n        cloneObj.debugName = `clone_${this.debugName}`;\n        cloneObj._source = this._source;\n        cloneObj._name = `clone_${this._name}`;\n        cloneObj.type = this.type;\n        cloneObj.refCounts = this.refCounts;\n        cloneObj.refCounts[cloneObj._name] = 0;\n        return cloneObj;\n    }\n    dependentFields() {\n        return new Set();\n    }\n    producedFields() {\n        return new Set();\n    }\n    hash() {\n        if (this._hash === undefined) {\n            this._hash = `Output ${uniqueId()}`;\n        }\n        return this._hash;\n    }\n    /**\n     * Request the datasource name and increase the ref counter.\n     *\n     * During the parsing phase, this will return the simple name such as 'main' or 'raw'.\n     * It is crucial to request the name from an output node to mark it as a required node.\n     * If nobody ever requests the name, this datasource will not be instantiated in the assemble phase.\n     *\n     * In the assemble phase, this will return the correct name.\n     */\n    getSource() {\n        this.refCounts[this._name]++;\n        return this._source;\n    }\n    isRequired() {\n        return !!this.refCounts[this._name];\n    }\n    setSource(source) {\n        this._source = source;\n    }\n}\n//# sourceMappingURL=dataflow.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { duplicate, hash } from '../../util';\nimport { DataFlowNode } from './dataflow';\n/**\n * A class for density transform nodes\n */\nexport class DensityTransformNode extends DataFlowNode {\n    constructor(parent, transform) {\n        var _a, _b, _c;\n        super(parent);\n        this.transform = transform;\n        this.transform = duplicate(transform); // duplicate to prevent side effects\n        const specifiedAs = (_a = this.transform.as) !== null && _a !== void 0 ? _a : [undefined, undefined];\n        this.transform.as = [(_b = specifiedAs[0]) !== null && _b !== void 0 ? _b : 'value', (_c = specifiedAs[1]) !== null && _c !== void 0 ? _c : 'density'];\n        // set steps when we are grouping so that we get consitent sampling points for imputing and grouping\n        if (transform.groupby && transform.minsteps == null && transform.maxsteps == null && transform.steps == null) {\n            this.transform.steps = 200;\n        }\n    }\n    clone() {\n        return new DensityTransformNode(null, duplicate(this.transform));\n    }\n    dependentFields() {\n        var _a;\n        return new Set([this.transform.density, ...((_a = this.transform.groupby) !== null && _a !== void 0 ? _a : [])]);\n    }\n    producedFields() {\n        return new Set(this.transform.as);\n    }\n    hash() {\n        return `DensityTransform ${hash(this.transform)}`;\n    }\n    assemble() {\n        const _a = this.transform, { density } = _a, rest = __rest(_a, [\"density\"]);\n        const result = Object.assign({ type: 'kde', field: density }, rest);\n        return result;\n    }\n}\n//# sourceMappingURL=density.js.map","import { parseExpression } from 'vega-expression';\nfunction getName(node) {\n    const name = [];\n    if (node.type === 'Identifier') {\n        return [node.name];\n    }\n    if (node.type === 'Literal') {\n        return [node.value];\n    }\n    if (node.type === 'MemberExpression') {\n        name.push(...getName(node.object));\n        name.push(...getName(node.property));\n    }\n    return name;\n}\nfunction startsWithDatum(node) {\n    if (node.object.type === 'MemberExpression') {\n        return startsWithDatum(node.object);\n    }\n    return node.object.name === 'datum';\n}\nexport function getDependentFields(expression) {\n    const ast = parseExpression(expression);\n    const dependents = new Set();\n    // visit is missing in types https://github.com/vega/vega/issues/3298\n    ast.visit((node) => {\n        if (node.type === 'MemberExpression' && startsWithDatum(node)) {\n            dependents.add(getName(node).slice(1).join('.'));\n        }\n    });\n    return dependents;\n}\n//# sourceMappingURL=expressions.js.map","import { isArray } from 'vega-util';\nimport { isBinning } from '../../bin';\nimport { COLUMN, FACET_CHANNELS, POSITION_SCALE_CHANNELS, ROW } from '../../channel';\nimport { vgField } from '../../channeldef';\nimport * as log from '../../log';\nimport { hasDiscreteDomain } from '../../scale';\nimport { DEFAULT_SORT_OP, isSortField } from '../../sort';\nimport { hash } from '../../util';\nimport { isVgRangeStep } from '../../vega.schema';\nimport { HEADER_CHANNELS, HEADER_TYPES } from '../header/component';\nimport { assembleDomain, getFieldFromDomain } from '../scale/domain';\nimport { sortArrayIndexField } from './calculate';\nimport { DataFlowNode } from './dataflow';\n/**\n * A node that helps us track what fields we are faceting by.\n */\nexport class FacetNode extends DataFlowNode {\n    /**\n     * @param model The facet model.\n     * @param name The name that this facet source will have.\n     * @param data The source data for this facet data.\n     */\n    constructor(parent, model, name, data) {\n        super(parent);\n        this.model = model;\n        this.name = name;\n        this.data = data;\n        for (const channel of FACET_CHANNELS) {\n            const fieldDef = model.facet[channel];\n            if (fieldDef) {\n                const { bin, sort } = fieldDef;\n                this[channel] = Object.assign({ name: model.getName(`${channel}_domain`), fields: [vgField(fieldDef), ...(isBinning(bin) ? [vgField(fieldDef, { binSuffix: 'end' })] : [])] }, (isSortField(sort)\n                    ? { sortField: sort }\n                    : isArray(sort)\n                        ? { sortIndexField: sortArrayIndexField(fieldDef, channel) }\n                        : {}));\n            }\n        }\n        this.childModel = model.child;\n    }\n    hash() {\n        let out = `Facet`;\n        for (const channel of FACET_CHANNELS) {\n            if (this[channel]) {\n                out += ` ${channel.charAt(0)}:${hash(this[channel])}`;\n            }\n        }\n        return out;\n    }\n    get fields() {\n        var _a;\n        const f = [];\n        for (const channel of FACET_CHANNELS) {\n            if ((_a = this[channel]) === null || _a === void 0 ? void 0 : _a.fields) {\n                f.push(...this[channel].fields);\n            }\n        }\n        return f;\n    }\n    dependentFields() {\n        const depFields = new Set(this.fields);\n        for (const channel of FACET_CHANNELS) {\n            if (this[channel]) {\n                if (this[channel].sortField) {\n                    depFields.add(this[channel].sortField.field);\n                }\n                if (this[channel].sortIndexField) {\n                    depFields.add(this[channel].sortIndexField);\n                }\n            }\n        }\n        return depFields;\n    }\n    producedFields() {\n        return new Set(); // facet does not produce any new fields\n    }\n    /**\n     * The name to reference this source is its name.\n     */\n    getSource() {\n        return this.name;\n    }\n    getChildIndependentFieldsWithStep() {\n        const childIndependentFieldsWithStep = {};\n        for (const channel of POSITION_SCALE_CHANNELS) {\n            const childScaleComponent = this.childModel.component.scales[channel];\n            if (childScaleComponent && !childScaleComponent.merged) {\n                // independent scale\n                const type = childScaleComponent.get('type');\n                const range = childScaleComponent.get('range');\n                if (hasDiscreteDomain(type) && isVgRangeStep(range)) {\n                    const domain = assembleDomain(this.childModel, channel);\n                    const field = getFieldFromDomain(domain);\n                    if (field) {\n                        childIndependentFieldsWithStep[channel] = field;\n                    }\n                    else {\n                        log.warn(log.message.unknownField(channel));\n                    }\n                }\n            }\n        }\n        return childIndependentFieldsWithStep;\n    }\n    assembleRowColumnHeaderData(channel, crossedDataName, childIndependentFieldsWithStep) {\n        const childChannel = { row: 'y', column: 'x', facet: undefined }[channel];\n        const fields = [];\n        const ops = [];\n        const as = [];\n        if (childChannel && childIndependentFieldsWithStep && childIndependentFieldsWithStep[childChannel]) {\n            if (crossedDataName) {\n                // If there is a crossed data, calculate max\n                fields.push(`distinct_${childIndependentFieldsWithStep[childChannel]}`);\n                ops.push('max');\n            }\n            else {\n                // If there is no crossed data, just calculate distinct\n                fields.push(childIndependentFieldsWithStep[childChannel]);\n                ops.push('distinct');\n            }\n            // Although it is technically a max, just name it distinct so it's easier to refer to it\n            as.push(`distinct_${childIndependentFieldsWithStep[childChannel]}`);\n        }\n        const { sortField, sortIndexField } = this[channel];\n        if (sortField) {\n            const { op = DEFAULT_SORT_OP, field } = sortField;\n            fields.push(field);\n            ops.push(op);\n            as.push(vgField(sortField, { forAs: true }));\n        }\n        else if (sortIndexField) {\n            fields.push(sortIndexField);\n            ops.push('max');\n            as.push(sortIndexField);\n        }\n        return {\n            name: this[channel].name,\n            // Use data from the crossed one if it exist\n            source: crossedDataName !== null && crossedDataName !== void 0 ? crossedDataName : this.data,\n            transform: [\n                Object.assign({ type: 'aggregate', groupby: this[channel].fields }, (fields.length\n                    ? {\n                        fields,\n                        ops,\n                        as\n                    }\n                    : {}))\n            ]\n        };\n    }\n    assembleFacetHeaderData(childIndependentFieldsWithStep) {\n        var _a, _b;\n        const { columns } = this.model.layout;\n        const { layoutHeaders } = this.model.component;\n        const data = [];\n        const hasSharedAxis = {};\n        for (const headerChannel of HEADER_CHANNELS) {\n            for (const headerType of HEADER_TYPES) {\n                const headers = (_a = (layoutHeaders[headerChannel] && layoutHeaders[headerChannel][headerType])) !== null && _a !== void 0 ? _a : [];\n                for (const header of headers) {\n                    if (((_b = header.axes) === null || _b === void 0 ? void 0 : _b.length) > 0) {\n                        hasSharedAxis[headerChannel] = true;\n                        break;\n                    }\n                }\n            }\n            if (hasSharedAxis[headerChannel]) {\n                const cardinality = `length(data(\"${this.facet.name}\"))`;\n                const stop = headerChannel === 'row'\n                    ? columns\n                        ? { signal: `ceil(${cardinality} / ${columns})` }\n                        : 1\n                    : columns\n                        ? { signal: `min(${cardinality}, ${columns})` }\n                        : { signal: cardinality };\n                data.push({\n                    name: `${this.facet.name}_${headerChannel}`,\n                    transform: [\n                        {\n                            type: 'sequence',\n                            start: 0,\n                            stop\n                        }\n                    ]\n                });\n            }\n        }\n        const { row, column } = hasSharedAxis;\n        if (row || column) {\n            data.unshift(this.assembleRowColumnHeaderData('facet', null, childIndependentFieldsWithStep));\n        }\n        return data;\n    }\n    assemble() {\n        var _a, _b;\n        const data = [];\n        let crossedDataName = null;\n        const childIndependentFieldsWithStep = this.getChildIndependentFieldsWithStep();\n        const { column, row, facet } = this;\n        if (column && row && (childIndependentFieldsWithStep.x || childIndependentFieldsWithStep.y)) {\n            // Need to create a cross dataset to correctly calculate cardinality\n            crossedDataName = `cross_${this.column.name}_${this.row.name}`;\n            const fields = [].concat((_a = childIndependentFieldsWithStep.x) !== null && _a !== void 0 ? _a : [], (_b = childIndependentFieldsWithStep.y) !== null && _b !== void 0 ? _b : []);\n            const ops = fields.map(() => 'distinct');\n            data.push({\n                name: crossedDataName,\n                source: this.data,\n                transform: [\n                    {\n                        type: 'aggregate',\n                        groupby: this.fields,\n                        fields,\n                        ops\n                    }\n                ]\n            });\n        }\n        for (const channel of [COLUMN, ROW]) {\n            if (this[channel]) {\n                data.push(this.assembleRowColumnHeaderData(channel, crossedDataName, childIndependentFieldsWithStep));\n            }\n        }\n        if (facet) {\n            const facetData = this.assembleFacetHeaderData(childIndependentFieldsWithStep);\n            if (facetData) {\n                data.push(...facetData);\n            }\n        }\n        return data;\n    }\n}\n//# sourceMappingURL=facet.js.map","import { duplicate } from '../../util';\nimport { expression } from '../predicate';\nimport { DataFlowNode } from './dataflow';\nimport { getDependentFields } from './expressions';\nexport class FilterNode extends DataFlowNode {\n    constructor(parent, model, filter) {\n        super(parent);\n        this.model = model;\n        this.filter = filter;\n        // TODO: refactor this to not take a node and\n        // then add a static function makeFromOperand and make the constructor take only an expression\n        this.expr = expression(this.model, this.filter, this);\n        this._dependentFields = getDependentFields(this.expr);\n    }\n    clone() {\n        return new FilterNode(null, this.model, duplicate(this.filter));\n    }\n    dependentFields() {\n        return this._dependentFields;\n    }\n    producedFields() {\n        return new Set(); // filter does not produce any new fields\n    }\n    assemble() {\n        return {\n            type: 'filter',\n            expr: this.expr\n        };\n    }\n    hash() {\n        return `Filter ${this.expr}`;\n    }\n}\n//# sourceMappingURL=filter.js.map","import { isScaleChannel } from '../../channel';\nimport { vgField as fieldRef } from '../../channeldef';\nimport { isPathMark } from '../../mark';\nimport { hasContinuousDomain } from '../../scale';\nimport { hash, keys } from '../../util';\nimport { getMarkPropOrConfig } from '../common';\nimport { DataFlowNode } from './dataflow';\nexport class FilterInvalidNode extends DataFlowNode {\n    constructor(parent, filter) {\n        super(parent);\n        this.filter = filter;\n    }\n    clone() {\n        return new FilterInvalidNode(null, Object.assign({}, this.filter));\n    }\n    static make(parent, model) {\n        const { config, mark, markDef } = model;\n        const invalid = getMarkPropOrConfig('invalid', markDef, config);\n        if (invalid !== 'filter') {\n            return null;\n        }\n        const filter = model.reduceFieldDef((aggregator, fieldDef, channel) => {\n            const scaleComponent = isScaleChannel(channel) && model.getScaleComponent(channel);\n            if (scaleComponent) {\n                const scaleType = scaleComponent.get('type');\n                // While discrete domain scales can handle invalid values, continuous scales can't.\n                // Thus, for non-path marks, we have to filter null for scales with continuous domains.\n                // (For path marks, we will use \"defined\" property and skip these values instead.)\n                if (hasContinuousDomain(scaleType) && fieldDef.aggregate !== 'count' && !isPathMark(mark)) {\n                    aggregator[fieldDef.field] = fieldDef; // we know that the fieldDef is a typed field def\n                }\n            }\n            return aggregator;\n        }, {});\n        if (!keys(filter).length) {\n            return null;\n        }\n        return new FilterInvalidNode(parent, filter);\n    }\n    dependentFields() {\n        return new Set(keys(this.filter));\n    }\n    producedFields() {\n        return new Set(); // filter does not produce any new fields\n    }\n    hash() {\n        return `FilterInvalid ${hash(this.filter)}`;\n    }\n    /**\n     * Create the VgTransforms for each of the filtered fields.\n     */\n    assemble() {\n        const filters = keys(this.filter).reduce((vegaFilters, field) => {\n            const fieldDef = this.filter[field];\n            const ref = fieldRef(fieldDef, { expr: 'datum' });\n            if (fieldDef !== null) {\n                if (fieldDef.type === 'temporal') {\n                    vegaFilters.push(`(isDate(${ref}) || (isValid(${ref}) && isFinite(+${ref})))`);\n                }\n                else if (fieldDef.type === 'quantitative') {\n                    vegaFilters.push(`isValid(${ref})`);\n                    vegaFilters.push(`isFinite(+${ref})`);\n                }\n                else {\n                    // should never get here\n                }\n            }\n            return vegaFilters;\n        }, []);\n        return filters.length > 0\n            ? {\n                type: 'filter',\n                expr: filters.join(' && ')\n            }\n            : null;\n    }\n}\n//# sourceMappingURL=filterinvalid.js.map","import { duplicate, hash } from '../../util';\nimport { DataFlowNode } from './dataflow';\n/**\n * A class for flatten transform nodes\n */\nexport class FlattenTransformNode extends DataFlowNode {\n    constructor(parent, transform) {\n        super(parent);\n        this.transform = transform;\n        this.transform = duplicate(transform); // duplicate to prevent side effects\n        const { flatten, as = [] } = this.transform;\n        this.transform.as = flatten.map((f, i) => { var _a; return (_a = as[i]) !== null && _a !== void 0 ? _a : f; });\n    }\n    clone() {\n        return new FlattenTransformNode(this.parent, duplicate(this.transform));\n    }\n    dependentFields() {\n        return new Set(this.transform.flatten);\n    }\n    producedFields() {\n        return new Set(this.transform.as);\n    }\n    hash() {\n        return `FlattenTransform ${hash(this.transform)}`;\n    }\n    assemble() {\n        const { flatten: fields, as } = this.transform;\n        const result = {\n            type: 'flatten',\n            fields,\n            as\n        };\n        return result;\n    }\n}\n//# sourceMappingURL=flatten.js.map","import { duplicate, hash } from '../../util';\nimport { DataFlowNode } from './dataflow';\n/**\n * A class for flatten transform nodes\n */\nexport class FoldTransformNode extends DataFlowNode {\n    constructor(parent, transform) {\n        var _a, _b, _c;\n        super(parent);\n        this.transform = transform;\n        this.transform = duplicate(transform); // duplicate to prevent side effects\n        const specifiedAs = (_a = this.transform.as) !== null && _a !== void 0 ? _a : [undefined, undefined];\n        this.transform.as = [(_b = specifiedAs[0]) !== null && _b !== void 0 ? _b : 'key', (_c = specifiedAs[1]) !== null && _c !== void 0 ? _c : 'value'];\n    }\n    clone() {\n        return new FoldTransformNode(null, duplicate(this.transform));\n    }\n    dependentFields() {\n        return new Set(this.transform.fold);\n    }\n    producedFields() {\n        return new Set(this.transform.as);\n    }\n    hash() {\n        return `FoldTransform ${hash(this.transform)}`;\n    }\n    assemble() {\n        const { fold, as } = this.transform;\n        const result = {\n            type: 'fold',\n            fields: fold,\n            as\n        };\n        return result;\n    }\n}\n//# sourceMappingURL=fold.js.map","import { isNumber, isString } from 'vega-util';\nimport { isMinMaxOp } from '../../aggregate';\nimport { getMainRangeChannel } from '../../channel';\nimport { isFieldDef, isFieldOrDatumDefForTimeFormat, isScaleFieldDef, isTypedFieldDef } from '../../channeldef';\nimport { isGenerator } from '../../data';\nimport { isDateTime } from '../../datetime';\nimport * as log from '../../log';\nimport { forEachLeaf } from '../../logical';\nimport { isPathMark } from '../../mark';\nimport { isFieldEqualPredicate, isFieldGTEPredicate, isFieldGTPredicate, isFieldLTEPredicate, isFieldLTPredicate, isFieldOneOfPredicate, isFieldPredicate, isFieldRangePredicate } from '../../predicate';\nimport { isSortField } from '../../sort';\nimport { accessPathDepth, accessPathWithDatum, duplicate, hash, keys, removePathFromField } from '../../util';\nimport { signalRefOrValue } from '../common';\nimport { isFacetModel, isUnitModel } from '../model';\nimport { Split } from '../split';\nimport { DataFlowNode } from './dataflow';\n/**\n * Remove quotes from a string.\n */\nfunction unquote(pattern) {\n    if ((pattern.startsWith(\"'\") && pattern.endsWith(\"'\")) || (pattern.startsWith('\"') && pattern.endsWith('\"'))) {\n        return pattern.slice(1, -1);\n    }\n    return pattern;\n}\n/**\n * @param field The field.\n * @param parse What to parse the field as.\n */\nfunction parseExpression(field, parse) {\n    const f = accessPathWithDatum(field);\n    if (parse === 'number') {\n        return `toNumber(${f})`;\n    }\n    else if (parse === 'boolean') {\n        return `toBoolean(${f})`;\n    }\n    else if (parse === 'string') {\n        return `toString(${f})`;\n    }\n    else if (parse === 'date') {\n        return `toDate(${f})`;\n    }\n    else if (parse === 'flatten') {\n        return f;\n    }\n    else if (parse.startsWith('date:')) {\n        const specifier = unquote(parse.slice(5, parse.length));\n        return `timeParse(${f},'${specifier}')`;\n    }\n    else if (parse.startsWith('utc:')) {\n        const specifier = unquote(parse.slice(4, parse.length));\n        return `utcParse(${f},'${specifier}')`;\n    }\n    else {\n        log.warn(log.message.unrecognizedParse(parse));\n        return null;\n    }\n}\nexport function getImplicitFromFilterTransform(transform) {\n    const implicit = {};\n    forEachLeaf(transform.filter, filter => {\n        var _a;\n        if (isFieldPredicate(filter)) {\n            // Automatically add a parse node for filters with filter objects\n            let val = null;\n            // For EqualFilter, just use the equal property.\n            // For RangeFilter and OneOfFilter, all array members should have\n            // the same type, so we only use the first one.\n            if (isFieldEqualPredicate(filter)) {\n                val = signalRefOrValue(filter.equal);\n            }\n            else if (isFieldLTEPredicate(filter)) {\n                val = signalRefOrValue(filter.lte);\n            }\n            else if (isFieldLTPredicate(filter)) {\n                val = signalRefOrValue(filter.lt);\n            }\n            else if (isFieldGTPredicate(filter)) {\n                val = signalRefOrValue(filter.gt);\n            }\n            else if (isFieldGTEPredicate(filter)) {\n                val = signalRefOrValue(filter.gte);\n            }\n            else if (isFieldRangePredicate(filter)) {\n                val = filter.range[0];\n            }\n            else if (isFieldOneOfPredicate(filter)) {\n                val = ((_a = filter.oneOf) !== null && _a !== void 0 ? _a : filter['in'])[0];\n            } // else -- for filter expression, we can't infer anything\n            if (val) {\n                if (isDateTime(val)) {\n                    implicit[filter.field] = 'date';\n                }\n                else if (isNumber(val)) {\n                    implicit[filter.field] = 'number';\n                }\n                else if (isString(val)) {\n                    implicit[filter.field] = 'string';\n                }\n            }\n            if (filter.timeUnit) {\n                implicit[filter.field] = 'date';\n            }\n        }\n    });\n    return implicit;\n}\n/**\n * Creates a parse node for implicit parsing from a model and updates ancestorParse.\n */\nexport function getImplicitFromEncoding(model) {\n    const implicit = {};\n    function add(fieldDef) {\n        if (isFieldOrDatumDefForTimeFormat(fieldDef)) {\n            implicit[fieldDef.field] = 'date';\n        }\n        else if (fieldDef.type === 'quantitative' &&\n            isMinMaxOp(fieldDef.aggregate) // we need to parse numbers to support correct min and max\n        ) {\n            implicit[fieldDef.field] = 'number';\n        }\n        else if (accessPathDepth(fieldDef.field) > 1) {\n            // For non-date/non-number (strings and booleans), derive a flattened field for a referenced nested field.\n            // (Parsing numbers / dates already flattens numeric and temporal fields.)\n            if (!(fieldDef.field in implicit)) {\n                implicit[fieldDef.field] = 'flatten';\n            }\n        }\n        else if (isScaleFieldDef(fieldDef) && isSortField(fieldDef.sort) && accessPathDepth(fieldDef.sort.field) > 1) {\n            // Flatten fields that we sort by but that are not otherwise flattened.\n            if (!(fieldDef.sort.field in implicit)) {\n                implicit[fieldDef.sort.field] = 'flatten';\n            }\n        }\n    }\n    if (isUnitModel(model) || isFacetModel(model)) {\n        // Parse encoded fields\n        model.forEachFieldDef((fieldDef, channel) => {\n            if (isTypedFieldDef(fieldDef)) {\n                add(fieldDef);\n            }\n            else {\n                const mainChannel = getMainRangeChannel(channel);\n                const mainFieldDef = model.fieldDef(mainChannel);\n                add(Object.assign(Object.assign({}, fieldDef), { type: mainFieldDef.type }));\n            }\n        });\n    }\n    // Parse quantitative dimension fields of path marks as numbers so that we sort them correctly.\n    if (isUnitModel(model)) {\n        const { mark, markDef, encoding } = model;\n        if (isPathMark(mark) &&\n            // No need to sort by dimension if we have a connected scatterplot (order channel is present)\n            !model.encoding.order) {\n            const dimensionChannel = markDef.orient === 'horizontal' ? 'y' : 'x';\n            const dimensionChannelDef = encoding[dimensionChannel];\n            if (isFieldDef(dimensionChannelDef) &&\n                dimensionChannelDef.type === 'quantitative' &&\n                !(dimensionChannelDef.field in implicit)) {\n                implicit[dimensionChannelDef.field] = 'number';\n            }\n        }\n    }\n    return implicit;\n}\n/**\n * Creates a parse node for implicit parsing from a model and updates ancestorParse.\n */\nexport function getImplicitFromSelection(model) {\n    const implicit = {};\n    if (isUnitModel(model) && model.component.selection) {\n        for (const name of keys(model.component.selection)) {\n            const selCmpt = model.component.selection[name];\n            for (const proj of selCmpt.project.items) {\n                if (!proj.channel && accessPathDepth(proj.field) > 1) {\n                    implicit[proj.field] = 'flatten';\n                }\n            }\n        }\n    }\n    return implicit;\n}\nexport class ParseNode extends DataFlowNode {\n    constructor(parent, parse) {\n        super(parent);\n        this._parse = parse;\n    }\n    clone() {\n        return new ParseNode(null, duplicate(this._parse));\n    }\n    hash() {\n        return `Parse ${hash(this._parse)}`;\n    }\n    /**\n     * Creates a parse node from a data.format.parse and updates ancestorParse.\n     */\n    static makeExplicit(parent, model, ancestorParse) {\n        var _a;\n        // Custom parse\n        let explicit = {};\n        const data = model.data;\n        if (!isGenerator(data) && ((_a = data === null || data === void 0 ? void 0 : data.format) === null || _a === void 0 ? void 0 : _a.parse)) {\n            explicit = data.format.parse;\n        }\n        return this.makeWithAncestors(parent, explicit, {}, ancestorParse);\n    }\n    /**\n     * Creates a parse node from \"explicit\" parse and \"implicit\" parse and updates ancestorParse.\n     */\n    static makeWithAncestors(parent, explicit, implicit, ancestorParse) {\n        // We should not parse what has already been parsed in a parent (explicitly or implicitly) or what has been derived (maked as \"derived\"). We also don't need to flatten a field that has already been parsed.\n        for (const field of keys(implicit)) {\n            const parsedAs = ancestorParse.getWithExplicit(field);\n            if (parsedAs.value !== undefined) {\n                // We always ignore derived fields even if they are implicitly defined because we expect users to create the right types.\n                if (parsedAs.explicit ||\n                    parsedAs.value === implicit[field] ||\n                    parsedAs.value === 'derived' ||\n                    implicit[field] === 'flatten') {\n                    delete implicit[field];\n                }\n                else {\n                    log.warn(log.message.differentParse(field, implicit[field], parsedAs.value));\n                }\n            }\n        }\n        for (const field of keys(explicit)) {\n            const parsedAs = ancestorParse.get(field);\n            if (parsedAs !== undefined) {\n                // Don't parse a field again if it has been parsed with the same type already.\n                if (parsedAs === explicit[field]) {\n                    delete explicit[field];\n                }\n                else {\n                    log.warn(log.message.differentParse(field, explicit[field], parsedAs));\n                }\n            }\n        }\n        const parse = new Split(explicit, implicit);\n        // add the format parse from this model so that children don't parse the same field again\n        ancestorParse.copyAll(parse);\n        // copy only non-null parses\n        const p = {};\n        for (const key of keys(parse.combine())) {\n            const val = parse.get(key);\n            if (val !== null) {\n                p[key] = val;\n            }\n        }\n        if (keys(p).length === 0 || ancestorParse.parseNothing) {\n            return null;\n        }\n        return new ParseNode(parent, p);\n    }\n    get parse() {\n        return this._parse;\n    }\n    merge(other) {\n        this._parse = Object.assign(Object.assign({}, this._parse), other.parse);\n        other.remove();\n    }\n    /**\n     * Assemble an object for Vega's format.parse property.\n     */\n    assembleFormatParse() {\n        const formatParse = {};\n        for (const field of keys(this._parse)) {\n            const p = this._parse[field];\n            if (accessPathDepth(field) === 1) {\n                formatParse[field] = p;\n            }\n        }\n        return formatParse;\n    }\n    // format parse depends and produces all fields in its parse\n    producedFields() {\n        return new Set(keys(this._parse));\n    }\n    dependentFields() {\n        return new Set(keys(this._parse));\n    }\n    assembleTransforms(onlyNested = false) {\n        return keys(this._parse)\n            .filter(field => (onlyNested ? accessPathDepth(field) > 1 : true))\n            .map(field => {\n            const expr = parseExpression(field, this._parse[field]);\n            if (!expr) {\n                return null;\n            }\n            const formula = {\n                type: 'formula',\n                expr,\n                as: removePathFromField(field) // Vega output is always flattened\n            };\n            return formula;\n        })\n            .filter(t => t !== null);\n    }\n}\n//# sourceMappingURL=formatparse.js.map","import { isString } from 'vega-util';\nimport { LATITUDE, LATITUDE2, LONGITUDE, LONGITUDE2, SHAPE } from '../../channel';\nimport { getFieldOrDatumDef, isDatumDef, isFieldDef, isValueDef } from '../../channeldef';\nimport { GEOJSON } from '../../type';\nimport { duplicate, hash } from '../../util';\nimport { DataFlowNode } from './dataflow';\nexport class GeoJSONNode extends DataFlowNode {\n    constructor(parent, fields, geojson, signal) {\n        super(parent);\n        this.fields = fields;\n        this.geojson = geojson;\n        this.signal = signal;\n    }\n    clone() {\n        return new GeoJSONNode(null, duplicate(this.fields), this.geojson, this.signal);\n    }\n    static parseAll(parent, model) {\n        if (model.component.projection && !model.component.projection.isFit) {\n            return parent;\n        }\n        let geoJsonCounter = 0;\n        for (const coordinates of [\n            [LONGITUDE, LATITUDE],\n            [LONGITUDE2, LATITUDE2]\n        ]) {\n            const pair = coordinates.map(channel => {\n                const def = getFieldOrDatumDef(model.encoding[channel]);\n                return isFieldDef(def)\n                    ? def.field\n                    : isDatumDef(def)\n                        ? { expr: `${def.datum}` }\n                        : isValueDef(def)\n                            ? { expr: `${def['value']}` }\n                            : undefined;\n            });\n            if (pair[0] || pair[1]) {\n                parent = new GeoJSONNode(parent, pair, null, model.getName(`geojson_${geoJsonCounter++}`));\n            }\n        }\n        if (model.channelHasField(SHAPE)) {\n            const fieldDef = model.typedFieldDef(SHAPE);\n            if (fieldDef.type === GEOJSON) {\n                parent = new GeoJSONNode(parent, null, fieldDef.field, model.getName(`geojson_${geoJsonCounter++}`));\n            }\n        }\n        return parent;\n    }\n    dependentFields() {\n        var _a;\n        const fields = ((_a = this.fields) !== null && _a !== void 0 ? _a : []).filter(isString);\n        return new Set([...(this.geojson ? [this.geojson] : []), ...fields]);\n    }\n    producedFields() {\n        return new Set();\n    }\n    hash() {\n        return `GeoJSON ${this.geojson} ${this.signal} ${hash(this.fields)}`;\n    }\n    assemble() {\n        return [\n            ...(this.geojson\n                ? [\n                    {\n                        type: 'filter',\n                        expr: `isValid(datum[\"${this.geojson}\"])`\n                    }\n                ]\n                : []),\n            Object.assign(Object.assign(Object.assign({ type: 'geojson' }, (this.fields ? { fields: this.fields } : {})), (this.geojson ? { geojson: this.geojson } : {})), { signal: this.signal })\n        ];\n    }\n}\n//# sourceMappingURL=geojson.js.map","import { isString } from 'vega-util';\nimport { LATITUDE, LATITUDE2, LONGITUDE, LONGITUDE2 } from '../../channel';\nimport { getFieldOrDatumDef, isDatumDef, isFieldDef, isValueDef } from '../../channeldef';\nimport { duplicate, hash } from '../../util';\nimport { DataFlowNode } from './dataflow';\nexport class GeoPointNode extends DataFlowNode {\n    constructor(parent, projection, fields, as) {\n        super(parent);\n        this.projection = projection;\n        this.fields = fields;\n        this.as = as;\n    }\n    clone() {\n        return new GeoPointNode(null, this.projection, duplicate(this.fields), duplicate(this.as));\n    }\n    static parseAll(parent, model) {\n        if (!model.projectionName()) {\n            return parent;\n        }\n        for (const coordinates of [\n            [LONGITUDE, LATITUDE],\n            [LONGITUDE2, LATITUDE2]\n        ]) {\n            const pair = coordinates.map(channel => {\n                const def = getFieldOrDatumDef(model.encoding[channel]);\n                return isFieldDef(def)\n                    ? def.field\n                    : isDatumDef(def)\n                        ? { expr: `${def.datum}` }\n                        : isValueDef(def)\n                            ? { expr: `${def['value']}` }\n                            : undefined;\n            });\n            const suffix = coordinates[0] === LONGITUDE2 ? '2' : '';\n            if (pair[0] || pair[1]) {\n                parent = new GeoPointNode(parent, model.projectionName(), pair, [\n                    model.getName(`x${suffix}`),\n                    model.getName(`y${suffix}`)\n                ]);\n            }\n        }\n        return parent;\n    }\n    dependentFields() {\n        return new Set(this.fields.filter(isString));\n    }\n    producedFields() {\n        return new Set(this.as);\n    }\n    hash() {\n        return `Geopoint ${this.projection} ${hash(this.fields)} ${hash(this.as)}`;\n    }\n    assemble() {\n        return {\n            type: 'geopoint',\n            projection: this.projection,\n            fields: this.fields,\n            as: this.as\n        };\n    }\n}\n//# sourceMappingURL=geopoint.js.map","import { hash } from '../../util';\nimport { DataFlowNode } from './dataflow';\nexport class GraticuleNode extends DataFlowNode {\n    constructor(parent, params) {\n        super(parent);\n        this.params = params;\n    }\n    clone() {\n        return new GraticuleNode(null, this.params);\n    }\n    dependentFields() {\n        return new Set();\n    }\n    producedFields() {\n        return undefined; // there should never be a node before graticule\n    }\n    hash() {\n        return `Graticule ${hash(this.params)}`;\n    }\n    assemble() {\n        return Object.assign({ type: 'graticule' }, (this.params === true ? {} : this.params));\n    }\n}\n//# sourceMappingURL=graticule.js.map","import { SELECTION_ID } from '../../selection';\nimport { DataFlowNode } from './dataflow';\nexport class IdentifierNode extends DataFlowNode {\n    clone() {\n        return new IdentifierNode(null);\n    }\n    constructor(parent) {\n        super(parent);\n    }\n    dependentFields() {\n        return new Set();\n    }\n    producedFields() {\n        return new Set([SELECTION_ID]);\n    }\n    hash() {\n        return 'Identifier';\n    }\n    assemble() {\n        return { type: 'identifier', as: SELECTION_ID };\n    }\n}\n//# sourceMappingURL=identifier.js.map","import { isFieldDef } from '../../channeldef';\nimport { pathGroupingFields } from '../../encoding';\nimport { isImputeSequence } from '../../transform';\nimport { duplicate, hash } from '../../util';\nimport { DataFlowNode } from './dataflow';\nexport class ImputeNode extends DataFlowNode {\n    constructor(parent, transform) {\n        super(parent);\n        this.transform = transform;\n    }\n    clone() {\n        return new ImputeNode(null, duplicate(this.transform));\n    }\n    dependentFields() {\n        var _a;\n        return new Set([this.transform.impute, this.transform.key, ...((_a = this.transform.groupby) !== null && _a !== void 0 ? _a : [])]);\n    }\n    producedFields() {\n        return new Set([this.transform.impute]);\n    }\n    processSequence(keyvals) {\n        const { start = 0, stop, step } = keyvals;\n        const result = [start, stop, ...(step ? [step] : [])].join(',');\n        return { signal: `sequence(${result})` };\n    }\n    static makeFromTransform(parent, imputeTransform) {\n        return new ImputeNode(parent, imputeTransform);\n    }\n    static makeFromEncoding(parent, model) {\n        const encoding = model.encoding;\n        const xDef = encoding.x;\n        const yDef = encoding.y;\n        if (isFieldDef(xDef) && isFieldDef(yDef)) {\n            const imputedChannel = xDef.impute ? xDef : yDef.impute ? yDef : undefined;\n            if (imputedChannel === undefined) {\n                return undefined;\n            }\n            const keyChannel = xDef.impute ? yDef : yDef.impute ? xDef : undefined;\n            const { method, value, frame, keyvals } = imputedChannel.impute;\n            const groupbyFields = pathGroupingFields(model.mark, encoding);\n            return new ImputeNode(parent, Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({ impute: imputedChannel.field, key: keyChannel.field }, (method ? { method } : {})), (value !== undefined ? { value } : {})), (frame ? { frame } : {})), (keyvals !== undefined ? { keyvals } : {})), (groupbyFields.length ? { groupby: groupbyFields } : {})));\n        }\n        return null;\n    }\n    hash() {\n        return `Impute ${hash(this.transform)}`;\n    }\n    assemble() {\n        const { impute, key, keyvals, method, groupby, value, frame = [null, null] } = this.transform;\n        const imputeTransform = Object.assign(Object.assign(Object.assign(Object.assign({ type: 'impute', field: impute, key }, (keyvals ? { keyvals: isImputeSequence(keyvals) ? this.processSequence(keyvals) : keyvals } : {})), { method: 'value' }), (groupby ? { groupby } : {})), { value: !method || method === 'value' ? value : null });\n        if (method && method !== 'value') {\n            const deriveNewField = Object.assign({ type: 'window', as: [`imputed_${impute}_value`], ops: [method], fields: [impute], frame, ignorePeers: false }, (groupby ? { groupby } : {}));\n            const replaceOriginal = {\n                type: 'formula',\n                expr: `datum.${impute} === null ? datum.imputed_${impute}_value : datum.${impute}`,\n                as: impute\n            };\n            return [imputeTransform, deriveNewField, replaceOriginal];\n        }\n        else {\n            return [imputeTransform];\n        }\n    }\n}\n//# sourceMappingURL=impute.js.map","import { Split } from '../split';\n/**\n * Class to track interesting properties (see https://15721.courses.cs.cmu.edu/spring2016/papers/graefe-ieee1995.pdf)\n * about how fields have been parsed or whether they have been derived in a transform. We use this to not parse the\n * same field again (or differently).\n */\nexport class AncestorParse extends Split {\n    constructor(explicit = {}, implicit = {}, parseNothing = false) {\n        super(explicit, implicit);\n        this.explicit = explicit;\n        this.implicit = implicit;\n        this.parseNothing = parseNothing;\n    }\n    clone() {\n        const clone = super.clone();\n        clone.parseNothing = this.parseNothing;\n        return clone;\n    }\n}\n//# sourceMappingURL=index.js.map","import { vgField } from '../../channeldef';\nimport { duplicate, hash } from '../../util';\nimport { unique } from '../../util';\nimport { DataFlowNode } from './dataflow';\n/**\n * A class for the join aggregate transform nodes.\n */\nexport class JoinAggregateTransformNode extends DataFlowNode {\n    constructor(parent, transform) {\n        super(parent);\n        this.transform = transform;\n    }\n    clone() {\n        return new JoinAggregateTransformNode(null, duplicate(this.transform));\n    }\n    addDimensions(fields) {\n        this.transform.groupby = unique(this.transform.groupby.concat(fields), d => d);\n    }\n    dependentFields() {\n        const out = new Set();\n        if (this.transform.groupby) {\n            this.transform.groupby.forEach(out.add, out);\n        }\n        this.transform.joinaggregate\n            .map(w => w.field)\n            .filter(f => f !== undefined)\n            .forEach(out.add, out);\n        return out;\n    }\n    producedFields() {\n        return new Set(this.transform.joinaggregate.map(this.getDefaultName));\n    }\n    getDefaultName(joinAggregateFieldDef) {\n        var _a;\n        return (_a = joinAggregateFieldDef.as) !== null && _a !== void 0 ? _a : vgField(joinAggregateFieldDef);\n    }\n    hash() {\n        return `JoinAggregateTransform ${hash(this.transform)}`;\n    }\n    assemble() {\n        const fields = [];\n        const ops = [];\n        const as = [];\n        for (const joinaggregate of this.transform.joinaggregate) {\n            ops.push(joinaggregate.op);\n            as.push(this.getDefaultName(joinaggregate));\n            fields.push(joinaggregate.field === undefined ? null : joinaggregate.field);\n        }\n        const groupby = this.transform.groupby;\n        return Object.assign({ type: 'joinaggregate', as,\n            ops,\n            fields }, (groupby !== undefined ? { groupby } : {}));\n    }\n}\n//# sourceMappingURL=joinaggregate.js.map","import { vgField } from '../../channeldef';\nimport { DEFAULT_SORT_OP, isSortField } from '../../sort';\nimport { facetSortFieldName } from '../facet';\nimport { JoinAggregateTransformNode } from './joinaggregate';\nexport function makeJoinAggregateFromFacet(parent, facet) {\n    const { row, column } = facet;\n    if (row && column) {\n        let newParent = null;\n        // only need to make one for crossed facet\n        for (const fieldDef of [row, column]) {\n            if (isSortField(fieldDef.sort)) {\n                const { field, op = DEFAULT_SORT_OP } = fieldDef.sort;\n                parent = newParent = new JoinAggregateTransformNode(parent, {\n                    joinaggregate: [\n                        {\n                            op,\n                            field,\n                            as: facetSortFieldName(fieldDef, fieldDef.sort, { forAs: true })\n                        }\n                    ],\n                    groupby: [vgField(fieldDef)]\n                });\n            }\n        }\n        return newParent;\n    }\n    return null;\n}\n//# sourceMappingURL=joinaggregatefacet.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { duplicate, hash } from '../../util';\nimport { DataFlowNode } from './dataflow';\n/**\n * A class for loess transform nodes\n */\nexport class LoessTransformNode extends DataFlowNode {\n    constructor(parent, transform) {\n        var _a, _b, _c;\n        super(parent);\n        this.transform = transform;\n        this.transform = duplicate(transform); // duplicate to prevent side effects\n        const specifiedAs = (_a = this.transform.as) !== null && _a !== void 0 ? _a : [undefined, undefined];\n        this.transform.as = [(_b = specifiedAs[0]) !== null && _b !== void 0 ? _b : transform.on, (_c = specifiedAs[1]) !== null && _c !== void 0 ? _c : transform.loess];\n    }\n    clone() {\n        return new LoessTransformNode(null, duplicate(this.transform));\n    }\n    dependentFields() {\n        var _a;\n        return new Set([this.transform.loess, this.transform.on, ...((_a = this.transform.groupby) !== null && _a !== void 0 ? _a : [])]);\n    }\n    producedFields() {\n        return new Set(this.transform.as);\n    }\n    hash() {\n        return `LoessTransform ${hash(this.transform)}`;\n    }\n    assemble() {\n        const _a = this.transform, { loess, on } = _a, rest = __rest(_a, [\"loess\", \"on\"]);\n        const result = Object.assign({ type: 'loess', x: on, y: loess }, rest);\n        return result;\n    }\n}\n//# sourceMappingURL=loess.js.map","import { array, isString } from 'vega-util';\nimport * as log from '../../log';\nimport { isLookupData, isLookupSelection } from '../../transform';\nimport { duplicate, hash, varName } from '../../util';\nimport { DataFlowNode, OutputNode } from './dataflow';\nimport { findSource } from './parse';\nimport { SourceNode } from './source';\nimport { DataSourceType } from '../../data';\nexport class LookupNode extends DataFlowNode {\n    constructor(parent, transform, secondary) {\n        super(parent);\n        this.transform = transform;\n        this.secondary = secondary;\n    }\n    clone() {\n        return new LookupNode(null, duplicate(this.transform), this.secondary);\n    }\n    static make(parent, model, transform, counter) {\n        const sources = model.component.data.sources;\n        const { from } = transform;\n        let fromOutputNode = null;\n        if (isLookupData(from)) {\n            let fromSource = findSource(from.data, sources);\n            if (!fromSource) {\n                fromSource = new SourceNode(from.data);\n                sources.push(fromSource);\n            }\n            const fromOutputName = model.getName(`lookup_${counter}`);\n            fromOutputNode = new OutputNode(fromSource, fromOutputName, DataSourceType.Lookup, model.component.data.outputNodeRefCounts);\n            model.component.data.outputNodes[fromOutputName] = fromOutputNode;\n        }\n        else if (isLookupSelection(from)) {\n            const selName = from.param;\n            transform = Object.assign({ as: selName }, transform);\n            let selCmpt;\n            try {\n                selCmpt = model.getSelectionComponent(varName(selName), selName);\n            }\n            catch (e) {\n                throw new Error(log.message.cannotLookupVariableParameter(selName));\n            }\n            fromOutputNode = selCmpt.materialized;\n            if (!fromOutputNode) {\n                throw new Error(log.message.noSameUnitLookup(selName));\n            }\n        }\n        return new LookupNode(parent, transform, fromOutputNode.getSource());\n    }\n    dependentFields() {\n        return new Set([this.transform.lookup]);\n    }\n    producedFields() {\n        return new Set(this.transform.as ? array(this.transform.as) : this.transform.from.fields);\n    }\n    hash() {\n        return `Lookup ${hash({ transform: this.transform, secondary: this.secondary })}`;\n    }\n    assemble() {\n        let foreign;\n        if (this.transform.from.fields) {\n            // lookup a few fields and add create a flat output\n            foreign = Object.assign({ values: this.transform.from.fields }, (this.transform.as ? { as: array(this.transform.as) } : {}));\n        }\n        else {\n            // lookup full record and nest it\n            let asName = this.transform.as;\n            if (!isString(asName)) {\n                log.warn(log.message.NO_FIELDS_NEEDS_AS);\n                asName = '_lookup';\n            }\n            foreign = {\n                as: [asName]\n            };\n        }\n        return Object.assign(Object.assign({ type: 'lookup', from: this.secondary, key: this.transform.from.key, fields: [this.transform.lookup] }, foreign), (this.transform.default ? { default: this.transform.default } : {}));\n    }\n}\n//# sourceMappingURL=lookup.js.map","import * as log from '../../log';\nimport * as optimizers from './optimizers';\nimport { moveFacetDown } from './subtree';\nexport const FACET_SCALE_PREFIX = 'scale_';\nexport const MAX_OPTIMIZATION_RUNS = 5;\n/**\n * Iterates over a dataflow graph and checks whether all links are consistent.\n */\nexport function checkLinks(nodes) {\n    for (const node of nodes) {\n        for (const child of node.children) {\n            if (child.parent !== node) {\n                // log.error('Dataflow graph is inconsistent.', node, child);\n                return false;\n            }\n        }\n        if (!checkLinks(node.children)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Run the specified optimizer on the provided nodes.\n *\n * @param optimizer The optimizer instance to run.\n * @param nodes A set of nodes to optimize.\n */\nfunction runOptimizer(optimizer, nodes) {\n    let modified = false;\n    for (const node of nodes) {\n        modified = optimizer.optimize(node) || modified;\n    }\n    return modified;\n}\nfunction optimizationDataflowHelper(dataComponent, model, firstPass) {\n    let roots = dataComponent.sources;\n    let modified = false;\n    modified = runOptimizer(new optimizers.RemoveUnnecessaryOutputNodes(), roots) || modified;\n    modified = runOptimizer(new optimizers.RemoveUnnecessaryIdentifierNodes(model), roots) || modified;\n    // remove source nodes that don't have any children because they also don't have output nodes\n    roots = roots.filter(r => r.numChildren() > 0);\n    modified = runOptimizer(new optimizers.RemoveUnusedSubtrees(), roots) || modified;\n    roots = roots.filter(r => r.numChildren() > 0);\n    if (!firstPass) {\n        // Only run these optimizations after the optimizer has moved down the facet node.\n        // With this change, we can be more aggressive in the optimizations.\n        modified = runOptimizer(new optimizers.MoveParseUp(), roots) || modified;\n        modified = runOptimizer(new optimizers.MergeBins(model), roots) || modified;\n        modified = runOptimizer(new optimizers.RemoveDuplicateTimeUnits(), roots) || modified;\n        modified = runOptimizer(new optimizers.MergeParse(), roots) || modified;\n        modified = runOptimizer(new optimizers.MergeAggregates(), roots) || modified;\n        modified = runOptimizer(new optimizers.MergeTimeUnits(), roots) || modified;\n        modified = runOptimizer(new optimizers.MergeIdenticalNodes(), roots) || modified;\n        modified = runOptimizer(new optimizers.MergeOutputs(), roots) || modified;\n    }\n    dataComponent.sources = roots;\n    return modified;\n}\n/**\n * Optimizes the dataflow of the passed in data component.\n */\nexport function optimizeDataflow(data, model) {\n    // check before optimizations\n    checkLinks(data.sources);\n    let firstPassCounter = 0;\n    let secondPassCounter = 0;\n    for (let i = 0; i < MAX_OPTIMIZATION_RUNS; i++) {\n        if (!optimizationDataflowHelper(data, model, true)) {\n            break;\n        }\n        firstPassCounter++;\n    }\n    // move facets down and make a copy of the subtree so that we can have scales at the top level\n    data.sources.map(moveFacetDown);\n    for (let i = 0; i < MAX_OPTIMIZATION_RUNS; i++) {\n        if (!optimizationDataflowHelper(data, model, false)) {\n            break;\n        }\n        secondPassCounter++;\n    }\n    // check after optimizations\n    checkLinks(data.sources);\n    if (Math.max(firstPassCounter, secondPassCounter) === MAX_OPTIMIZATION_RUNS) {\n        log.warn(`Maximum optimization runs(${MAX_OPTIMIZATION_RUNS}) reached.`);\n    }\n}\n//# sourceMappingURL=optimize.js.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Optimizer_modified;\nimport { GraticuleNode } from './graticule';\nimport { SequenceNode } from './sequence';\nimport { SourceNode } from './source';\n/**\n * Whether this dataflow node is the source of the dataflow that produces data i.e. a source or a generator.\n */\nexport function isDataSourceNode(node) {\n    return node instanceof SourceNode || node instanceof GraticuleNode || node instanceof SequenceNode;\n}\n/**\n * Abstract base class for Dataflow optimizers.\n * Contains only mutation handling logic. Subclasses need to implement iteration logic.\n */\nexport class Optimizer {\n    constructor() {\n        _Optimizer_modified.set(this, void 0);\n        __classPrivateFieldSet(this, _Optimizer_modified, false, \"f\");\n    }\n    // Once true, #modified is never set to false\n    setModified() {\n        __classPrivateFieldSet(this, _Optimizer_modified, true, \"f\");\n    }\n    get modifiedFlag() {\n        return __classPrivateFieldGet(this, _Optimizer_modified, \"f\");\n    }\n}\n_Optimizer_modified = new WeakMap();\n/**\n * Starts from a node and runs the optimization function (the \"run\" method) upwards to the root,\n * depending on the continue and modified flag values returned by the optimization function.\n */\nexport class BottomUpOptimizer extends Optimizer {\n    /**\n     * Compute a map of node depths that we can use to determine a topological sort order.\n     */\n    getNodeDepths(node, depth, depths) {\n        depths.set(node, depth);\n        for (const child of node.children) {\n            this.getNodeDepths(child, depth + 1, depths);\n        }\n        return depths;\n    }\n    /**\n     * Run the optimizer on all nodes starting from the leaves.\n     */\n    optimize(node) {\n        const depths = this.getNodeDepths(node, 0, new Map());\n        const topologicalSort = [...depths.entries()].sort((a, b) => b[1] - a[1]);\n        for (const tuple of topologicalSort) {\n            this.run(tuple[0]);\n        }\n        return this.modifiedFlag;\n    }\n}\n/**\n * The optimizer function (the \"run\" method), is invoked on the given node and then continues recursively.\n */\nexport class TopDownOptimizer extends Optimizer {\n    /**\n     * Run the optimizer depth first on all nodes starting from the roots.\n     */\n    optimize(node) {\n        this.run(node);\n        for (const child of node.children) {\n            this.optimize(child);\n        }\n        return this.modifiedFlag;\n    }\n}\n//# sourceMappingURL=optimizer.js.map","import { fieldIntersection, hash, hasIntersection, isEmpty, keys, some } from '../../util';\nimport { requiresSelectionId } from '../selection';\nimport { AggregateNode } from './aggregate';\nimport { BinNode } from './bin';\nimport { OutputNode } from './dataflow';\nimport { FacetNode } from './facet';\nimport { FilterNode } from './filter';\nimport { ParseNode } from './formatparse';\nimport { IdentifierNode } from './identifier';\nimport { BottomUpOptimizer, isDataSourceNode, Optimizer, TopDownOptimizer } from './optimizer';\nimport { SourceNode } from './source';\nimport { TimeUnitNode } from './timeunit';\n/**\n * Merge identical nodes at forks by comparing hashes.\n *\n * Does not need to iterate from leaves so we implement this with recursion as it's a bit simpler.\n */\nexport class MergeIdenticalNodes extends TopDownOptimizer {\n    mergeNodes(parent, nodes) {\n        const mergedNode = nodes.shift();\n        for (const node of nodes) {\n            parent.removeChild(node);\n            node.parent = mergedNode;\n            node.remove();\n        }\n    }\n    run(node) {\n        const hashes = node.children.map(x => x.hash());\n        const buckets = {};\n        for (let i = 0; i < hashes.length; i++) {\n            if (buckets[hashes[i]] === undefined) {\n                buckets[hashes[i]] = [node.children[i]];\n            }\n            else {\n                buckets[hashes[i]].push(node.children[i]);\n            }\n        }\n        for (const k of keys(buckets)) {\n            if (buckets[k].length > 1) {\n                this.setModified();\n                this.mergeNodes(node, buckets[k]);\n            }\n        }\n    }\n}\n/**\n * Optimizer that removes identifier nodes that are not needed for selections.\n */\nexport class RemoveUnnecessaryIdentifierNodes extends TopDownOptimizer {\n    constructor(model) {\n        super();\n        this.requiresSelectionId = model && requiresSelectionId(model);\n    }\n    run(node) {\n        if (node instanceof IdentifierNode) {\n            // Only preserve IdentifierNodes if we have default discrete selections\n            // in our model tree, and if the nodes come after tuple producing nodes.\n            if (!(this.requiresSelectionId &&\n                (isDataSourceNode(node.parent) || node.parent instanceof AggregateNode || node.parent instanceof ParseNode))) {\n                this.setModified();\n                node.remove();\n            }\n        }\n    }\n}\n/**\n * Removes duplicate time unit nodes (as determined by the name of the output field) that may be generated due to\n * selections projected over time units. Only keeps the first time unit in any branch.\n *\n * This optimizer is a custom top down optimizer that keep track of produced fields in a branch.\n */\nexport class RemoveDuplicateTimeUnits extends Optimizer {\n    optimize(node) {\n        this.run(node, new Set());\n        return this.modifiedFlag;\n    }\n    run(node, timeUnitFields) {\n        let producedFields = new Set();\n        if (node instanceof TimeUnitNode) {\n            producedFields = node.producedFields();\n            if (hasIntersection(producedFields, timeUnitFields)) {\n                this.setModified();\n                node.removeFormulas(timeUnitFields);\n                if (node.producedFields.length === 0) {\n                    node.remove();\n                }\n            }\n        }\n        for (const child of node.children) {\n            this.run(child, new Set([...timeUnitFields, ...producedFields]));\n        }\n    }\n}\n/**\n * Remove output nodes that are not required.\n */\nexport class RemoveUnnecessaryOutputNodes extends TopDownOptimizer {\n    constructor() {\n        super();\n    }\n    run(node) {\n        if (node instanceof OutputNode && !node.isRequired()) {\n            this.setModified();\n            node.remove();\n        }\n    }\n}\n/**\n * Move parse nodes up to forks and merges them if possible.\n */\nexport class MoveParseUp extends BottomUpOptimizer {\n    run(node) {\n        if (isDataSourceNode(node)) {\n            return;\n        }\n        if (node.numChildren() > 1) {\n            // Don't move parse further up but continue with parent.\n            return;\n        }\n        for (const child of node.children) {\n            if (child instanceof ParseNode) {\n                if (node instanceof ParseNode) {\n                    this.setModified();\n                    node.merge(child);\n                }\n                else {\n                    // Don't swap with nodes that produce something that the parse node depends on (e.g. lookup).\n                    if (fieldIntersection(node.producedFields(), child.dependentFields())) {\n                        continue;\n                    }\n                    this.setModified();\n                    child.swapWithParent();\n                }\n            }\n        }\n        return;\n    }\n}\n/**\n * Inserts an intermediate ParseNode containing all non-conflicting parse fields and removes the empty ParseNodes.\n *\n * We assume that dependent paths that do not have a parse node can be just merged.\n */\nexport class MergeParse extends BottomUpOptimizer {\n    run(node) {\n        const originalChildren = [...node.children];\n        const parseChildren = node.children.filter((child) => child instanceof ParseNode);\n        if (node.numChildren() > 1 && parseChildren.length >= 1) {\n            const commonParse = {};\n            const conflictingParse = new Set();\n            for (const parseNode of parseChildren) {\n                const parse = parseNode.parse;\n                for (const k of keys(parse)) {\n                    if (!(k in commonParse)) {\n                        commonParse[k] = parse[k];\n                    }\n                    else if (commonParse[k] !== parse[k]) {\n                        conflictingParse.add(k);\n                    }\n                }\n            }\n            for (const field of conflictingParse) {\n                delete commonParse[field];\n            }\n            if (!isEmpty(commonParse)) {\n                this.setModified();\n                const mergedParseNode = new ParseNode(node, commonParse);\n                for (const childNode of originalChildren) {\n                    if (childNode instanceof ParseNode) {\n                        for (const key of keys(commonParse)) {\n                            delete childNode.parse[key];\n                        }\n                    }\n                    node.removeChild(childNode);\n                    childNode.parent = mergedParseNode;\n                    // remove empty parse nodes\n                    if (childNode instanceof ParseNode && keys(childNode.parse).length === 0) {\n                        childNode.remove();\n                    }\n                }\n            }\n        }\n    }\n}\n/**\n * Repeatedly remove leaf nodes that are not output or facet nodes.\n * The reason is that we don't need subtrees that don't have any output nodes.\n * Facet nodes are needed for the row or column domains.\n */\nexport class RemoveUnusedSubtrees extends BottomUpOptimizer {\n    run(node) {\n        if (node instanceof OutputNode || node.numChildren() > 0 || node instanceof FacetNode) {\n            // no need to continue with parent because it is output node or will have children (there was a fork)\n        }\n        else if (node instanceof SourceNode) {\n            // ignore empty unused sources as they will be removed in optimizationDataflowHelper\n        }\n        else {\n            this.setModified();\n            node.remove();\n        }\n    }\n}\n/**\n * Merge adjacent time unit nodes.\n */\nexport class MergeTimeUnits extends BottomUpOptimizer {\n    run(node) {\n        const timeUnitChildren = node.children.filter((x) => x instanceof TimeUnitNode);\n        const combination = timeUnitChildren.pop();\n        for (const timeUnit of timeUnitChildren) {\n            this.setModified();\n            combination.merge(timeUnit);\n        }\n    }\n}\nexport class MergeAggregates extends BottomUpOptimizer {\n    run(node) {\n        const aggChildren = node.children.filter((child) => child instanceof AggregateNode);\n        // Object which we'll use to map the fields which an aggregate is grouped by to\n        // the set of aggregates with that grouping. This is useful as only aggregates\n        // with the same group by can be merged\n        const groupedAggregates = {};\n        // Build groupedAggregates\n        for (const agg of aggChildren) {\n            const groupBys = hash(agg.groupBy);\n            if (!(groupBys in groupedAggregates)) {\n                groupedAggregates[groupBys] = [];\n            }\n            groupedAggregates[groupBys].push(agg);\n        }\n        // Merge aggregateNodes with same key in groupedAggregates\n        for (const group of keys(groupedAggregates)) {\n            const mergeableAggs = groupedAggregates[group];\n            if (mergeableAggs.length > 1) {\n                const mergedAggs = mergeableAggs.pop();\n                for (const agg of mergeableAggs) {\n                    if (mergedAggs.merge(agg)) {\n                        node.removeChild(agg);\n                        agg.parent = mergedAggs;\n                        agg.remove();\n                        this.setModified();\n                    }\n                }\n            }\n        }\n    }\n}\n/**\n * Merge bin nodes and move them up through forks. Stop at filters, parse, identifier as we want them to stay before the bin node.\n */\nexport class MergeBins extends BottomUpOptimizer {\n    constructor(model) {\n        super();\n        this.model = model;\n    }\n    run(node) {\n        const moveBinsUp = !(isDataSourceNode(node) ||\n            node instanceof FilterNode ||\n            node instanceof ParseNode ||\n            node instanceof IdentifierNode);\n        const promotableBins = [];\n        const remainingBins = [];\n        for (const child of node.children) {\n            if (child instanceof BinNode) {\n                if (moveBinsUp && !fieldIntersection(node.producedFields(), child.dependentFields())) {\n                    promotableBins.push(child);\n                }\n                else {\n                    remainingBins.push(child);\n                }\n            }\n        }\n        if (promotableBins.length > 0) {\n            const promotedBin = promotableBins.pop();\n            for (const bin of promotableBins) {\n                promotedBin.merge(bin, this.model.renameSignal.bind(this.model));\n            }\n            this.setModified();\n            if (node instanceof BinNode) {\n                node.merge(promotedBin, this.model.renameSignal.bind(this.model));\n            }\n            else {\n                promotedBin.swapWithParent();\n            }\n        }\n        if (remainingBins.length > 1) {\n            const remainingBin = remainingBins.pop();\n            for (const bin of remainingBins) {\n                remainingBin.merge(bin, this.model.renameSignal.bind(this.model));\n            }\n            this.setModified();\n        }\n    }\n}\n/**\n * This optimizer takes output nodes that are at a fork and moves them before the fork.\n *\n * The algorithm iterates over the children and tries to find the last output node in a chain of output nodes.\n * It then moves all output nodes before that main output node. All other children (and the children of the output nodes)\n * are inserted after the main output node.\n */\nexport class MergeOutputs extends BottomUpOptimizer {\n    run(node) {\n        const children = [...node.children];\n        const hasOutputChild = some(children, child => child instanceof OutputNode);\n        if (!hasOutputChild || node.numChildren() <= 1) {\n            return;\n        }\n        const otherChildren = [];\n        // The output node we will connect all other nodes to.\n        // Output nodes will be added before the new node, other nodes after.\n        let mainOutput;\n        for (const child of children) {\n            if (child instanceof OutputNode) {\n                let lastOutput = child;\n                while (lastOutput.numChildren() === 1) {\n                    const [theChild] = lastOutput.children;\n                    if (theChild instanceof OutputNode) {\n                        lastOutput = theChild;\n                    }\n                    else {\n                        break;\n                    }\n                }\n                otherChildren.push(...lastOutput.children);\n                if (mainOutput) {\n                    // Move the output nodes before the mainOutput. We do this by setting\n                    // the parent of the first not to the parent of the main output and\n                    // the main output's parent to the last output.\n                    // note: the child is the first output\n                    node.removeChild(child);\n                    child.parent = mainOutput.parent;\n                    mainOutput.parent.removeChild(mainOutput);\n                    mainOutput.parent = lastOutput;\n                    this.setModified();\n                }\n                else {\n                    mainOutput = lastOutput;\n                }\n            }\n            else {\n                otherChildren.push(child);\n            }\n        }\n        if (otherChildren.length) {\n            this.setModified();\n            for (const child of otherChildren) {\n                child.parent.removeChild(child);\n                child.parent = mainOutput;\n            }\n        }\n    }\n}\n//# sourceMappingURL=optimizers.js.map","import { AncestorParse } from '.';\nimport { isGenerator, isGraticuleGenerator, isInlineData, isNamedData, isSequenceGenerator, isUrlData, DataSourceType } from '../../data';\nimport * as log from '../../log';\nimport { isAggregate, isBin, isCalculate, isDensity, isFilter, isFlatten, isFold, isImpute, isJoinAggregate, isLoess, isLookup, isPivot, isQuantile, isRegression, isSample, isStack, isTimeUnit, isWindow } from '../../transform';\nimport { deepEqual, mergeDeep } from '../../util';\nimport { isFacetModel, isLayerModel, isUnitModel } from '../model';\nimport { requiresSelectionId } from '../selection';\nimport { materializeSelections } from '../selection/parse';\nimport { AggregateNode } from './aggregate';\nimport { BinNode } from './bin';\nimport { CalculateNode } from './calculate';\nimport { OutputNode } from './dataflow';\nimport { DensityTransformNode } from './density';\nimport { FacetNode } from './facet';\nimport { FilterNode } from './filter';\nimport { FilterInvalidNode } from './filterinvalid';\nimport { FlattenTransformNode } from './flatten';\nimport { FoldTransformNode } from './fold';\nimport { getImplicitFromEncoding, getImplicitFromFilterTransform, getImplicitFromSelection, ParseNode } from './formatparse';\nimport { GeoJSONNode } from './geojson';\nimport { GeoPointNode } from './geopoint';\nimport { GraticuleNode } from './graticule';\nimport { IdentifierNode } from './identifier';\nimport { ImputeNode } from './impute';\nimport { JoinAggregateTransformNode } from './joinaggregate';\nimport { makeJoinAggregateFromFacet } from './joinaggregatefacet';\nimport { LoessTransformNode } from './loess';\nimport { LookupNode } from './lookup';\nimport { PivotTransformNode } from './pivot';\nimport { QuantileTransformNode } from './quantile';\nimport { RegressionTransformNode } from './regression';\nimport { SampleTransformNode } from './sample';\nimport { SequenceNode } from './sequence';\nimport { SourceNode } from './source';\nimport { StackNode } from './stack';\nimport { TimeUnitNode } from './timeunit';\nimport { WindowTransformNode } from './window';\nexport function findSource(data, sources) {\n    var _a, _b, _c, _d;\n    for (const other of sources) {\n        const otherData = other.data;\n        // if both datasets have a name defined, we cannot merge\n        if (data.name && other.hasName() && data.name !== other.dataName) {\n            continue;\n        }\n        const formatMesh = (_a = data['format']) === null || _a === void 0 ? void 0 : _a.mesh;\n        const otherFeature = (_b = otherData.format) === null || _b === void 0 ? void 0 : _b.feature;\n        // feature and mesh are mutually exclusive\n        if (formatMesh && otherFeature) {\n            continue;\n        }\n        // we have to extract the same feature or mesh\n        const formatFeature = (_c = data['format']) === null || _c === void 0 ? void 0 : _c.feature;\n        if ((formatFeature || otherFeature) && formatFeature !== otherFeature) {\n            continue;\n        }\n        const otherMesh = (_d = otherData.format) === null || _d === void 0 ? void 0 : _d.mesh;\n        if ((formatMesh || otherMesh) && formatMesh !== otherMesh) {\n            continue;\n        }\n        if (isInlineData(data) && isInlineData(otherData)) {\n            if (deepEqual(data.values, otherData.values)) {\n                return other;\n            }\n        }\n        else if (isUrlData(data) && isUrlData(otherData)) {\n            if (data.url === otherData.url) {\n                return other;\n            }\n        }\n        else if (isNamedData(data)) {\n            if (data.name === other.dataName) {\n                return other;\n            }\n        }\n    }\n    return null;\n}\nfunction parseRoot(model, sources) {\n    if (model.data || !model.parent) {\n        // if the model defines a data source or is the root, create a source node\n        if (model.data === null) {\n            // data: null means we should ignore the parent's data so we just create a new data source\n            const source = new SourceNode({ values: [] });\n            sources.push(source);\n            return source;\n        }\n        const existingSource = findSource(model.data, sources);\n        if (existingSource) {\n            if (!isGenerator(model.data)) {\n                existingSource.data.format = mergeDeep({}, model.data.format, existingSource.data.format);\n            }\n            // if the new source has a name but the existing one does not, we can set it\n            if (!existingSource.hasName() && model.data.name) {\n                existingSource.dataName = model.data.name;\n            }\n            return existingSource;\n        }\n        else {\n            const source = new SourceNode(model.data);\n            sources.push(source);\n            return source;\n        }\n    }\n    else {\n        // If we don't have a source defined (overriding parent's data), use the parent's facet root or main.\n        return model.parent.component.data.facetRoot\n            ? model.parent.component.data.facetRoot\n            : model.parent.component.data.main;\n    }\n}\n/**\n * Parses a transform array into a chain of connected dataflow nodes.\n */\nexport function parseTransformArray(head, model, ancestorParse) {\n    var _a, _b;\n    let lookupCounter = 0;\n    for (const t of model.transforms) {\n        let derivedType = undefined;\n        let transformNode;\n        if (isCalculate(t)) {\n            transformNode = head = new CalculateNode(head, t);\n            derivedType = 'derived';\n        }\n        else if (isFilter(t)) {\n            const implicit = getImplicitFromFilterTransform(t);\n            transformNode = head = (_a = ParseNode.makeWithAncestors(head, {}, implicit, ancestorParse)) !== null && _a !== void 0 ? _a : head;\n            head = new FilterNode(head, model, t.filter);\n        }\n        else if (isBin(t)) {\n            transformNode = head = BinNode.makeFromTransform(head, t, model);\n            derivedType = 'number';\n        }\n        else if (isTimeUnit(t)) {\n            derivedType = 'date';\n            const parsedAs = ancestorParse.getWithExplicit(t.field);\n            // Create parse node because the input to time unit is always date.\n            if (parsedAs.value === undefined) {\n                head = new ParseNode(head, { [t.field]: derivedType });\n                ancestorParse.set(t.field, derivedType, false);\n            }\n            transformNode = head = TimeUnitNode.makeFromTransform(head, t);\n        }\n        else if (isAggregate(t)) {\n            transformNode = head = AggregateNode.makeFromTransform(head, t);\n            derivedType = 'number';\n            if (requiresSelectionId(model)) {\n                head = new IdentifierNode(head);\n            }\n        }\n        else if (isLookup(t)) {\n            transformNode = head = LookupNode.make(head, model, t, lookupCounter++);\n            derivedType = 'derived';\n        }\n        else if (isWindow(t)) {\n            transformNode = head = new WindowTransformNode(head, t);\n            derivedType = 'number';\n        }\n        else if (isJoinAggregate(t)) {\n            transformNode = head = new JoinAggregateTransformNode(head, t);\n            derivedType = 'number';\n        }\n        else if (isStack(t)) {\n            transformNode = head = StackNode.makeFromTransform(head, t);\n            derivedType = 'derived';\n        }\n        else if (isFold(t)) {\n            transformNode = head = new FoldTransformNode(head, t);\n            derivedType = 'derived';\n        }\n        else if (isFlatten(t)) {\n            transformNode = head = new FlattenTransformNode(head, t);\n            derivedType = 'derived';\n        }\n        else if (isPivot(t)) {\n            transformNode = head = new PivotTransformNode(head, t);\n            derivedType = 'derived';\n        }\n        else if (isSample(t)) {\n            head = new SampleTransformNode(head, t);\n        }\n        else if (isImpute(t)) {\n            transformNode = head = ImputeNode.makeFromTransform(head, t);\n            derivedType = 'derived';\n        }\n        else if (isDensity(t)) {\n            transformNode = head = new DensityTransformNode(head, t);\n            derivedType = 'derived';\n        }\n        else if (isQuantile(t)) {\n            transformNode = head = new QuantileTransformNode(head, t);\n            derivedType = 'derived';\n        }\n        else if (isRegression(t)) {\n            transformNode = head = new RegressionTransformNode(head, t);\n            derivedType = 'derived';\n        }\n        else if (isLoess(t)) {\n            transformNode = head = new LoessTransformNode(head, t);\n            derivedType = 'derived';\n        }\n        else {\n            log.warn(log.message.invalidTransformIgnored(t));\n            continue;\n        }\n        if (transformNode && derivedType !== undefined) {\n            for (const field of (_b = transformNode.producedFields()) !== null && _b !== void 0 ? _b : []) {\n                ancestorParse.set(field, derivedType, false);\n            }\n        }\n    }\n    return head;\n}\n/*\nDescription of the dataflow (http://asciiflow.com/):\n     +--------+\n     | Source |\n     +---+----+\n         |\n         v\n     FormatParse\n     (explicit)\n         |\n         v\n     Transforms\n(Filter, Calculate, Binning, TimeUnit, Aggregate, Window, ...)\n         |\n         v\n     FormatParse\n     (implicit)\n         |\n         v\n Binning (in `encoding`)\n         |\n         v\n Timeunit (in `encoding`)\n         |\n         v\nFormula From Sort Array\n         |\n         v\n      +--+--+\n      | Raw |\n      +-----+\n         |\n         v\n  Aggregate (in `encoding`)\n         |\n         v\n  Stack (in `encoding`)\n         |\n         v\n  Invalid Filter\n         |\n         v\n   +----------+\n   |   Main   |\n   +----------+\n         |\n         v\n     +-------+\n     | Facet |----> \"column\", \"column-layout\", and \"row\"\n     +-------+\n         |\n         v\n  ...Child data...\n*/\nexport function parseData(model) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n    let head = parseRoot(model, model.component.data.sources);\n    const { outputNodes, outputNodeRefCounts } = model.component.data;\n    const data = model.data;\n    const newData = data && (isGenerator(data) || isUrlData(data) || isInlineData(data));\n    const ancestorParse = !newData && model.parent ? model.parent.component.data.ancestorParse.clone() : new AncestorParse();\n    if (isGenerator(data)) {\n        // insert generator transform\n        if (isSequenceGenerator(data)) {\n            head = new SequenceNode(head, data.sequence);\n        }\n        else if (isGraticuleGenerator(data)) {\n            head = new GraticuleNode(head, data.graticule);\n        }\n        // no parsing necessary for generator\n        ancestorParse.parseNothing = true;\n    }\n    else if (((_a = data === null || data === void 0 ? void 0 : data.format) === null || _a === void 0 ? void 0 : _a.parse) === null) {\n        // format.parse: null means disable parsing\n        ancestorParse.parseNothing = true;\n    }\n    head = (_b = ParseNode.makeExplicit(head, model, ancestorParse)) !== null && _b !== void 0 ? _b : head;\n    // Default discrete selections require an identifer transform to\n    // uniquely identify data points. Add this transform at the head of\n    // the pipeline such that the identifier field is available for all\n    // subsequent datasets. During optimization, we will remove this\n    // transform if it proves to be unnecessary. Additional identifier\n    // transforms will be necessary when new tuples are constructed\n    // (e.g., post-aggregation).\n    head = new IdentifierNode(head);\n    // HACK: This is equivalent for merging bin extent for union scale.\n    // FIXME(https://github.com/vega/vega-lite/issues/2270): Correctly merge extent / bin node for shared bin scale\n    const parentIsLayer = model.parent && isLayerModel(model.parent);\n    if (isUnitModel(model) || isFacetModel(model)) {\n        if (parentIsLayer) {\n            head = (_c = BinNode.makeFromEncoding(head, model)) !== null && _c !== void 0 ? _c : head;\n        }\n    }\n    if (model.transforms.length > 0) {\n        head = parseTransformArray(head, model, ancestorParse);\n    }\n    // create parse nodes for fields that need to be parsed (or flattened) implicitly\n    const implicitSelection = getImplicitFromSelection(model);\n    const implicitEncoding = getImplicitFromEncoding(model);\n    head = (_d = ParseNode.makeWithAncestors(head, {}, Object.assign(Object.assign({}, implicitSelection), implicitEncoding), ancestorParse)) !== null && _d !== void 0 ? _d : head;\n    if (isUnitModel(model)) {\n        head = GeoJSONNode.parseAll(head, model);\n        head = GeoPointNode.parseAll(head, model);\n    }\n    if (isUnitModel(model) || isFacetModel(model)) {\n        if (!parentIsLayer) {\n            head = (_e = BinNode.makeFromEncoding(head, model)) !== null && _e !== void 0 ? _e : head;\n        }\n        head = (_f = TimeUnitNode.makeFromEncoding(head, model)) !== null && _f !== void 0 ? _f : head;\n        head = CalculateNode.parseAllForSortIndex(head, model);\n    }\n    // add an output node pre aggregation\n    const rawName = model.getDataName(DataSourceType.Raw);\n    const raw = new OutputNode(head, rawName, DataSourceType.Raw, outputNodeRefCounts);\n    outputNodes[rawName] = raw;\n    head = raw;\n    if (isUnitModel(model)) {\n        const agg = AggregateNode.makeFromEncoding(head, model);\n        if (agg) {\n            head = agg;\n            if (requiresSelectionId(model)) {\n                head = new IdentifierNode(head);\n            }\n        }\n        head = (_g = ImputeNode.makeFromEncoding(head, model)) !== null && _g !== void 0 ? _g : head;\n        head = (_h = StackNode.makeFromEncoding(head, model)) !== null && _h !== void 0 ? _h : head;\n    }\n    if (isUnitModel(model)) {\n        head = (_j = FilterInvalidNode.make(head, model)) !== null && _j !== void 0 ? _j : head;\n    }\n    // output node for marks\n    const mainName = model.getDataName(DataSourceType.Main);\n    const main = new OutputNode(head, mainName, DataSourceType.Main, outputNodeRefCounts);\n    outputNodes[mainName] = main;\n    head = main;\n    if (isUnitModel(model)) {\n        materializeSelections(model, main);\n    }\n    // add facet marker\n    let facetRoot = null;\n    if (isFacetModel(model)) {\n        const facetName = model.getName('facet');\n        // Derive new aggregate for facet's sort field\n        // augment data source with new fields for crossed facet\n        head = (_k = makeJoinAggregateFromFacet(head, model.facet)) !== null && _k !== void 0 ? _k : head;\n        facetRoot = new FacetNode(head, model, facetName, main.getSource());\n        outputNodes[facetName] = facetRoot;\n    }\n    return Object.assign(Object.assign({}, model.component.data), { outputNodes,\n        outputNodeRefCounts,\n        raw,\n        main,\n        facetRoot,\n        ancestorParse });\n}\n//# sourceMappingURL=parse.js.map","import { duplicate, hash, unique } from '../../util';\nimport { DataFlowNode } from './dataflow';\n/**\n * A class for pivot transform nodes.\n */\nexport class PivotTransformNode extends DataFlowNode {\n    constructor(parent, transform) {\n        super(parent);\n        this.transform = transform;\n    }\n    clone() {\n        return new PivotTransformNode(null, duplicate(this.transform));\n    }\n    addDimensions(fields) {\n        var _a;\n        this.transform.groupby = unique(((_a = this.transform.groupby) !== null && _a !== void 0 ? _a : []).concat(fields), d => d);\n    }\n    producedFields() {\n        return undefined; // return undefined so that potentially everything can depend on the pivot\n    }\n    dependentFields() {\n        var _a;\n        return new Set([this.transform.pivot, this.transform.value, ...((_a = this.transform.groupby) !== null && _a !== void 0 ? _a : [])]);\n    }\n    hash() {\n        return `PivotTransform ${hash(this.transform)}`;\n    }\n    assemble() {\n        const { pivot, value, groupby, limit, op } = this.transform;\n        return Object.assign(Object.assign(Object.assign({ type: 'pivot', field: pivot, value }, (limit !== undefined ? { limit } : {})), (op !== undefined ? { op } : {})), (groupby !== undefined ? { groupby } : {}));\n    }\n}\n//# sourceMappingURL=pivot.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { duplicate, hash } from '../../util';\nimport { DataFlowNode } from './dataflow';\n/**\n * A class for quantile transform nodes\n */\nexport class QuantileTransformNode extends DataFlowNode {\n    constructor(parent, transform) {\n        var _a, _b, _c;\n        super(parent);\n        this.transform = transform;\n        this.transform = duplicate(transform); // duplicate to prevent side effects\n        const specifiedAs = (_a = this.transform.as) !== null && _a !== void 0 ? _a : [undefined, undefined];\n        this.transform.as = [(_b = specifiedAs[0]) !== null && _b !== void 0 ? _b : 'prob', (_c = specifiedAs[1]) !== null && _c !== void 0 ? _c : 'value'];\n    }\n    clone() {\n        return new QuantileTransformNode(null, duplicate(this.transform));\n    }\n    dependentFields() {\n        var _a;\n        return new Set([this.transform.quantile, ...((_a = this.transform.groupby) !== null && _a !== void 0 ? _a : [])]);\n    }\n    producedFields() {\n        return new Set(this.transform.as);\n    }\n    hash() {\n        return `QuantileTransform ${hash(this.transform)}`;\n    }\n    assemble() {\n        const _a = this.transform, { quantile } = _a, rest = __rest(_a, [\"quantile\"]);\n        const result = Object.assign({ type: 'quantile', field: quantile }, rest);\n        return result;\n    }\n}\n//# sourceMappingURL=quantile.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { duplicate, hash } from '../../util';\nimport { DataFlowNode } from './dataflow';\n/**\n * A class for regression transform nodes\n */\nexport class RegressionTransformNode extends DataFlowNode {\n    constructor(parent, transform) {\n        var _a, _b, _c;\n        super(parent);\n        this.transform = transform;\n        this.transform = duplicate(transform); // duplicate to prevent side effects\n        const specifiedAs = (_a = this.transform.as) !== null && _a !== void 0 ? _a : [undefined, undefined];\n        this.transform.as = [(_b = specifiedAs[0]) !== null && _b !== void 0 ? _b : transform.on, (_c = specifiedAs[1]) !== null && _c !== void 0 ? _c : transform.regression];\n    }\n    clone() {\n        return new RegressionTransformNode(null, duplicate(this.transform));\n    }\n    dependentFields() {\n        var _a;\n        return new Set([this.transform.regression, this.transform.on, ...((_a = this.transform.groupby) !== null && _a !== void 0 ? _a : [])]);\n    }\n    producedFields() {\n        return new Set(this.transform.as);\n    }\n    hash() {\n        return `RegressionTransform ${hash(this.transform)}`;\n    }\n    assemble() {\n        const _a = this.transform, { regression, on } = _a, rest = __rest(_a, [\"regression\", \"on\"]);\n        const result = Object.assign({ type: 'regression', x: on, y: regression }, rest);\n        return result;\n    }\n}\n//# sourceMappingURL=regression.js.map","import { duplicate, hash } from '../../util';\nimport { DataFlowNode } from './dataflow';\n/**\n * A class for the sample transform nodes\n */\nexport class SampleTransformNode extends DataFlowNode {\n    constructor(parent, transform) {\n        super(parent);\n        this.transform = transform;\n    }\n    clone() {\n        return new SampleTransformNode(null, duplicate(this.transform));\n    }\n    dependentFields() {\n        return new Set();\n    }\n    producedFields() {\n        return new Set();\n    }\n    hash() {\n        return `SampleTransform ${hash(this.transform)}`;\n    }\n    assemble() {\n        return {\n            type: 'sample',\n            size: this.transform.sample\n        };\n    }\n}\n//# sourceMappingURL=sample.js.map","import { hash } from '../../util';\nimport { DataFlowNode } from './dataflow';\nexport class SequenceNode extends DataFlowNode {\n    constructor(parent, params) {\n        super(parent);\n        this.params = params;\n    }\n    clone() {\n        return new SequenceNode(null, this.params);\n    }\n    dependentFields() {\n        return new Set();\n    }\n    producedFields() {\n        var _a;\n        return new Set([(_a = this.params.as) !== null && _a !== void 0 ? _a : 'data']);\n    }\n    hash() {\n        return `Hash ${hash(this.params)}`;\n    }\n    assemble() {\n        return Object.assign({ type: 'sequence' }, this.params);\n    }\n}\n//# sourceMappingURL=sequence.js.map","import { isGenerator, isInlineData, isNamedData, isSphereGenerator, isUrlData } from '../../data';\nimport { contains, isEmpty, omit } from '../../util';\nimport { DataFlowNode } from './dataflow';\nexport class SourceNode extends DataFlowNode {\n    constructor(data) {\n        super(null); // source cannot have parent\n        data !== null && data !== void 0 ? data : (data = { name: 'source' });\n        let format;\n        if (!isGenerator(data)) {\n            format = data.format ? Object.assign({}, omit(data.format, ['parse'])) : {};\n        }\n        if (isInlineData(data)) {\n            this._data = { values: data.values };\n        }\n        else if (isUrlData(data)) {\n            this._data = { url: data.url };\n            if (!format.type) {\n                // Extract extension from URL using snippet from\n                // http://stackoverflow.com/questions/680929/how-to-extract-extension-from-filename-string-in-javascript\n                let defaultExtension = /(?:\\.([^.]+))?$/.exec(data.url)[1];\n                if (!contains(['json', 'csv', 'tsv', 'dsv', 'topojson'], defaultExtension)) {\n                    defaultExtension = 'json';\n                }\n                // defaultExtension has type string but we ensure that it is DataFormatType above\n                format.type = defaultExtension;\n            }\n        }\n        else if (isSphereGenerator(data)) {\n            // hardwire GeoJSON sphere data into output specification\n            this._data = { values: [{ type: 'Sphere' }] };\n        }\n        else if (isNamedData(data) || isGenerator(data)) {\n            this._data = {};\n        }\n        // set flag to check if generator\n        this._generator = isGenerator(data);\n        // any dataset can be named\n        if (data.name) {\n            this._name = data.name;\n        }\n        if (format && !isEmpty(format)) {\n            this._data.format = format;\n        }\n    }\n    dependentFields() {\n        return new Set();\n    }\n    producedFields() {\n        return undefined; // we don't know what this source produces\n    }\n    get data() {\n        return this._data;\n    }\n    hasName() {\n        return !!this._name;\n    }\n    get isGenerator() {\n        return this._generator;\n    }\n    get dataName() {\n        return this._name;\n    }\n    set dataName(name) {\n        this._name = name;\n    }\n    set parent(parent) {\n        throw new Error('Source nodes have to be roots.');\n    }\n    remove() {\n        throw new Error('Source nodes are roots and cannot be removed.');\n    }\n    hash() {\n        throw new Error('Cannot hash sources');\n    }\n    assemble() {\n        return Object.assign(Object.assign({ name: this._name }, this._data), { transform: [] });\n    }\n}\n//# sourceMappingURL=source.js.map","import { isArray, isString } from 'vega-util';\nimport { getFieldDef, isFieldDef, vgField } from '../../channeldef';\nimport { duplicate, getFirstDefined, hash } from '../../util';\nimport { sortParams } from '../common';\nimport { DataFlowNode } from './dataflow';\nfunction getStackByFields(model) {\n    return model.stack.stackBy.reduce((fields, by) => {\n        const fieldDef = by.fieldDef;\n        const _field = vgField(fieldDef);\n        if (_field) {\n            fields.push(_field);\n        }\n        return fields;\n    }, []);\n}\nfunction isValidAsArray(as) {\n    return isArray(as) && as.every(s => isString(s)) && as.length > 1;\n}\nexport class StackNode extends DataFlowNode {\n    constructor(parent, stack) {\n        super(parent);\n        this._stack = stack;\n    }\n    clone() {\n        return new StackNode(null, duplicate(this._stack));\n    }\n    static makeFromTransform(parent, stackTransform) {\n        const { stack, groupby, as, offset = 'zero' } = stackTransform;\n        const sortFields = [];\n        const sortOrder = [];\n        if (stackTransform.sort !== undefined) {\n            for (const sortField of stackTransform.sort) {\n                sortFields.push(sortField.field);\n                sortOrder.push(getFirstDefined(sortField.order, 'ascending'));\n            }\n        }\n        const sort = {\n            field: sortFields,\n            order: sortOrder\n        };\n        let normalizedAs;\n        if (isValidAsArray(as)) {\n            normalizedAs = as;\n        }\n        else if (isString(as)) {\n            normalizedAs = [as, `${as}_end`];\n        }\n        else {\n            normalizedAs = [`${stackTransform.stack}_start`, `${stackTransform.stack}_end`];\n        }\n        return new StackNode(parent, {\n            dimensionFieldDefs: [],\n            stackField: stack,\n            groupby,\n            offset,\n            sort,\n            facetby: [],\n            as: normalizedAs\n        });\n    }\n    static makeFromEncoding(parent, model) {\n        const stackProperties = model.stack;\n        const { encoding } = model;\n        if (!stackProperties) {\n            return null;\n        }\n        const { groupbyChannels, fieldChannel, offset, impute } = stackProperties;\n        const dimensionFieldDefs = groupbyChannels\n            .map(groupbyChannel => {\n            const cDef = encoding[groupbyChannel];\n            return getFieldDef(cDef);\n        })\n            .filter(def => !!def);\n        const stackby = getStackByFields(model);\n        const orderDef = model.encoding.order;\n        let sort;\n        if (isArray(orderDef) || isFieldDef(orderDef)) {\n            sort = sortParams(orderDef);\n        }\n        else {\n            // default = descending by stackFields\n            // FIXME is the default here correct for binned fields?\n            sort = stackby.reduce((s, field) => {\n                s.field.push(field);\n                s.order.push(fieldChannel === 'y' ? 'descending' : 'ascending');\n                return s;\n            }, { field: [], order: [] });\n        }\n        return new StackNode(parent, {\n            dimensionFieldDefs,\n            stackField: model.vgField(fieldChannel),\n            facetby: [],\n            stackby,\n            sort,\n            offset,\n            impute,\n            as: [\n                model.vgField(fieldChannel, { suffix: 'start', forAs: true }),\n                model.vgField(fieldChannel, { suffix: 'end', forAs: true })\n            ]\n        });\n    }\n    get stack() {\n        return this._stack;\n    }\n    addDimensions(fields) {\n        this._stack.facetby.push(...fields);\n    }\n    dependentFields() {\n        const out = new Set();\n        out.add(this._stack.stackField);\n        this.getGroupbyFields().forEach(out.add, out);\n        this._stack.facetby.forEach(out.add, out);\n        this._stack.sort.field.forEach(out.add, out);\n        return out;\n    }\n    producedFields() {\n        return new Set(this._stack.as);\n    }\n    hash() {\n        return `Stack ${hash(this._stack)}`;\n    }\n    getGroupbyFields() {\n        const { dimensionFieldDefs, impute, groupby } = this._stack;\n        if (dimensionFieldDefs.length > 0) {\n            return dimensionFieldDefs\n                .map(dimensionFieldDef => {\n                if (dimensionFieldDef.bin) {\n                    if (impute) {\n                        // For binned group by field with impute, we calculate bin_mid\n                        // as we cannot impute two fields simultaneously\n                        return [vgField(dimensionFieldDef, { binSuffix: 'mid' })];\n                    }\n                    return [\n                        // For binned group by field without impute, we need both bin (start) and bin_end\n                        vgField(dimensionFieldDef, {}),\n                        vgField(dimensionFieldDef, { binSuffix: 'end' })\n                    ];\n                }\n                return [vgField(dimensionFieldDef)];\n            })\n                .flat();\n        }\n        return groupby !== null && groupby !== void 0 ? groupby : [];\n    }\n    assemble() {\n        const transform = [];\n        const { facetby, dimensionFieldDefs, stackField: field, stackby, sort, offset, impute, as } = this._stack;\n        // Impute\n        if (impute) {\n            for (const dimensionFieldDef of dimensionFieldDefs) {\n                const { bandPosition = 0.5, bin } = dimensionFieldDef;\n                if (bin) {\n                    // As we can only impute one field at a time, we need to calculate\n                    // mid point for a binned field\n                    const binStart = vgField(dimensionFieldDef, { expr: 'datum' });\n                    const binEnd = vgField(dimensionFieldDef, { expr: 'datum', binSuffix: 'end' });\n                    transform.push({\n                        type: 'formula',\n                        expr: `${bandPosition}*${binStart}+${1 - bandPosition}*${binEnd}`,\n                        as: vgField(dimensionFieldDef, { binSuffix: 'mid', forAs: true })\n                    });\n                }\n                transform.push({\n                    type: 'impute',\n                    field,\n                    groupby: [...stackby, ...facetby],\n                    key: vgField(dimensionFieldDef, { binSuffix: 'mid' }),\n                    method: 'value',\n                    value: 0\n                });\n            }\n        }\n        // Stack\n        transform.push({\n            type: 'stack',\n            groupby: [...this.getGroupbyFields(), ...facetby],\n            field,\n            sort,\n            as,\n            offset\n        });\n        return transform;\n    }\n}\n//# sourceMappingURL=stack.js.map","import { DataSourceType } from '../../data';\nimport { AggregateNode } from './aggregate';\nimport { OutputNode } from './dataflow';\nimport { FacetNode } from './facet';\nimport { JoinAggregateTransformNode } from './joinaggregate';\nimport { FACET_SCALE_PREFIX } from './optimize';\nimport { StackNode } from './stack';\nimport { WindowTransformNode } from './window';\n/**\n * Clones the subtree and ignores output nodes except for the leaves, which are renamed.\n */\nfunction cloneSubtree(facet) {\n    function clone(node) {\n        if (!(node instanceof FacetNode)) {\n            const copy = node.clone();\n            if (copy instanceof OutputNode) {\n                const newName = FACET_SCALE_PREFIX + copy.getSource();\n                copy.setSource(newName);\n                facet.model.component.data.outputNodes[newName] = copy;\n            }\n            else if (copy instanceof AggregateNode ||\n                copy instanceof StackNode ||\n                copy instanceof WindowTransformNode ||\n                copy instanceof JoinAggregateTransformNode) {\n                copy.addDimensions(facet.fields);\n            }\n            for (const n of node.children.flatMap(clone)) {\n                n.parent = copy;\n            }\n            return [copy];\n        }\n        return node.children.flatMap(clone);\n    }\n    return clone;\n}\n/**\n * Move facet nodes down to the next fork or output node. Also pull the main output with the facet node.\n * After moving down the facet node, make a copy of the subtree and make it a child of the main output.\n */\nexport function moveFacetDown(node) {\n    if (node instanceof FacetNode) {\n        if (node.numChildren() === 1 && !(node.children[0] instanceof OutputNode)) {\n            // move down until we hit a fork or output node\n            const child = node.children[0];\n            if (child instanceof AggregateNode ||\n                child instanceof StackNode ||\n                child instanceof WindowTransformNode ||\n                child instanceof JoinAggregateTransformNode) {\n                child.addDimensions(node.fields);\n            }\n            child.swapWithParent();\n            moveFacetDown(node);\n        }\n        else {\n            // move main to facet\n            const facetMain = node.model.component.data.main;\n            moveMainDownToFacet(facetMain);\n            // replicate the subtree and place it before the facet's main node\n            const cloner = cloneSubtree(node);\n            const copy = node.children.map(cloner).flat();\n            for (const c of copy) {\n                c.parent = facetMain;\n            }\n        }\n    }\n    else {\n        node.children.map(moveFacetDown);\n    }\n}\nfunction moveMainDownToFacet(node) {\n    if (node instanceof OutputNode && node.type === DataSourceType.Main) {\n        if (node.numChildren() === 1) {\n            const child = node.children[0];\n            if (!(child instanceof FacetNode)) {\n                child.swapWithParent();\n                moveMainDownToFacet(node);\n            }\n        }\n    }\n}\n//# sourceMappingURL=subtree.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { vgField } from '../../channeldef';\nimport { getTimeUnitParts, normalizeTimeUnit } from '../../timeunit';\nimport { duplicate, entries, hash, isEmpty, replacePathInField, vals } from '../../util';\nimport { DataFlowNode } from './dataflow';\nexport class TimeUnitNode extends DataFlowNode {\n    constructor(parent, formula) {\n        super(parent);\n        this.formula = formula;\n    }\n    clone() {\n        return new TimeUnitNode(null, duplicate(this.formula));\n    }\n    static makeFromEncoding(parent, model) {\n        const formula = model.reduceFieldDef((timeUnitComponent, fieldDef) => {\n            const { field, timeUnit } = fieldDef;\n            if (timeUnit) {\n                const as = vgField(fieldDef, { forAs: true });\n                timeUnitComponent[hash({\n                    as,\n                    field,\n                    timeUnit\n                })] = {\n                    as,\n                    field,\n                    timeUnit\n                };\n            }\n            return timeUnitComponent;\n        }, {});\n        if (isEmpty(formula)) {\n            return null;\n        }\n        return new TimeUnitNode(parent, formula);\n    }\n    static makeFromTransform(parent, t) {\n        const _a = Object.assign({}, t), { timeUnit } = _a, other = __rest(_a, [\"timeUnit\"]);\n        const normalizedTimeUnit = normalizeTimeUnit(timeUnit);\n        const component = Object.assign(Object.assign({}, other), { timeUnit: normalizedTimeUnit });\n        return new TimeUnitNode(parent, {\n            [hash(component)]: component\n        });\n    }\n    /**\n     * Merge together TimeUnitNodes assigning the children of `other` to `this`\n     * and removing `other`.\n     */\n    merge(other) {\n        this.formula = Object.assign({}, this.formula);\n        // if the same hash happen twice, merge\n        for (const key in other.formula) {\n            if (!this.formula[key]) {\n                // copy if it's not a duplicate\n                this.formula[key] = other.formula[key];\n            }\n        }\n        for (const child of other.children) {\n            other.removeChild(child);\n            child.parent = this;\n        }\n        other.remove();\n    }\n    /**\n     * Remove time units coming from the other node.\n     */\n    removeFormulas(fields) {\n        const newFormula = {};\n        for (const [key, timeUnit] of entries(this.formula)) {\n            if (!fields.has(timeUnit.as)) {\n                newFormula[key] = timeUnit;\n            }\n        }\n        this.formula = newFormula;\n    }\n    producedFields() {\n        return new Set(vals(this.formula).map(f => f.as));\n    }\n    dependentFields() {\n        return new Set(vals(this.formula).map(f => f.field));\n    }\n    hash() {\n        return `TimeUnit ${hash(this.formula)}`;\n    }\n    assemble() {\n        const transforms = [];\n        for (const f of vals(this.formula)) {\n            const { field, as, timeUnit } = f;\n            const _a = normalizeTimeUnit(timeUnit), { unit, utc } = _a, params = __rest(_a, [\"unit\", \"utc\"]);\n            transforms.push(Object.assign(Object.assign(Object.assign(Object.assign({ field: replacePathInField(field), type: 'timeunit' }, (unit ? { units: getTimeUnitParts(unit) } : {})), (utc ? { timezone: 'utc' } : {})), params), { as: [as, `${as}_end`] }));\n        }\n        return transforms;\n    }\n}\n//# sourceMappingURL=timeunit.js.map","import { isAggregateOp } from '../../aggregate';\nimport { vgField } from '../../channeldef';\nimport { duplicate, hash } from '../../util';\nimport { unique } from '../../util';\nimport { DataFlowNode } from './dataflow';\n/**\n * A class for the window transform nodes\n */\nexport class WindowTransformNode extends DataFlowNode {\n    constructor(parent, transform) {\n        super(parent);\n        this.transform = transform;\n    }\n    clone() {\n        return new WindowTransformNode(null, duplicate(this.transform));\n    }\n    addDimensions(fields) {\n        this.transform.groupby = unique(this.transform.groupby.concat(fields), d => d);\n    }\n    dependentFields() {\n        var _a, _b;\n        const out = new Set();\n        ((_a = this.transform.groupby) !== null && _a !== void 0 ? _a : []).forEach(out.add, out);\n        ((_b = this.transform.sort) !== null && _b !== void 0 ? _b : []).forEach(m => out.add(m.field));\n        this.transform.window\n            .map(w => w.field)\n            .filter(f => f !== undefined)\n            .forEach(out.add, out);\n        return out;\n    }\n    producedFields() {\n        return new Set(this.transform.window.map(this.getDefaultName));\n    }\n    getDefaultName(windowFieldDef) {\n        var _a;\n        return (_a = windowFieldDef.as) !== null && _a !== void 0 ? _a : vgField(windowFieldDef);\n    }\n    hash() {\n        return `WindowTransform ${hash(this.transform)}`;\n    }\n    assemble() {\n        var _a;\n        const fields = [];\n        const ops = [];\n        const as = [];\n        const params = [];\n        for (const window of this.transform.window) {\n            ops.push(window.op);\n            as.push(this.getDefaultName(window));\n            params.push(window.param === undefined ? null : window.param);\n            fields.push(window.field === undefined ? null : window.field);\n        }\n        const frame = this.transform.frame;\n        const groupby = this.transform.groupby;\n        if (frame && frame[0] === null && frame[1] === null && ops.every(o => isAggregateOp(o))) {\n            // when the window does not rely on any particular window ops or frame, switch to a simpler and more efficient joinaggregate\n            return Object.assign({ type: 'joinaggregate', as, ops: ops, fields }, (groupby !== undefined ? { groupby } : {}));\n        }\n        const sortFields = [];\n        const sortOrder = [];\n        if (this.transform.sort !== undefined) {\n            for (const sortField of this.transform.sort) {\n                sortFields.push(sortField.field);\n                sortOrder.push((_a = sortField.order) !== null && _a !== void 0 ? _a : 'ascending');\n            }\n        }\n        const sort = {\n            field: sortFields,\n            order: sortOrder\n        };\n        const ignorePeers = this.transform.ignorePeers;\n        return Object.assign(Object.assign(Object.assign({ type: 'window', params,\n            as,\n            ops,\n            fields,\n            sort }, (ignorePeers !== undefined ? { ignorePeers } : {})), (groupby !== undefined ? { groupby } : {})), (frame !== undefined ? { frame } : {}));\n    }\n}\n//# sourceMappingURL=window.js.map","import { isArray } from 'vega-util';\nimport { isBinning } from '../bin';\nimport { COLUMN, FACET_CHANNELS, POSITION_SCALE_CHANNELS, ROW } from '../channel';\nimport { initFieldDef, vgField } from '../channeldef';\nimport { replaceExprRef } from '../expr';\nimport * as log from '../log';\nimport { hasDiscreteDomain } from '../scale';\nimport { DEFAULT_SORT_OP, isSortField } from '../sort';\nimport { isFacetMapping } from '../spec/facet';\nimport { keys } from '../util';\nimport { isVgRangeStep } from '../vega.schema';\nimport { buildModel } from './buildmodel';\nimport { assembleFacetData } from './data/assemble';\nimport { sortArrayIndexField } from './data/calculate';\nimport { parseData } from './data/parse';\nimport { assembleLabelTitle } from './header/assemble';\nimport { getHeaderChannel, getHeaderProperty } from './header/common';\nimport { HEADER_CHANNELS, HEADER_TYPES } from './header/component';\nimport { parseFacetHeaders } from './header/parse';\nimport { parseChildrenLayoutSize } from './layoutsize/parse';\nimport { ModelWithField } from './model';\nimport { assembleDomain, getFieldFromDomain } from './scale/domain';\nimport { assembleFacetSignals } from './selection/assemble';\nexport function facetSortFieldName(fieldDef, sort, opt) {\n    return vgField(sort, Object.assign({ suffix: `by_${vgField(fieldDef)}` }, (opt !== null && opt !== void 0 ? opt : {})));\n}\nexport class FacetModel extends ModelWithField {\n    constructor(spec, parent, parentGivenName, config) {\n        super(spec, 'facet', parent, parentGivenName, config, spec.resolve);\n        this.child = buildModel(spec.spec, this, this.getName('child'), undefined, config);\n        this.children = [this.child];\n        this.facet = this.initFacet(spec.facet);\n    }\n    initFacet(facet) {\n        // clone to prevent side effect to the original spec\n        if (!isFacetMapping(facet)) {\n            return { facet: this.initFacetFieldDef(facet, 'facet') };\n        }\n        const channels = keys(facet);\n        const normalizedFacet = {};\n        for (const channel of channels) {\n            if (![ROW, COLUMN].includes(channel)) {\n                // Drop unsupported channel\n                log.warn(log.message.incompatibleChannel(channel, 'facet'));\n                break;\n            }\n            const fieldDef = facet[channel];\n            if (fieldDef.field === undefined) {\n                log.warn(log.message.emptyFieldDef(fieldDef, channel));\n                break;\n            }\n            normalizedFacet[channel] = this.initFacetFieldDef(fieldDef, channel);\n        }\n        return normalizedFacet;\n    }\n    initFacetFieldDef(fieldDef, channel) {\n        // Cast because we call initFieldDef, which assumes general FieldDef.\n        // However, FacetFieldDef is a bit more constrained than the general FieldDef\n        const facetFieldDef = initFieldDef(fieldDef, channel);\n        if (facetFieldDef.header) {\n            facetFieldDef.header = replaceExprRef(facetFieldDef.header);\n        }\n        else if (facetFieldDef.header === null) {\n            facetFieldDef.header = null;\n        }\n        return facetFieldDef;\n    }\n    channelHasField(channel) {\n        return !!this.facet[channel];\n    }\n    fieldDef(channel) {\n        return this.facet[channel];\n    }\n    parseData() {\n        this.component.data = parseData(this);\n        this.child.parseData();\n    }\n    parseLayoutSize() {\n        parseChildrenLayoutSize(this);\n    }\n    parseSelections() {\n        // As a facet has a single child, the selection components are the same.\n        // The child maintains its selections to assemble signals, which remain\n        // within its unit.\n        this.child.parseSelections();\n        this.component.selection = this.child.component.selection;\n    }\n    parseMarkGroup() {\n        this.child.parseMarkGroup();\n    }\n    parseAxesAndHeaders() {\n        this.child.parseAxesAndHeaders();\n        parseFacetHeaders(this);\n    }\n    assembleSelectionTopLevelSignals(signals) {\n        return this.child.assembleSelectionTopLevelSignals(signals);\n    }\n    assembleSignals() {\n        this.child.assembleSignals();\n        return [];\n    }\n    assembleSelectionData(data) {\n        return this.child.assembleSelectionData(data);\n    }\n    getHeaderLayoutMixins() {\n        var _a, _b, _c;\n        const layoutMixins = {};\n        for (const channel of FACET_CHANNELS) {\n            for (const headerType of HEADER_TYPES) {\n                const layoutHeaderComponent = this.component.layoutHeaders[channel];\n                const headerComponent = layoutHeaderComponent[headerType];\n                const { facetFieldDef } = layoutHeaderComponent;\n                if (facetFieldDef) {\n                    const titleOrient = getHeaderProperty('titleOrient', facetFieldDef.header, this.config, channel);\n                    if (['right', 'bottom'].includes(titleOrient)) {\n                        const headerChannel = getHeaderChannel(channel, titleOrient);\n                        (_a = layoutMixins.titleAnchor) !== null && _a !== void 0 ? _a : (layoutMixins.titleAnchor = {});\n                        layoutMixins.titleAnchor[headerChannel] = 'end';\n                    }\n                }\n                if (headerComponent === null || headerComponent === void 0 ? void 0 : headerComponent[0]) {\n                    // set header/footerBand\n                    const sizeType = channel === 'row' ? 'height' : 'width';\n                    const bandType = headerType === 'header' ? 'headerBand' : 'footerBand';\n                    if (channel !== 'facet' && !this.child.component.layoutSize.get(sizeType)) {\n                        // If facet child does not have size signal, then apply headerBand\n                        (_b = layoutMixins[bandType]) !== null && _b !== void 0 ? _b : (layoutMixins[bandType] = {});\n                        layoutMixins[bandType][channel] = 0.5;\n                    }\n                    if (layoutHeaderComponent.title) {\n                        (_c = layoutMixins.offset) !== null && _c !== void 0 ? _c : (layoutMixins.offset = {});\n                        layoutMixins.offset[channel === 'row' ? 'rowTitle' : 'columnTitle'] = 10;\n                    }\n                }\n            }\n        }\n        return layoutMixins;\n    }\n    assembleDefaultLayout() {\n        const { column, row } = this.facet;\n        const columns = column ? this.columnDistinctSignal() : row ? 1 : undefined;\n        let align = 'all';\n        // Do not align the cells if the scale corresponding to the direction is indepent.\n        // We always align when we facet into both row and column.\n        if (!row && this.component.resolve.scale.x === 'independent') {\n            align = 'none';\n        }\n        else if (!column && this.component.resolve.scale.y === 'independent') {\n            align = 'none';\n        }\n        return Object.assign(Object.assign(Object.assign({}, this.getHeaderLayoutMixins()), (columns ? { columns } : {})), { bounds: 'full', align });\n    }\n    assembleLayoutSignals() {\n        // FIXME(https://github.com/vega/vega-lite/issues/1193): this can be incorrect if we have independent scales.\n        return this.child.assembleLayoutSignals();\n    }\n    columnDistinctSignal() {\n        if (this.parent && this.parent instanceof FacetModel) {\n            // For nested facet, we will add columns to group mark instead\n            // See discussion in https://github.com/vega/vega/issues/952\n            // and https://github.com/vega/vega-view/releases/tag/v1.2.6\n            return undefined;\n        }\n        else {\n            // In facetNode.assemble(), the name is always this.getName('column') + '_layout'.\n            const facetLayoutDataName = this.getName('column_domain');\n            return { signal: `length(data('${facetLayoutDataName}'))` };\n        }\n    }\n    assembleGroupStyle() {\n        return undefined;\n    }\n    assembleGroup(signals) {\n        if (this.parent && this.parent instanceof FacetModel) {\n            // Provide number of columns for layout.\n            // See discussion in https://github.com/vega/vega/issues/952\n            // and https://github.com/vega/vega-view/releases/tag/v1.2.6\n            return Object.assign(Object.assign({}, (this.channelHasField('column')\n                ? {\n                    encode: {\n                        update: {\n                            // TODO(https://github.com/vega/vega-lite/issues/2759):\n                            // Correct the signal for facet of concat of facet_column\n                            columns: { field: vgField(this.facet.column, { prefix: 'distinct' }) }\n                        }\n                    }\n                }\n                : {})), super.assembleGroup(signals));\n        }\n        return super.assembleGroup(signals);\n    }\n    /**\n     * Aggregate cardinality for calculating size\n     */\n    getCardinalityAggregateForChild() {\n        const fields = [];\n        const ops = [];\n        const as = [];\n        if (this.child instanceof FacetModel) {\n            if (this.child.channelHasField('column')) {\n                const field = vgField(this.child.facet.column);\n                fields.push(field);\n                ops.push('distinct');\n                as.push(`distinct_${field}`);\n            }\n        }\n        else {\n            for (const channel of POSITION_SCALE_CHANNELS) {\n                const childScaleComponent = this.child.component.scales[channel];\n                if (childScaleComponent && !childScaleComponent.merged) {\n                    const type = childScaleComponent.get('type');\n                    const range = childScaleComponent.get('range');\n                    if (hasDiscreteDomain(type) && isVgRangeStep(range)) {\n                        const domain = assembleDomain(this.child, channel);\n                        const field = getFieldFromDomain(domain);\n                        if (field) {\n                            fields.push(field);\n                            ops.push('distinct');\n                            as.push(`distinct_${field}`);\n                        }\n                        else {\n                            log.warn(log.message.unknownField(channel));\n                        }\n                    }\n                }\n            }\n        }\n        return { fields, ops, as };\n    }\n    assembleFacet() {\n        const { name, data } = this.component.data.facetRoot;\n        const { row, column } = this.facet;\n        const { fields, ops, as } = this.getCardinalityAggregateForChild();\n        const groupby = [];\n        for (const channel of FACET_CHANNELS) {\n            const fieldDef = this.facet[channel];\n            if (fieldDef) {\n                groupby.push(vgField(fieldDef));\n                const { bin, sort } = fieldDef;\n                if (isBinning(bin)) {\n                    groupby.push(vgField(fieldDef, { binSuffix: 'end' }));\n                }\n                if (isSortField(sort)) {\n                    const { field, op = DEFAULT_SORT_OP } = sort;\n                    const outputName = facetSortFieldName(fieldDef, sort);\n                    if (row && column) {\n                        // For crossed facet, use pre-calculate field as it requires a different groupby\n                        // For each calculated field, apply max and assign them to the same name as\n                        // all values of the same group should be the same anyway.\n                        fields.push(outputName);\n                        ops.push('max');\n                        as.push(outputName);\n                    }\n                    else {\n                        fields.push(field);\n                        ops.push(op);\n                        as.push(outputName);\n                    }\n                }\n                else if (isArray(sort)) {\n                    const outputName = sortArrayIndexField(fieldDef, channel);\n                    fields.push(outputName);\n                    ops.push('max');\n                    as.push(outputName);\n                }\n            }\n        }\n        const cross = !!row && !!column;\n        return Object.assign({ name,\n            data,\n            groupby }, (cross || fields.length > 0\n            ? {\n                aggregate: Object.assign(Object.assign({}, (cross ? { cross } : {})), (fields.length ? { fields, ops, as } : {}))\n            }\n            : {}));\n    }\n    facetSortFields(channel) {\n        const { facet } = this;\n        const fieldDef = facet[channel];\n        if (fieldDef) {\n            if (isSortField(fieldDef.sort)) {\n                return [facetSortFieldName(fieldDef, fieldDef.sort, { expr: 'datum' })];\n            }\n            else if (isArray(fieldDef.sort)) {\n                return [sortArrayIndexField(fieldDef, channel, { expr: 'datum' })];\n            }\n            return [vgField(fieldDef, { expr: 'datum' })];\n        }\n        return [];\n    }\n    facetSortOrder(channel) {\n        const { facet } = this;\n        const fieldDef = facet[channel];\n        if (fieldDef) {\n            const { sort } = fieldDef;\n            const order = (isSortField(sort) ? sort.order : !isArray(sort) && sort) || 'ascending';\n            return [order];\n        }\n        return [];\n    }\n    assembleLabelTitle() {\n        var _a;\n        const { facet, config } = this;\n        if (facet.facet) {\n            // Facet always uses title to display labels\n            return assembleLabelTitle(facet.facet, 'facet', config);\n        }\n        const ORTHOGONAL_ORIENT = {\n            row: ['top', 'bottom'],\n            column: ['left', 'right']\n        };\n        for (const channel of HEADER_CHANNELS) {\n            if (facet[channel]) {\n                const labelOrient = getHeaderProperty('labelOrient', (_a = facet[channel]) === null || _a === void 0 ? void 0 : _a.header, config, channel);\n                if (ORTHOGONAL_ORIENT[channel].includes(labelOrient)) {\n                    // Row/Column with orthogonal labelOrient must use title to display labels\n                    return assembleLabelTitle(facet[channel], channel, config);\n                }\n            }\n        }\n        return undefined;\n    }\n    assembleMarks() {\n        const { child } = this;\n        // If we facet by two dimensions, we need to add a cross operator to the aggregation\n        // so that we create all groups\n        const facetRoot = this.component.data.facetRoot;\n        const data = assembleFacetData(facetRoot);\n        const encodeEntry = child.assembleGroupEncodeEntry(false);\n        const title = this.assembleLabelTitle() || child.assembleTitle();\n        const style = child.assembleGroupStyle();\n        const markGroup = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({ name: this.getName('cell'), type: 'group' }, (title ? { title } : {})), (style ? { style } : {})), { from: {\n                facet: this.assembleFacet()\n            }, \n            // TODO: move this to after data\n            sort: {\n                field: FACET_CHANNELS.map(c => this.facetSortFields(c)).flat(),\n                order: FACET_CHANNELS.map(c => this.facetSortOrder(c)).flat()\n            } }), (data.length > 0 ? { data } : {})), (encodeEntry ? { encode: { update: encodeEntry } } : {})), child.assembleGroup(assembleFacetSignals(this, [])));\n        return [markGroup];\n    }\n    getMapping() {\n        return this.facet;\n    }\n}\n//# sourceMappingURL=facet.js.map","import { isString } from 'vega-util';\nimport { isBinning } from '../bin';\nimport { channelDefType, isFieldDef, isFieldOrDatumDefForTimeFormat, isPositionFieldOrDatumDef, isScaleFieldDef, vgField } from '../channeldef';\nimport { fieldValidPredicate } from '../predicate';\nimport { ScaleType } from '../scale';\nimport { formatExpression, normalizeTimeUnit, timeUnitSpecifierExpression } from '../timeunit';\nimport { QUANTITATIVE } from '../type';\nimport { stringify } from '../util';\nimport { isSignalRef } from '../vega.schema';\nimport { datumDefToExpr } from './mark/encode/valueref';\nexport function isCustomFormatType(formatType) {\n    return formatType && formatType !== 'number' && formatType !== 'time';\n}\nfunction customFormatExpr(formatType, field, format) {\n    return `${formatType}(${field}${format ? `, ${stringify(format)}` : ''})`;\n}\nexport const BIN_RANGE_DELIMITER = ' \\u2013 ';\nexport function formatSignalRef({ fieldOrDatumDef, format, formatType, expr, normalizeStack, config }) {\n    var _a, _b;\n    if (isCustomFormatType(formatType)) {\n        return formatCustomType({\n            fieldOrDatumDef,\n            format,\n            formatType,\n            expr,\n            config\n        });\n    }\n    const field = fieldToFormat(fieldOrDatumDef, expr, normalizeStack);\n    const type = channelDefType(fieldOrDatumDef);\n    if (format === undefined && formatType === undefined && config.customFormatTypes) {\n        if (type === 'quantitative') {\n            if (normalizeStack && config.normalizedNumberFormatType)\n                return formatCustomType({\n                    fieldOrDatumDef,\n                    format: config.normalizedNumberFormat,\n                    formatType: config.normalizedNumberFormatType,\n                    expr,\n                    config\n                });\n            if (config.numberFormatType) {\n                return formatCustomType({\n                    fieldOrDatumDef,\n                    format: config.numberFormat,\n                    formatType: config.numberFormatType,\n                    expr,\n                    config\n                });\n            }\n        }\n        if (type === 'temporal' &&\n            config.timeFormatType &&\n            isFieldDef(fieldOrDatumDef) &&\n            fieldOrDatumDef.timeUnit === undefined) {\n            return formatCustomType({\n                fieldOrDatumDef,\n                format: config.timeFormat,\n                formatType: config.timeFormatType,\n                expr,\n                config\n            });\n        }\n    }\n    if (isFieldOrDatumDefForTimeFormat(fieldOrDatumDef)) {\n        const signal = timeFormatExpression({\n            field,\n            timeUnit: isFieldDef(fieldOrDatumDef) ? (_a = normalizeTimeUnit(fieldOrDatumDef.timeUnit)) === null || _a === void 0 ? void 0 : _a.unit : undefined,\n            format,\n            formatType: config.timeFormatType,\n            rawTimeFormat: config.timeFormat,\n            isUTCScale: isScaleFieldDef(fieldOrDatumDef) && ((_b = fieldOrDatumDef.scale) === null || _b === void 0 ? void 0 : _b.type) === ScaleType.UTC\n        });\n        return signal ? { signal } : undefined;\n    }\n    format = numberFormat({ type, specifiedFormat: format, config, normalizeStack });\n    if (isFieldDef(fieldOrDatumDef) && isBinning(fieldOrDatumDef.bin)) {\n        const endField = vgField(fieldOrDatumDef, { expr, binSuffix: 'end' });\n        return {\n            signal: binFormatExpression(field, endField, format, formatType, config)\n        };\n    }\n    else if (format || channelDefType(fieldOrDatumDef) === 'quantitative') {\n        return {\n            signal: `${formatExpr(field, format)}`\n        };\n    }\n    else {\n        return { signal: `isValid(${field}) ? ${field} : \"\"+${field}` };\n    }\n}\nfunction fieldToFormat(fieldOrDatumDef, expr, normalizeStack) {\n    if (isFieldDef(fieldOrDatumDef)) {\n        if (normalizeStack) {\n            return `${vgField(fieldOrDatumDef, { expr, suffix: 'end' })}-${vgField(fieldOrDatumDef, {\n                expr,\n                suffix: 'start'\n            })}`;\n        }\n        else {\n            return vgField(fieldOrDatumDef, { expr });\n        }\n    }\n    else {\n        return datumDefToExpr(fieldOrDatumDef);\n    }\n}\nexport function formatCustomType({ fieldOrDatumDef, format, formatType, expr, normalizeStack, config, field }) {\n    field !== null && field !== void 0 ? field : (field = fieldToFormat(fieldOrDatumDef, expr, normalizeStack));\n    if (field !== 'datum.value' && // For axis/legend, we can't correctly know the end of the bin from `datum`\n        isFieldDef(fieldOrDatumDef) &&\n        isBinning(fieldOrDatumDef.bin)) {\n        const endField = vgField(fieldOrDatumDef, { expr, binSuffix: 'end' });\n        return {\n            signal: binFormatExpression(field, endField, format, formatType, config)\n        };\n    }\n    return { signal: customFormatExpr(formatType, field, format) };\n}\nexport function guideFormat(fieldOrDatumDef, type, format, formatType, config, omitTimeFormatConfig // axis doesn't use config.timeFormat\n) {\n    var _a;\n    if (isCustomFormatType(formatType)) {\n        return undefined; // handled in encode block\n    }\n    else if (format === undefined && formatType === undefined && config.customFormatTypes) {\n        if (channelDefType(fieldOrDatumDef) === 'quantitative') {\n            if (config.normalizedNumberFormatType &&\n                isPositionFieldOrDatumDef(fieldOrDatumDef) &&\n                fieldOrDatumDef.stack === 'normalize') {\n                return undefined; // handled in encode block\n            }\n            if (config.numberFormatType) {\n                return undefined; // handled in encode block\n            }\n        }\n    }\n    if (isPositionFieldOrDatumDef(fieldOrDatumDef) &&\n        fieldOrDatumDef.stack === 'normalize' &&\n        config.normalizedNumberFormat) {\n        return numberFormat({\n            type: 'quantitative',\n            config,\n            normalizeStack: true\n        });\n    }\n    if (isFieldOrDatumDefForTimeFormat(fieldOrDatumDef)) {\n        const timeUnit = isFieldDef(fieldOrDatumDef) ? (_a = normalizeTimeUnit(fieldOrDatumDef.timeUnit)) === null || _a === void 0 ? void 0 : _a.unit : undefined;\n        if (timeUnit === undefined && config.customFormatTypes && config.timeFormatType) {\n            return undefined; // hanlded in encode block\n        }\n        return timeFormat({ specifiedFormat: format, timeUnit, config, omitTimeFormatConfig });\n    }\n    return numberFormat({ type, specifiedFormat: format, config });\n}\nexport function guideFormatType(formatType, fieldOrDatumDef, scaleType) {\n    var _a;\n    if (formatType && (isSignalRef(formatType) || formatType === 'number' || formatType === 'time')) {\n        return formatType;\n    }\n    if (isFieldOrDatumDefForTimeFormat(fieldOrDatumDef) && scaleType !== 'time' && scaleType !== 'utc') {\n        return isFieldDef(fieldOrDatumDef) && ((_a = normalizeTimeUnit(fieldOrDatumDef === null || fieldOrDatumDef === void 0 ? void 0 : fieldOrDatumDef.timeUnit)) === null || _a === void 0 ? void 0 : _a.utc) ? 'utc' : 'time';\n    }\n    return undefined;\n}\n/**\n * Returns number format for a fieldDef.\n */\nexport function numberFormat({ type, specifiedFormat, config, normalizeStack }) {\n    // Specified format in axis/legend has higher precedence than fieldDef.format\n    if (isString(specifiedFormat)) {\n        return specifiedFormat;\n    }\n    if (type === QUANTITATIVE) {\n        // we only apply the default if the field is quantitative\n        return normalizeStack ? config.normalizedNumberFormat : config.numberFormat;\n    }\n    return undefined;\n}\n/**\n * Returns time format for a fieldDef for use in guides.\n */\nexport function timeFormat({ specifiedFormat, timeUnit, config, omitTimeFormatConfig }) {\n    if (specifiedFormat) {\n        return specifiedFormat;\n    }\n    if (timeUnit) {\n        return {\n            signal: timeUnitSpecifierExpression(timeUnit)\n        };\n    }\n    return omitTimeFormatConfig ? undefined : config.timeFormat;\n}\nfunction formatExpr(field, format) {\n    return `format(${field}, \"${format || ''}\")`;\n}\nfunction binNumberFormatExpr(field, format, formatType, config) {\n    var _a;\n    if (isCustomFormatType(formatType)) {\n        return customFormatExpr(formatType, field, format);\n    }\n    return formatExpr(field, (_a = (isString(format) ? format : undefined)) !== null && _a !== void 0 ? _a : config.numberFormat);\n}\nexport function binFormatExpression(startField, endField, format, formatType, config) {\n    if (format === undefined && formatType === undefined && config.customFormatTypes && config.numberFormatType) {\n        return binFormatExpression(startField, endField, config.numberFormat, config.numberFormatType, config);\n    }\n    const start = binNumberFormatExpr(startField, format, formatType, config);\n    const end = binNumberFormatExpr(endField, format, formatType, config);\n    return `${fieldValidPredicate(startField, false)} ? \"null\" : ${start} + \"${BIN_RANGE_DELIMITER}\" + ${end}`;\n}\n/**\n * Returns the time expression used for axis/legend labels or text mark for a temporal field\n */\nexport function timeFormatExpression({ field, timeUnit, format, formatType, rawTimeFormat, isUTCScale }) {\n    if (!timeUnit || format) {\n        // If there is no time unit, or if user explicitly specifies format for axis/legend/text.\n        if (!timeUnit && formatType) {\n            return `${formatType}(${field}, '${format}')`;\n        }\n        format = isString(format) ? format : rawTimeFormat; // only use provided timeFormat if there is no timeUnit.\n        return `${isUTCScale ? 'utc' : 'time'}Format(${field}, '${format}')`;\n    }\n    else {\n        return formatExpression(timeUnit, field, isUTCScale);\n    }\n}\n//# sourceMappingURL=format.js.map","import { keys } from '../util';\nimport { signalOrValueRef } from './common';\nimport { wrapCondition } from './mark/encode';\nexport function guideEncodeEntry(encoding, model) {\n    return keys(encoding).reduce((encode, channel) => {\n        const valueDef = encoding[channel];\n        return Object.assign(Object.assign({}, encode), wrapCondition(model, valueDef, channel, def => signalOrValueRef(def.value)));\n    }, {});\n}\n//# sourceMappingURL=guide.js.map","/**\n * Utility for generating row / column headers\n */\nimport { isArray } from 'vega-util';\nimport { FACET_CHANNELS } from '../../channel';\nimport { vgField } from '../../channeldef';\nimport { HEADER_LABEL_PROPERTIES, HEADER_LABEL_PROPERTIES_MAP, HEADER_TITLE_PROPERTIES, HEADER_TITLE_PROPERTIES_MAP } from '../../header';\nimport { isSortField } from '../../sort';\nimport { isFacetMapping } from '../../spec/facet';\nimport { contains, isEmpty, normalizeAngle, replaceAll } from '../../util';\nimport { defaultLabelAlign, defaultLabelBaseline } from '../axis/properties';\nimport { sortArrayIndexField } from '../data/calculate';\nimport { formatSignalRef } from '../format';\nimport { isFacetModel } from '../model';\nimport { getHeaderChannel, getHeaderProperties, getHeaderProperty } from './common';\nimport { HEADER_TYPES } from './component';\n// TODO: rename to assembleHeaderTitleGroup\nexport function assembleTitleGroup(model, channel) {\n    const title = model.component.layoutHeaders[channel].title;\n    const config = model.config ? model.config : undefined;\n    const facetFieldDef = model.component.layoutHeaders[channel].facetFieldDef\n        ? model.component.layoutHeaders[channel].facetFieldDef\n        : undefined;\n    const { titleAnchor, titleAngle: ta, titleOrient } = getHeaderProperties(['titleAnchor', 'titleAngle', 'titleOrient'], facetFieldDef.header, config, channel);\n    const headerChannel = getHeaderChannel(channel, titleOrient);\n    const titleAngle = normalizeAngle(ta);\n    return {\n        name: `${channel}-title`,\n        type: 'group',\n        role: `${headerChannel}-title`,\n        title: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({ text: title }, (channel === 'row' ? { orient: 'left' } : {})), { style: 'guide-title' }), defaultHeaderGuideBaseline(titleAngle, headerChannel)), defaultHeaderGuideAlign(headerChannel, titleAngle, titleAnchor)), assembleHeaderProperties(config, facetFieldDef, channel, HEADER_TITLE_PROPERTIES, HEADER_TITLE_PROPERTIES_MAP))\n    };\n}\nexport function defaultHeaderGuideAlign(headerChannel, angle, anchor = 'middle') {\n    switch (anchor) {\n        case 'start':\n            return { align: 'left' };\n        case 'end':\n            return { align: 'right' };\n    }\n    const align = defaultLabelAlign(angle, headerChannel === 'row' ? 'left' : 'top', headerChannel === 'row' ? 'y' : 'x');\n    return align ? { align } : {};\n}\nexport function defaultHeaderGuideBaseline(angle, channel) {\n    const baseline = defaultLabelBaseline(angle, channel === 'row' ? 'left' : 'top', channel === 'row' ? 'y' : 'x', true);\n    return baseline ? { baseline } : {};\n}\nexport function assembleHeaderGroups(model, channel) {\n    const layoutHeader = model.component.layoutHeaders[channel];\n    const groups = [];\n    for (const headerType of HEADER_TYPES) {\n        if (layoutHeader[headerType]) {\n            for (const headerComponent of layoutHeader[headerType]) {\n                const group = assembleHeaderGroup(model, channel, headerType, layoutHeader, headerComponent);\n                if (group != null) {\n                    groups.push(group);\n                }\n            }\n        }\n    }\n    return groups;\n}\nfunction getSort(facetFieldDef, channel) {\n    var _a;\n    const { sort } = facetFieldDef;\n    if (isSortField(sort)) {\n        return {\n            field: vgField(sort, { expr: 'datum' }),\n            order: (_a = sort.order) !== null && _a !== void 0 ? _a : 'ascending'\n        };\n    }\n    else if (isArray(sort)) {\n        return {\n            field: sortArrayIndexField(facetFieldDef, channel, { expr: 'datum' }),\n            order: 'ascending'\n        };\n    }\n    else {\n        return {\n            field: vgField(facetFieldDef, { expr: 'datum' }),\n            order: sort !== null && sort !== void 0 ? sort : 'ascending'\n        };\n    }\n}\nexport function assembleLabelTitle(facetFieldDef, channel, config) {\n    const { format, formatType, labelAngle, labelAnchor, labelOrient, labelExpr } = getHeaderProperties(['format', 'formatType', 'labelAngle', 'labelAnchor', 'labelOrient', 'labelExpr'], facetFieldDef.header, config, channel);\n    const titleTextExpr = formatSignalRef({\n        fieldOrDatumDef: facetFieldDef,\n        format,\n        formatType,\n        expr: 'parent',\n        config\n    }).signal;\n    const headerChannel = getHeaderChannel(channel, labelOrient);\n    return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({ text: {\n            signal: labelExpr\n                ? replaceAll(replaceAll(labelExpr, 'datum.label', titleTextExpr), 'datum.value', vgField(facetFieldDef, { expr: 'parent' }))\n                : titleTextExpr\n        } }, (channel === 'row' ? { orient: 'left' } : {})), { style: 'guide-label', frame: 'group' }), defaultHeaderGuideBaseline(labelAngle, headerChannel)), defaultHeaderGuideAlign(headerChannel, labelAngle, labelAnchor)), assembleHeaderProperties(config, facetFieldDef, channel, HEADER_LABEL_PROPERTIES, HEADER_LABEL_PROPERTIES_MAP));\n}\nexport function assembleHeaderGroup(model, channel, headerType, layoutHeader, headerComponent) {\n    if (headerComponent) {\n        let title = null;\n        const { facetFieldDef } = layoutHeader;\n        const config = model.config ? model.config : undefined;\n        if (facetFieldDef && headerComponent.labels) {\n            const { labelOrient } = getHeaderProperties(['labelOrient'], facetFieldDef.header, config, channel);\n            // Include label title in the header if orient aligns with the channel\n            if ((channel === 'row' && !contains(['top', 'bottom'], labelOrient)) ||\n                (channel === 'column' && !contains(['left', 'right'], labelOrient))) {\n                title = assembleLabelTitle(facetFieldDef, channel, config);\n            }\n        }\n        const isFacetWithoutRowCol = isFacetModel(model) && !isFacetMapping(model.facet);\n        const axes = headerComponent.axes;\n        const hasAxes = (axes === null || axes === void 0 ? void 0 : axes.length) > 0;\n        if (title || hasAxes) {\n            const sizeChannel = channel === 'row' ? 'height' : 'width';\n            return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({ name: model.getName(`${channel}_${headerType}`), type: 'group', role: `${channel}-${headerType}` }, (layoutHeader.facetFieldDef\n                ? {\n                    from: { data: model.getName(`${channel}_domain`) },\n                    sort: getSort(facetFieldDef, channel)\n                }\n                : {})), (hasAxes && isFacetWithoutRowCol\n                ? {\n                    from: { data: model.getName(`facet_domain_${channel}`) }\n                }\n                : {})), (title ? { title } : {})), (headerComponent.sizeSignal\n                ? {\n                    encode: {\n                        update: {\n                            [sizeChannel]: headerComponent.sizeSignal\n                        }\n                    }\n                }\n                : {})), (hasAxes ? { axes } : {}));\n        }\n    }\n    return null;\n}\nconst LAYOUT_TITLE_BAND = {\n    column: {\n        start: 0,\n        end: 1\n    },\n    row: {\n        start: 1,\n        end: 0\n    }\n};\nexport function getLayoutTitleBand(titleAnchor, headerChannel) {\n    return LAYOUT_TITLE_BAND[headerChannel][titleAnchor];\n}\nexport function assembleLayoutTitleBand(headerComponentIndex, config) {\n    const titleBand = {};\n    for (const channel of FACET_CHANNELS) {\n        const headerComponent = headerComponentIndex[channel];\n        if (headerComponent === null || headerComponent === void 0 ? void 0 : headerComponent.facetFieldDef) {\n            const { titleAnchor, titleOrient } = getHeaderProperties(['titleAnchor', 'titleOrient'], headerComponent.facetFieldDef.header, config, channel);\n            const headerChannel = getHeaderChannel(channel, titleOrient);\n            const band = getLayoutTitleBand(titleAnchor, headerChannel);\n            if (band !== undefined) {\n                titleBand[headerChannel] = band;\n            }\n        }\n    }\n    return isEmpty(titleBand) ? undefined : titleBand;\n}\nexport function assembleHeaderProperties(config, facetFieldDef, channel, properties, propertiesMap) {\n    const props = {};\n    for (const prop of properties) {\n        if (!propertiesMap[prop]) {\n            continue;\n        }\n        const value = getHeaderProperty(prop, facetFieldDef === null || facetFieldDef === void 0 ? void 0 : facetFieldDef.header, config, channel);\n        if (value !== undefined) {\n            props[propertiesMap[prop]] = value;\n        }\n    }\n    return props;\n}\n//# sourceMappingURL=assemble.js.map","import { contains, getFirstDefined } from '../../util';\n/**\n * Get header channel, which can be different from facet channel when orient is specified or when the facet channel is facet.\n */\nexport function getHeaderChannel(channel, orient) {\n    if (contains(['top', 'bottom'], orient)) {\n        return 'column';\n    }\n    else if (contains(['left', 'right'], orient)) {\n        return 'row';\n    }\n    return channel === 'row' ? 'row' : 'column';\n}\nexport function getHeaderProperty(prop, header, config, channel) {\n    const headerSpecificConfig = channel === 'row' ? config.headerRow : channel === 'column' ? config.headerColumn : config.headerFacet;\n    return getFirstDefined((header || {})[prop], headerSpecificConfig[prop], config.header[prop]);\n}\nexport function getHeaderProperties(properties, header, config, channel) {\n    const props = {};\n    for (const prop of properties) {\n        const value = getHeaderProperty(prop, header || {}, config, channel);\n        if (value !== undefined) {\n            props[prop] = value;\n        }\n    }\n    return props;\n}\n//# sourceMappingURL=common.js.map","export const HEADER_CHANNELS = ['row', 'column'];\nexport const HEADER_TYPES = ['header', 'footer'];\n//# sourceMappingURL=component.js.map","import { isArray } from 'vega-util';\nimport { FACET_CHANNELS } from '../../channel';\nimport { title as fieldDefTitle } from '../../channeldef';\nimport { contains, getFirstDefined } from '../../util';\nimport { isSignalRef } from '../../vega.schema';\nimport { assembleAxis } from '../axis/assemble';\nimport { parseGuideResolve } from '../resolve';\nimport { getHeaderProperty } from './common';\nexport function getHeaderType(orient) {\n    if (orient === 'top' || orient === 'left' || isSignalRef(orient)) {\n        // we always use header for orient signal since we can't dynamically make header becomes footer\n        return 'header';\n    }\n    return 'footer';\n}\nexport function parseFacetHeaders(model) {\n    for (const channel of FACET_CHANNELS) {\n        parseFacetHeader(model, channel);\n    }\n    mergeChildAxis(model, 'x');\n    mergeChildAxis(model, 'y');\n}\nfunction parseFacetHeader(model, channel) {\n    var _a;\n    const { facet, config, child, component } = model;\n    if (model.channelHasField(channel)) {\n        const fieldDef = facet[channel];\n        const titleConfig = getHeaderProperty('title', null, config, channel);\n        let title = fieldDefTitle(fieldDef, config, {\n            allowDisabling: true,\n            includeDefault: titleConfig === undefined || !!titleConfig\n        });\n        if (child.component.layoutHeaders[channel].title) {\n            // TODO: better handle multiline titles\n            title = isArray(title) ? title.join(', ') : title;\n            // merge title with child to produce \"Title / Subtitle / Sub-subtitle\"\n            title += ` / ${child.component.layoutHeaders[channel].title}`;\n            child.component.layoutHeaders[channel].title = null;\n        }\n        const labelOrient = getHeaderProperty('labelOrient', fieldDef.header, config, channel);\n        const labels = fieldDef.header !== null ? getFirstDefined((_a = fieldDef.header) === null || _a === void 0 ? void 0 : _a.labels, config.header.labels, true) : false;\n        const headerType = contains(['bottom', 'right'], labelOrient) ? 'footer' : 'header';\n        component.layoutHeaders[channel] = {\n            title: fieldDef.header !== null ? title : null,\n            facetFieldDef: fieldDef,\n            [headerType]: channel === 'facet' ? [] : [makeHeaderComponent(model, channel, labels)]\n        };\n    }\n}\nfunction makeHeaderComponent(model, channel, labels) {\n    const sizeType = channel === 'row' ? 'height' : 'width';\n    return {\n        labels,\n        sizeSignal: model.child.component.layoutSize.get(sizeType) ? model.child.getSizeSignalRef(sizeType) : undefined,\n        axes: []\n    };\n}\nfunction mergeChildAxis(model, channel) {\n    var _a;\n    const { child } = model;\n    if (child.component.axes[channel]) {\n        const { layoutHeaders, resolve } = model.component;\n        resolve.axis[channel] = parseGuideResolve(resolve, channel);\n        if (resolve.axis[channel] === 'shared') {\n            // For shared axis, move the axes to facet's header or footer\n            const headerChannel = channel === 'x' ? 'column' : 'row';\n            const layoutHeader = layoutHeaders[headerChannel];\n            for (const axisComponent of child.component.axes[channel]) {\n                const headerType = getHeaderType(axisComponent.get('orient'));\n                (_a = layoutHeader[headerType]) !== null && _a !== void 0 ? _a : (layoutHeader[headerType] = [makeHeaderComponent(model, headerChannel, false)]);\n                // FIXME: assemble shouldn't be called here, but we do it this way so we only extract the main part of the axes\n                const mainAxis = assembleAxis(axisComponent, 'main', model.config, { header: true });\n                if (mainAxis) {\n                    // LayoutHeader no longer keep track of property precedence, thus let's combine.\n                    layoutHeader[headerType][0].axes.push(mainAxis);\n                }\n                axisComponent.mainExtracted = true;\n            }\n        }\n        else {\n            // Otherwise do nothing for independent axes\n        }\n    }\n}\n//# sourceMappingURL=parse.js.map","import { array } from 'vega-util';\nimport * as log from '../log';\nimport { isLayerSpec, isUnitSpec } from '../spec';\nimport { keys } from '../util';\nimport { assembleAxisSignals } from './axis/assemble';\nimport { parseLayerAxes } from './axis/parse';\nimport { parseData } from './data/parse';\nimport { assembleLayoutSignals } from './layoutsize/assemble';\nimport { parseLayerLayoutSize } from './layoutsize/parse';\nimport { assembleLegends } from './legend/assemble';\nimport { Model } from './model';\nimport { assembleLayerSelectionMarks } from './selection/assemble';\nimport { UnitModel } from './unit';\nexport class LayerModel extends Model {\n    constructor(spec, parent, parentGivenName, parentGivenSize, config) {\n        super(spec, 'layer', parent, parentGivenName, config, spec.resolve, spec.view);\n        const layoutSize = Object.assign(Object.assign(Object.assign({}, parentGivenSize), (spec.width ? { width: spec.width } : {})), (spec.height ? { height: spec.height } : {}));\n        this.children = spec.layer.map((layer, i) => {\n            if (isLayerSpec(layer)) {\n                return new LayerModel(layer, this, this.getName(`layer_${i}`), layoutSize, config);\n            }\n            else if (isUnitSpec(layer)) {\n                return new UnitModel(layer, this, this.getName(`layer_${i}`), layoutSize, config);\n            }\n            throw new Error(log.message.invalidSpec(layer));\n        });\n    }\n    parseData() {\n        this.component.data = parseData(this);\n        for (const child of this.children) {\n            child.parseData();\n        }\n    }\n    parseLayoutSize() {\n        parseLayerLayoutSize(this);\n    }\n    parseSelections() {\n        // Merge selections up the hierarchy so that they may be referenced\n        // across unit specs. Persist their definitions within each child\n        // to assemble signals which remain within output Vega unit groups.\n        this.component.selection = {};\n        for (const child of this.children) {\n            child.parseSelections();\n            for (const key of keys(child.component.selection)) {\n                this.component.selection[key] = child.component.selection[key];\n            }\n        }\n    }\n    parseMarkGroup() {\n        for (const child of this.children) {\n            child.parseMarkGroup();\n        }\n    }\n    parseAxesAndHeaders() {\n        parseLayerAxes(this);\n    }\n    assembleSelectionTopLevelSignals(signals) {\n        return this.children.reduce((sg, child) => child.assembleSelectionTopLevelSignals(sg), signals);\n    }\n    // TODO: Support same named selections across children.\n    assembleSignals() {\n        return this.children.reduce((signals, child) => {\n            return signals.concat(child.assembleSignals());\n        }, assembleAxisSignals(this));\n    }\n    assembleLayoutSignals() {\n        return this.children.reduce((signals, child) => {\n            return signals.concat(child.assembleLayoutSignals());\n        }, assembleLayoutSignals(this));\n    }\n    assembleSelectionData(data) {\n        return this.children.reduce((db, child) => child.assembleSelectionData(db), data);\n    }\n    assembleGroupStyle() {\n        const uniqueStyles = new Set();\n        for (const child of this.children) {\n            for (const style of array(child.assembleGroupStyle())) {\n                uniqueStyles.add(style);\n            }\n        }\n        const styles = Array.from(uniqueStyles);\n        return styles.length > 1 ? styles : styles.length === 1 ? styles[0] : undefined;\n    }\n    assembleTitle() {\n        let title = super.assembleTitle();\n        if (title) {\n            return title;\n        }\n        // If title does not provide layer, look into children\n        for (const child of this.children) {\n            title = child.assembleTitle();\n            if (title) {\n                return title;\n            }\n        }\n        return undefined;\n    }\n    assembleLayout() {\n        return null;\n    }\n    assembleMarks() {\n        return assembleLayerSelectionMarks(this, this.children.flatMap(child => {\n            return child.assembleMarks();\n        }));\n    }\n    assembleLegends() {\n        return this.children.reduce((legends, child) => {\n            return legends.concat(child.assembleLegends());\n        }, assembleLegends(this));\n    }\n}\n//# sourceMappingURL=layer.js.map","import { getViewConfigContinuousSize } from '../../config';\nimport { hasDiscreteDomain } from '../../scale';\nimport { getFirstDefined } from '../../util';\nimport { isSignalRef, isVgRangeStep } from '../../vega.schema';\nimport { signalOrStringValue } from '../common';\nimport { isFacetModel } from '../model';\nexport function assembleLayoutSignals(model) {\n    return [\n        ...sizeSignals(model, 'width'),\n        ...sizeSignals(model, 'height'),\n        ...sizeSignals(model, 'childWidth'),\n        ...sizeSignals(model, 'childHeight')\n    ];\n}\nexport function sizeSignals(model, sizeType) {\n    const channel = sizeType === 'width' ? 'x' : 'y';\n    const size = model.component.layoutSize.get(sizeType);\n    if (!size || size === 'merged') {\n        return [];\n    }\n    // Read size signal name from name map, just in case it is the top-level size signal that got renamed.\n    const name = model.getSizeSignalRef(sizeType).signal;\n    if (size === 'step') {\n        const scaleComponent = model.getScaleComponent(channel);\n        if (scaleComponent) {\n            const type = scaleComponent.get('type');\n            const range = scaleComponent.get('range');\n            if (hasDiscreteDomain(type) && isVgRangeStep(range)) {\n                const scaleName = model.scaleName(channel);\n                if (isFacetModel(model.parent)) {\n                    // If parent is facet and this is an independent scale, return only signal signal\n                    // as the width/height will be calculated using the cardinality from\n                    // facet's aggregate rather than reading from scale domain\n                    const parentResolve = model.parent.component.resolve;\n                    if (parentResolve.scale[channel] === 'independent') {\n                        return [stepSignal(scaleName, range)];\n                    }\n                }\n                return [\n                    stepSignal(scaleName, range),\n                    {\n                        name,\n                        update: sizeExpr(scaleName, scaleComponent, `domain('${scaleName}').length`)\n                    }\n                ];\n            }\n        }\n        /* istanbul ignore next: Condition should not happen -- only for warning in development. */\n        throw new Error('layout size is step although width/height is not step.');\n    }\n    else if (size == 'container') {\n        const isWidth = name.endsWith('width');\n        const expr = isWidth ? 'containerSize()[0]' : 'containerSize()[1]';\n        const defaultValue = getViewConfigContinuousSize(model.config.view, isWidth ? 'width' : 'height');\n        const safeExpr = `isFinite(${expr}) ? ${expr} : ${defaultValue}`;\n        return [{ name, init: safeExpr, on: [{ update: safeExpr, events: 'window:resize' }] }];\n    }\n    else {\n        return [\n            {\n                name,\n                value: size\n            }\n        ];\n    }\n}\nfunction stepSignal(scaleName, range) {\n    const name = `${scaleName}_step`;\n    if (isSignalRef(range.step)) {\n        return { name, update: range.step.signal };\n    }\n    else {\n        return { name, value: range.step };\n    }\n}\nexport function sizeExpr(scaleName, scaleComponent, cardinality) {\n    const type = scaleComponent.get('type');\n    const padding = scaleComponent.get('padding');\n    const paddingOuter = getFirstDefined(scaleComponent.get('paddingOuter'), padding);\n    let paddingInner = scaleComponent.get('paddingInner');\n    paddingInner =\n        type === 'band'\n            ? // only band has real paddingInner\n                paddingInner !== undefined\n                    ? paddingInner\n                    : padding\n            : // For point, as calculated in https://github.com/vega/vega-scale/blob/master/src/band.js#L128,\n                // it's equivalent to have paddingInner = 1 since there is only n-1 steps between n points.\n                1;\n    return `bandspace(${cardinality}, ${signalOrStringValue(paddingInner)}, ${signalOrStringValue(paddingOuter)}) * ${scaleName}_step`;\n}\n//# sourceMappingURL=assemble.js.map","export function getSizeTypeFromLayoutSizeType(layoutSizeType) {\n    return layoutSizeType === 'childWidth' ? 'width' : layoutSizeType === 'childHeight' ? 'height' : layoutSizeType;\n}\n//# sourceMappingURL=component.js.map","import { getSizeChannel, POSITION_SCALE_CHANNELS } from '../../channel';\nimport { isContinuousFieldOrDatumDef } from '../../channeldef';\nimport * as log from '../../log';\nimport { isStep } from '../../spec/base';\nexport function initLayoutSize({ encoding, size }) {\n    for (const channel of POSITION_SCALE_CHANNELS) {\n        const sizeType = getSizeChannel(channel);\n        if (isStep(size[sizeType])) {\n            if (isContinuousFieldOrDatumDef(encoding[channel])) {\n                delete size[sizeType];\n                log.warn(log.message.stepDropped(sizeType));\n            }\n        }\n    }\n    return size;\n}\n//# sourceMappingURL=init.js.map","import { getPositionScaleChannel, getSizeChannel, POSITION_SCALE_CHANNELS } from '../../channel';\nimport { getViewConfigContinuousSize, getViewConfigDiscreteSize } from '../../config';\nimport { hasDiscreteDomain } from '../../scale';\nimport { isStep } from '../../spec/base';\nimport { isVgRangeStep } from '../../vega.schema';\nimport { defaultScaleResolve } from '../resolve';\nimport { mergeValuesWithExplicit } from '../split';\nimport { getSizeTypeFromLayoutSizeType } from './component';\nexport function parseLayerLayoutSize(model) {\n    parseChildrenLayoutSize(model);\n    parseNonUnitLayoutSizeForChannel(model, 'width');\n    parseNonUnitLayoutSizeForChannel(model, 'height');\n}\nexport function parseConcatLayoutSize(model) {\n    parseChildrenLayoutSize(model);\n    // for columns === 1 (vconcat), we can completely merge width. Otherwise, we can treat merged width as childWidth.\n    const widthType = model.layout.columns === 1 ? 'width' : 'childWidth';\n    // for columns === undefined (hconcat), we can completely merge height. Otherwise, we can treat merged height as childHeight.\n    const heightType = model.layout.columns === undefined ? 'height' : 'childHeight';\n    parseNonUnitLayoutSizeForChannel(model, widthType);\n    parseNonUnitLayoutSizeForChannel(model, heightType);\n}\nexport function parseChildrenLayoutSize(model) {\n    for (const child of model.children) {\n        child.parseLayoutSize();\n    }\n}\n/**\n * Merge child layout size (width or height).\n */\nfunction parseNonUnitLayoutSizeForChannel(model, layoutSizeType) {\n    var _a;\n    /*\n     * For concat, the parent width or height might not be the same as the children's shared height.\n     * For example, hconcat's subviews may share width, but the shared width is not the hconcat view's width.\n     *\n     * layoutSizeType represents the output of the view (could be childWidth/childHeight/width/height)\n     * while the sizeType represents the properties of the child.\n     */\n    const sizeType = getSizeTypeFromLayoutSizeType(layoutSizeType);\n    const channel = getPositionScaleChannel(sizeType);\n    const resolve = model.component.resolve;\n    const layoutSizeCmpt = model.component.layoutSize;\n    let mergedSize;\n    // Try to merge layout size\n    for (const child of model.children) {\n        const childSize = child.component.layoutSize.getWithExplicit(sizeType);\n        const scaleResolve = (_a = resolve.scale[channel]) !== null && _a !== void 0 ? _a : defaultScaleResolve(channel, model);\n        if (scaleResolve === 'independent' && childSize.value === 'step') {\n            // Do not merge independent scales with range-step as their size depends\n            // on the scale domains, which can be different between scales.\n            mergedSize = undefined;\n            break;\n        }\n        if (mergedSize) {\n            if (scaleResolve === 'independent' && mergedSize.value !== childSize.value) {\n                // For independent scale, only merge if all the sizes are the same.\n                // If the values are different, abandon the merge!\n                mergedSize = undefined;\n                break;\n            }\n            mergedSize = mergeValuesWithExplicit(mergedSize, childSize, sizeType, '');\n        }\n        else {\n            mergedSize = childSize;\n        }\n    }\n    if (mergedSize) {\n        // If merged, rename size and set size of all children.\n        for (const child of model.children) {\n            model.renameSignal(child.getName(sizeType), model.getName(layoutSizeType));\n            child.component.layoutSize.set(sizeType, 'merged', false);\n        }\n        layoutSizeCmpt.setWithExplicit(layoutSizeType, mergedSize);\n    }\n    else {\n        layoutSizeCmpt.setWithExplicit(layoutSizeType, {\n            explicit: false,\n            value: undefined\n        });\n    }\n}\nexport function parseUnitLayoutSize(model) {\n    const { size, component } = model;\n    for (const channel of POSITION_SCALE_CHANNELS) {\n        const sizeType = getSizeChannel(channel);\n        if (size[sizeType]) {\n            const specifiedSize = size[sizeType];\n            component.layoutSize.set(sizeType, isStep(specifiedSize) ? 'step' : specifiedSize, true);\n        }\n        else {\n            const defaultSize = defaultUnitSize(model, sizeType);\n            component.layoutSize.set(sizeType, defaultSize, false);\n        }\n    }\n}\nfunction defaultUnitSize(model, sizeType) {\n    const channel = sizeType === 'width' ? 'x' : 'y';\n    const config = model.config;\n    const scaleComponent = model.getScaleComponent(channel);\n    if (scaleComponent) {\n        const scaleType = scaleComponent.get('type');\n        const range = scaleComponent.get('range');\n        if (hasDiscreteDomain(scaleType)) {\n            const size = getViewConfigDiscreteSize(config.view, sizeType);\n            if (isVgRangeStep(range) || isStep(size)) {\n                // For discrete domain with range.step, use dynamic width/height\n                return 'step';\n            }\n            else {\n                return size;\n            }\n        }\n        else {\n            return getViewConfigContinuousSize(config.view, sizeType);\n        }\n    }\n    else if (model.hasProjection || model.mark === 'arc') {\n        // arc should use continuous size by default otherwise the pie is extremely small\n        return getViewConfigContinuousSize(config.view, sizeType);\n    }\n    else {\n        const size = getViewConfigDiscreteSize(config.view, sizeType);\n        return isStep(size) ? size.step : size;\n    }\n}\n//# sourceMappingURL=parse.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { LEGEND_SCALE_CHANNELS } from '../../legend';\nimport { keys, replaceAll, stringify, vals } from '../../util';\nimport { isSignalRef } from '../../vega.schema';\nimport { mergeLegendComponent } from './parse';\nfunction setLegendEncode(legend, part, vgProp, vgRef) {\n    var _a, _b, _c;\n    var _d, _e;\n    (_a = legend.encode) !== null && _a !== void 0 ? _a : (legend.encode = {});\n    (_b = (_d = legend.encode)[part]) !== null && _b !== void 0 ? _b : (_d[part] = {});\n    (_c = (_e = legend.encode[part]).update) !== null && _c !== void 0 ? _c : (_e.update = {});\n    // TODO: remove as any after https://github.com/prisma/nexus-prisma/issues/291\n    legend.encode[part].update[vgProp] = vgRef;\n}\nexport function assembleLegends(model) {\n    const legendComponentIndex = model.component.legends;\n    const legendByDomain = {};\n    for (const channel of keys(legendComponentIndex)) {\n        const scaleComponent = model.getScaleComponent(channel);\n        const domainHash = stringify(scaleComponent.get('domains'));\n        if (legendByDomain[domainHash]) {\n            for (const mergedLegendComponent of legendByDomain[domainHash]) {\n                const merged = mergeLegendComponent(mergedLegendComponent, legendComponentIndex[channel]);\n                if (!merged) {\n                    // If cannot merge, need to add this legend separately\n                    legendByDomain[domainHash].push(legendComponentIndex[channel]);\n                }\n            }\n        }\n        else {\n            legendByDomain[domainHash] = [legendComponentIndex[channel].clone()];\n        }\n    }\n    const legends = vals(legendByDomain)\n        .flat()\n        .map(l => assembleLegend(l, model.config))\n        .filter(l => l !== undefined);\n    return legends;\n}\nexport function assembleLegend(legendCmpt, config) {\n    var _a, _b, _c;\n    const _d = legendCmpt.combine(), { disable, labelExpr, selections } = _d, legend = __rest(_d, [\"disable\", \"labelExpr\", \"selections\"]);\n    if (disable) {\n        return undefined;\n    }\n    if (config.aria === false && legend.aria == undefined) {\n        legend.aria = false;\n    }\n    if ((_a = legend.encode) === null || _a === void 0 ? void 0 : _a.symbols) {\n        const out = legend.encode.symbols.update;\n        if (out.fill && out.fill['value'] !== 'transparent' && !out.stroke && !legend.stroke) {\n            // For non color channel's legend, we need to override symbol stroke config from Vega config if stroke channel is not used.\n            out.stroke = { value: 'transparent' };\n        }\n        // Remove properties that the legend is encoding.\n        for (const property of LEGEND_SCALE_CHANNELS) {\n            if (legend[property]) {\n                delete out[property];\n            }\n        }\n    }\n    if (!legend.title) {\n        // title schema doesn't include null, ''\n        delete legend.title;\n    }\n    if (labelExpr !== undefined) {\n        let expr = labelExpr;\n        if (((_c = (_b = legend.encode) === null || _b === void 0 ? void 0 : _b.labels) === null || _c === void 0 ? void 0 : _c.update) && isSignalRef(legend.encode.labels.update.text)) {\n            expr = replaceAll(labelExpr, 'datum.label', legend.encode.labels.update.text.signal);\n        }\n        setLegendEncode(legend, 'labels', 'text', { signal: expr });\n    }\n    return legend;\n}\n//# sourceMappingURL=assemble.js.map","import { COMMON_LEGEND_PROPERTY_INDEX } from '../../legend';\nimport { keys } from '../../util';\nimport { Split } from '../split';\nconst LEGEND_COMPONENT_PROPERTY_INDEX = Object.assign(Object.assign({}, COMMON_LEGEND_PROPERTY_INDEX), { disable: 1, labelExpr: 1, selections: 1, \n    // channel scales\n    opacity: 1, shape: 1, stroke: 1, fill: 1, size: 1, strokeWidth: 1, strokeDash: 1, \n    // encode\n    encode: 1 });\nexport const LEGEND_COMPONENT_PROPERTIES = keys(LEGEND_COMPONENT_PROPERTY_INDEX);\nexport class LegendComponent extends Split {\n}\n//# sourceMappingURL=component.js.map","import { array, isArray, stringValue } from 'vega-util';\nimport { COLOR, OPACITY } from '../../channel';\nimport { hasConditionalValueDef, isFieldDef, isValueDef } from '../../channeldef';\nimport { FILL_STROKE_CONFIG } from '../../mark';\nimport { getFirstDefined, isEmpty, varName } from '../../util';\nimport { applyMarkConfig, signalOrValueRef } from '../common';\nimport { formatCustomType, isCustomFormatType } from '../format';\nimport * as mixins from '../mark/encode';\nimport { STORE } from '../selection';\nexport const legendEncodeRules = {\n    symbols,\n    gradient,\n    labels,\n    entries\n};\nexport function symbols(symbolsSpec, { fieldOrDatumDef, model, channel, legendCmpt, legendType }) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    if (legendType !== 'symbol') {\n        return undefined;\n    }\n    const { markDef, encoding, config, mark } = model;\n    const filled = markDef.filled && mark !== 'trail';\n    let out = Object.assign(Object.assign({}, applyMarkConfig({}, model, FILL_STROKE_CONFIG)), mixins.color(model, { filled })); // FIXME: remove this when VgEncodeEntry is compatible with SymbolEncodeEntry\n    const symbolOpacity = (_a = legendCmpt.get('symbolOpacity')) !== null && _a !== void 0 ? _a : config.legend.symbolOpacity;\n    const symbolFillColor = (_b = legendCmpt.get('symbolFillColor')) !== null && _b !== void 0 ? _b : config.legend.symbolFillColor;\n    const symbolStrokeColor = (_c = legendCmpt.get('symbolStrokeColor')) !== null && _c !== void 0 ? _c : config.legend.symbolStrokeColor;\n    const opacity = symbolOpacity === undefined ? (_d = getMaxValue(encoding.opacity)) !== null && _d !== void 0 ? _d : markDef.opacity : undefined;\n    if (out.fill) {\n        // for fill legend, we don't want any fill in symbol\n        if (channel === 'fill' || (filled && channel === COLOR)) {\n            delete out.fill;\n        }\n        else {\n            if (out.fill['field']) {\n                // For others, set fill to some opaque value (or nothing if a color is already set)\n                if (symbolFillColor) {\n                    delete out.fill;\n                }\n                else {\n                    out.fill = signalOrValueRef((_e = config.legend.symbolBaseFillColor) !== null && _e !== void 0 ? _e : 'black');\n                    out.fillOpacity = signalOrValueRef(opacity !== null && opacity !== void 0 ? opacity : 1);\n                }\n            }\n            else if (isArray(out.fill)) {\n                const fill = (_h = (_g = getFirstConditionValue((_f = encoding.fill) !== null && _f !== void 0 ? _f : encoding.color)) !== null && _g !== void 0 ? _g : markDef.fill) !== null && _h !== void 0 ? _h : (filled && markDef.color);\n                if (fill) {\n                    out.fill = signalOrValueRef(fill);\n                }\n            }\n        }\n    }\n    if (out.stroke) {\n        if (channel === 'stroke' || (!filled && channel === COLOR)) {\n            delete out.stroke;\n        }\n        else {\n            if (out.stroke['field'] || symbolStrokeColor) {\n                // For others, remove stroke field\n                delete out.stroke;\n            }\n            else if (isArray(out.stroke)) {\n                const stroke = getFirstDefined(getFirstConditionValue(encoding.stroke || encoding.color), markDef.stroke, filled ? markDef.color : undefined);\n                if (stroke) {\n                    out.stroke = { value: stroke };\n                }\n            }\n        }\n    }\n    if (channel !== OPACITY) {\n        const condition = isFieldDef(fieldOrDatumDef) && selectedCondition(model, legendCmpt, fieldOrDatumDef);\n        if (condition) {\n            out.opacity = [\n                Object.assign({ test: condition }, signalOrValueRef(opacity !== null && opacity !== void 0 ? opacity : 1)),\n                signalOrValueRef(config.legend.unselectedOpacity)\n            ];\n        }\n        else if (opacity) {\n            out.opacity = signalOrValueRef(opacity);\n        }\n    }\n    out = Object.assign(Object.assign({}, out), symbolsSpec);\n    return isEmpty(out) ? undefined : out;\n}\nexport function gradient(gradientSpec, { model, legendType, legendCmpt }) {\n    var _a;\n    if (legendType !== 'gradient') {\n        return undefined;\n    }\n    const { config, markDef, encoding } = model;\n    let out = {};\n    const gradientOpacity = (_a = legendCmpt.get('gradientOpacity')) !== null && _a !== void 0 ? _a : config.legend.gradientOpacity;\n    const opacity = gradientOpacity === undefined ? getMaxValue(encoding.opacity) || markDef.opacity : undefined;\n    if (opacity) {\n        // only apply opacity if it is neither zero or undefined\n        out.opacity = signalOrValueRef(opacity);\n    }\n    out = Object.assign(Object.assign({}, out), gradientSpec);\n    return isEmpty(out) ? undefined : out;\n}\nexport function labels(specifiedlabelsSpec, { fieldOrDatumDef, model, channel, legendCmpt }) {\n    const legend = model.legend(channel) || {};\n    const config = model.config;\n    const condition = isFieldDef(fieldOrDatumDef) ? selectedCondition(model, legendCmpt, fieldOrDatumDef) : undefined;\n    const opacity = condition ? [{ test: condition, value: 1 }, { value: config.legend.unselectedOpacity }] : undefined;\n    const { format, formatType } = legend;\n    let text = undefined;\n    if (isCustomFormatType(formatType)) {\n        text = formatCustomType({\n            fieldOrDatumDef,\n            field: 'datum.value',\n            format,\n            formatType,\n            config\n        });\n    }\n    else if (format === undefined && formatType === undefined && config.customFormatTypes) {\n        if (fieldOrDatumDef.type === 'quantitative' && config.numberFormatType) {\n            text = formatCustomType({\n                fieldOrDatumDef,\n                field: 'datum.value',\n                format: config.numberFormat,\n                formatType: config.numberFormatType,\n                config\n            });\n        }\n        else if (fieldOrDatumDef.type === 'temporal' &&\n            config.timeFormatType &&\n            isFieldDef(fieldOrDatumDef) &&\n            fieldOrDatumDef.timeUnit === undefined) {\n            text = formatCustomType({\n                fieldOrDatumDef,\n                field: 'datum.value',\n                format: config.timeFormat,\n                formatType: config.timeFormatType,\n                config\n            });\n        }\n    }\n    const labelsSpec = Object.assign(Object.assign(Object.assign({}, (opacity ? { opacity } : {})), (text ? { text } : {})), specifiedlabelsSpec);\n    return isEmpty(labelsSpec) ? undefined : labelsSpec;\n}\nexport function entries(entriesSpec, { legendCmpt }) {\n    const selections = legendCmpt.get('selections');\n    return (selections === null || selections === void 0 ? void 0 : selections.length) ? Object.assign(Object.assign({}, entriesSpec), { fill: { value: 'transparent' } }) : entriesSpec;\n}\nfunction getMaxValue(channelDef) {\n    return getConditionValue(channelDef, (v, conditionalDef) => Math.max(v, conditionalDef.value));\n}\nexport function getFirstConditionValue(channelDef) {\n    return getConditionValue(channelDef, (v, conditionalDef) => {\n        return getFirstDefined(v, conditionalDef.value);\n    });\n}\nfunction getConditionValue(channelDef, reducer) {\n    if (hasConditionalValueDef(channelDef)) {\n        return array(channelDef.condition).reduce(reducer, channelDef.value);\n    }\n    else if (isValueDef(channelDef)) {\n        return channelDef.value;\n    }\n    return undefined;\n}\nfunction selectedCondition(model, legendCmpt, fieldDef) {\n    const selections = legendCmpt.get('selections');\n    if (!(selections === null || selections === void 0 ? void 0 : selections.length))\n        return undefined;\n    const field = stringValue(fieldDef.field);\n    return selections\n        .map(name => {\n        const store = stringValue(varName(name) + STORE);\n        return `(!length(data(${store})) || (${name}[${field}] && indexof(${name}[${field}], datum.value) >= 0))`;\n    })\n        .join(' || ');\n}\n//# sourceMappingURL=encode.js.map","import { COLOR, SHAPE } from '../../channel';\nimport { getFieldOrDatumDef, isFieldDef } from '../../channeldef';\nimport { LEGEND_SCALE_CHANNELS } from '../../legend';\nimport { normalizeTimeUnit } from '../../timeunit';\nimport { GEOJSON } from '../../type';\nimport { deleteNestedProperty, isEmpty, keys, varName } from '../../util';\nimport { mergeTitleComponent } from '../common';\nimport { guideEncodeEntry } from '../guide';\nimport { isUnitModel } from '../model';\nimport { parseGuideResolve } from '../resolve';\nimport { parseInteractiveLegend } from '../selection/legends';\nimport { defaultTieBreaker, makeImplicit, mergeValuesWithExplicit } from '../split';\nimport { LegendComponent, LEGEND_COMPONENT_PROPERTIES } from './component';\nimport { legendEncodeRules } from './encode';\nimport { getDirection, getLegendType, legendRules } from './properties';\nexport function parseLegend(model) {\n    const legendComponent = isUnitModel(model) ? parseUnitLegend(model) : parseNonUnitLegend(model);\n    model.component.legends = legendComponent;\n    return legendComponent;\n}\nfunction parseUnitLegend(model) {\n    const { encoding } = model;\n    const legendComponent = {};\n    for (const channel of [COLOR, ...LEGEND_SCALE_CHANNELS]) {\n        const def = getFieldOrDatumDef(encoding[channel]);\n        if (!def || !model.getScaleComponent(channel)) {\n            continue;\n        }\n        if (channel === SHAPE && isFieldDef(def) && def.type === GEOJSON) {\n            continue;\n        }\n        legendComponent[channel] = parseLegendForChannel(model, channel);\n    }\n    return legendComponent;\n}\nfunction getLegendDefWithScale(model, channel) {\n    const scale = model.scaleName(channel);\n    if (model.mark === 'trail') {\n        if (channel === 'color') {\n            // trail is a filled mark, but its default symbolType (\"stroke\") should use \"stroke\"\n            return { stroke: scale };\n        }\n        else if (channel === 'size') {\n            return { strokeWidth: scale };\n        }\n    }\n    if (channel === 'color') {\n        return model.markDef.filled ? { fill: scale } : { stroke: scale };\n    }\n    return { [channel]: scale };\n}\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isExplicit(value, property, legend, fieldDef) {\n    switch (property) {\n        case 'disable':\n            return legend !== undefined; // if axis is specified or null/false, then its enable/disable state is explicit\n        case 'values':\n            // specified legend.values is already respected, but may get transformed.\n            return !!(legend === null || legend === void 0 ? void 0 : legend.values);\n        case 'title':\n            // title can be explicit if fieldDef.title is set\n            if (property === 'title' && value === (fieldDef === null || fieldDef === void 0 ? void 0 : fieldDef.title)) {\n                return true;\n            }\n    }\n    // Otherwise, things are explicit if the returned value matches the specified property\n    return value === (legend || {})[property];\n}\nexport function parseLegendForChannel(model, channel) {\n    var _a, _b, _c;\n    let legend = model.legend(channel);\n    const { markDef, encoding, config } = model;\n    const legendConfig = config.legend;\n    const legendCmpt = new LegendComponent({}, getLegendDefWithScale(model, channel));\n    parseInteractiveLegend(model, channel, legendCmpt);\n    const disable = legend !== undefined ? !legend : legendConfig.disable;\n    legendCmpt.set('disable', disable, legend !== undefined);\n    if (disable) {\n        return legendCmpt;\n    }\n    legend = legend || {};\n    const scaleType = model.getScaleComponent(channel).get('type');\n    const fieldOrDatumDef = getFieldOrDatumDef(encoding[channel]);\n    const timeUnit = isFieldDef(fieldOrDatumDef) ? (_a = normalizeTimeUnit(fieldOrDatumDef.timeUnit)) === null || _a === void 0 ? void 0 : _a.unit : undefined;\n    const orient = legend.orient || config.legend.orient || 'right';\n    const legendType = getLegendType({ legend, channel, timeUnit, scaleType });\n    const direction = getDirection({ legend, legendType, orient, legendConfig });\n    const ruleParams = {\n        legend,\n        channel,\n        model,\n        markDef,\n        encoding,\n        fieldOrDatumDef,\n        legendConfig,\n        config,\n        scaleType,\n        orient,\n        legendType,\n        direction\n    };\n    for (const property of LEGEND_COMPONENT_PROPERTIES) {\n        if ((legendType === 'gradient' && property.startsWith('symbol')) ||\n            (legendType === 'symbol' && property.startsWith('gradient'))) {\n            continue;\n        }\n        const value = property in legendRules ? legendRules[property](ruleParams) : legend[property];\n        if (value !== undefined) {\n            const explicit = isExplicit(value, property, legend, model.fieldDef(channel));\n            if (explicit || config.legend[property] === undefined) {\n                legendCmpt.set(property, value, explicit);\n            }\n        }\n    }\n    const legendEncoding = (_b = legend === null || legend === void 0 ? void 0 : legend.encoding) !== null && _b !== void 0 ? _b : {};\n    const selections = legendCmpt.get('selections');\n    const legendEncode = {};\n    const legendEncodeParams = { fieldOrDatumDef, model, channel, legendCmpt, legendType };\n    for (const part of ['labels', 'legend', 'title', 'symbols', 'gradient', 'entries']) {\n        const legendEncodingPart = guideEncodeEntry((_c = legendEncoding[part]) !== null && _c !== void 0 ? _c : {}, model);\n        const value = part in legendEncodeRules\n            ? legendEncodeRules[part](legendEncodingPart, legendEncodeParams) // apply rule\n            : legendEncodingPart; // no rule -- just default values\n        if (value !== undefined && !isEmpty(value)) {\n            legendEncode[part] = Object.assign(Object.assign(Object.assign({}, ((selections === null || selections === void 0 ? void 0 : selections.length) && isFieldDef(fieldOrDatumDef)\n                ? { name: `${varName(fieldOrDatumDef.field)}_legend_${part}` }\n                : {})), ((selections === null || selections === void 0 ? void 0 : selections.length) ? { interactive: !!selections } : {})), { update: value });\n        }\n    }\n    if (!isEmpty(legendEncode)) {\n        legendCmpt.set('encode', legendEncode, !!(legend === null || legend === void 0 ? void 0 : legend.encoding));\n    }\n    return legendCmpt;\n}\nfunction parseNonUnitLegend(model) {\n    const { legends, resolve } = model.component;\n    for (const child of model.children) {\n        parseLegend(child);\n        for (const channel of keys(child.component.legends)) {\n            resolve.legend[channel] = parseGuideResolve(model.component.resolve, channel);\n            if (resolve.legend[channel] === 'shared') {\n                // If the resolve says shared (and has not been overridden)\n                // We will try to merge and see if there is a conflict\n                legends[channel] = mergeLegendComponent(legends[channel], child.component.legends[channel]);\n                if (!legends[channel]) {\n                    // If merge returns nothing, there is a conflict so we cannot make the legend shared.\n                    // Thus, mark legend as independent and remove the legend component.\n                    resolve.legend[channel] = 'independent';\n                    delete legends[channel];\n                }\n            }\n        }\n    }\n    for (const channel of keys(legends)) {\n        for (const child of model.children) {\n            if (!child.component.legends[channel]) {\n                // skip if the child does not have a particular legend\n                continue;\n            }\n            if (resolve.legend[channel] === 'shared') {\n                // After merging shared legend, make sure to remove legend from child\n                delete child.component.legends[channel];\n            }\n        }\n    }\n    return legends;\n}\nexport function mergeLegendComponent(mergedLegend, childLegend) {\n    var _a, _b, _c, _d;\n    if (!mergedLegend) {\n        return childLegend.clone();\n    }\n    const mergedOrient = mergedLegend.getWithExplicit('orient');\n    const childOrient = childLegend.getWithExplicit('orient');\n    if (mergedOrient.explicit && childOrient.explicit && mergedOrient.value !== childOrient.value) {\n        // TODO: throw warning if resolve is explicit (We don't have info about explicit/implicit resolve yet.)\n        // Cannot merge due to inconsistent orient\n        return undefined;\n    }\n    let typeMerged = false;\n    // Otherwise, let's merge\n    for (const prop of LEGEND_COMPONENT_PROPERTIES) {\n        const mergedValueWithExplicit = mergeValuesWithExplicit(mergedLegend.getWithExplicit(prop), childLegend.getWithExplicit(prop), prop, 'legend', \n        // Tie breaker function\n        (v1, v2) => {\n            switch (prop) {\n                case 'symbolType':\n                    return mergeSymbolType(v1, v2);\n                case 'title':\n                    return mergeTitleComponent(v1, v2);\n                case 'type':\n                    // There are only two types. If we have different types, then prefer symbol over gradient.\n                    typeMerged = true;\n                    return makeImplicit('symbol');\n            }\n            return defaultTieBreaker(v1, v2, prop, 'legend');\n        });\n        mergedLegend.setWithExplicit(prop, mergedValueWithExplicit);\n    }\n    if (typeMerged) {\n        if ((_b = (_a = mergedLegend.implicit) === null || _a === void 0 ? void 0 : _a.encode) === null || _b === void 0 ? void 0 : _b.gradient) {\n            deleteNestedProperty(mergedLegend.implicit, ['encode', 'gradient']);\n        }\n        if ((_d = (_c = mergedLegend.explicit) === null || _c === void 0 ? void 0 : _c.encode) === null || _d === void 0 ? void 0 : _d.gradient) {\n            deleteNestedProperty(mergedLegend.explicit, ['encode', 'gradient']);\n        }\n    }\n    return mergedLegend;\n}\nfunction mergeSymbolType(st1, st2) {\n    if (st2.value === 'circle') {\n        // prefer \"circle\" over \"stroke\"\n        return st2;\n    }\n    return st1;\n}\n//# sourceMappingURL=parse.js.map","import { isArray } from 'vega-util';\nimport { isColorChannel } from '../../channel';\nimport { title as fieldDefTitle, valueArray } from '../../channeldef';\nimport { isContinuousToContinuous } from '../../scale';\nimport { contains, getFirstDefined } from '../../util';\nimport { isSignalRef } from '../../vega.schema';\nimport { guideFormat, guideFormatType } from '../format';\nimport { getFirstConditionValue } from './encode';\nexport const legendRules = {\n    direction: ({ direction }) => direction,\n    format: ({ fieldOrDatumDef, legend, config }) => {\n        const { format, formatType } = legend;\n        return guideFormat(fieldOrDatumDef, fieldOrDatumDef.type, format, formatType, config, false);\n    },\n    formatType: ({ legend, fieldOrDatumDef, scaleType }) => {\n        const { formatType } = legend;\n        return guideFormatType(formatType, fieldOrDatumDef, scaleType);\n    },\n    gradientLength: params => {\n        var _a, _b;\n        const { legend, legendConfig } = params;\n        return (_b = (_a = legend.gradientLength) !== null && _a !== void 0 ? _a : legendConfig.gradientLength) !== null && _b !== void 0 ? _b : defaultGradientLength(params);\n    },\n    labelOverlap: ({ legend, legendConfig, scaleType }) => { var _a, _b; return (_b = (_a = legend.labelOverlap) !== null && _a !== void 0 ? _a : legendConfig.labelOverlap) !== null && _b !== void 0 ? _b : defaultLabelOverlap(scaleType); },\n    symbolType: ({ legend, markDef, channel, encoding }) => { var _a; return (_a = legend.symbolType) !== null && _a !== void 0 ? _a : defaultSymbolType(markDef.type, channel, encoding.shape, markDef.shape); },\n    title: ({ fieldOrDatumDef, config }) => fieldDefTitle(fieldOrDatumDef, config, { allowDisabling: true }),\n    type: ({ legendType, scaleType, channel }) => {\n        if (isColorChannel(channel) && isContinuousToContinuous(scaleType)) {\n            if (legendType === 'gradient') {\n                return undefined;\n            }\n        }\n        else if (legendType === 'symbol') {\n            return undefined;\n        }\n        return legendType;\n    },\n    values: ({ fieldOrDatumDef, legend }) => values(legend, fieldOrDatumDef)\n};\nexport function values(legend, fieldOrDatumDef) {\n    const vals = legend.values;\n    if (isArray(vals)) {\n        return valueArray(fieldOrDatumDef, vals);\n    }\n    else if (isSignalRef(vals)) {\n        return vals;\n    }\n    return undefined;\n}\nexport function defaultSymbolType(mark, channel, shapeChannelDef, markShape) {\n    var _a;\n    if (channel !== 'shape') {\n        // use the value from the shape encoding or the mark config if they exist\n        const shape = (_a = getFirstConditionValue(shapeChannelDef)) !== null && _a !== void 0 ? _a : markShape;\n        if (shape) {\n            return shape;\n        }\n    }\n    switch (mark) {\n        case 'bar':\n        case 'rect':\n        case 'image':\n        case 'square':\n            return 'square';\n        case 'line':\n        case 'trail':\n        case 'rule':\n            return 'stroke';\n        case 'arc':\n        case 'point':\n        case 'circle':\n        case 'tick':\n        case 'geoshape':\n        case 'area':\n        case 'text':\n            return 'circle';\n    }\n}\nexport function clipHeight(legendType) {\n    if (legendType === 'gradient') {\n        return 20;\n    }\n    return undefined;\n}\nexport function getLegendType(params) {\n    const { legend } = params;\n    return getFirstDefined(legend.type, defaultType(params));\n}\nexport function defaultType({ channel, timeUnit, scaleType }) {\n    // Following the logic in https://github.com/vega/vega-parser/blob/master/src/parsers/legend.js\n    if (isColorChannel(channel)) {\n        if (contains(['quarter', 'month', 'day'], timeUnit)) {\n            return 'symbol';\n        }\n        if (isContinuousToContinuous(scaleType)) {\n            return 'gradient';\n        }\n    }\n    return 'symbol';\n}\nexport function getDirection({ legendConfig, legendType, orient, legend }) {\n    var _a, _b;\n    return ((_b = (_a = legend.direction) !== null && _a !== void 0 ? _a : legendConfig[legendType ? 'gradientDirection' : 'symbolDirection']) !== null && _b !== void 0 ? _b : defaultDirection(orient, legendType));\n}\nexport function defaultDirection(orient, legendType) {\n    switch (orient) {\n        case 'top':\n        case 'bottom':\n            return 'horizontal';\n        case 'left':\n        case 'right':\n        case 'none':\n        case undefined: // undefined = \"right\" in Vega\n            return undefined; // vertical is Vega's default\n        default:\n            // top-left / ...\n            // For inner legend, uses compact layout like Tableau\n            return legendType === 'gradient' ? 'horizontal' : undefined;\n    }\n}\nexport function defaultGradientLength({ legendConfig, model, direction, orient, scaleType }) {\n    const { gradientHorizontalMaxLength, gradientHorizontalMinLength, gradientVerticalMaxLength, gradientVerticalMinLength } = legendConfig;\n    if (isContinuousToContinuous(scaleType)) {\n        if (direction === 'horizontal') {\n            if (orient === 'top' || orient === 'bottom') {\n                return gradientLengthSignal(model, 'width', gradientHorizontalMinLength, gradientHorizontalMaxLength);\n            }\n            else {\n                return gradientHorizontalMinLength;\n            }\n        }\n        else {\n            // vertical / undefined (Vega uses vertical by default)\n            return gradientLengthSignal(model, 'height', gradientVerticalMinLength, gradientVerticalMaxLength);\n        }\n    }\n    return undefined;\n}\nfunction gradientLengthSignal(model, sizeType, min, max) {\n    const sizeSignal = model.getSizeSignalRef(sizeType).signal;\n    return { signal: `clamp(${sizeSignal}, ${min}, ${max})` };\n}\nexport function defaultLabelOverlap(scaleType) {\n    if (contains(['quantile', 'threshold', 'log', 'symlog'], scaleType)) {\n        return 'greedy';\n    }\n    return undefined;\n}\n//# sourceMappingURL=properties.js.map","import * as encode from './encode';\nexport const arc = {\n    vgMark: 'arc',\n    encodeEntry: (model) => {\n        return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, encode.baseEncodeEntry(model, {\n            align: 'ignore',\n            baseline: 'ignore',\n            color: 'include',\n            size: 'ignore',\n            orient: 'ignore',\n            theta: 'ignore'\n        })), encode.pointPosition('x', model, { defaultPos: 'mid' })), encode.pointPosition('y', model, { defaultPos: 'mid' })), encode.rectPosition(model, 'radius')), encode.rectPosition(model, 'theta'));\n    }\n};\n//# sourceMappingURL=arc.js.map","import * as encode from './encode';\nexport const area = {\n    vgMark: 'area',\n    encodeEntry: (model) => {\n        return Object.assign(Object.assign(Object.assign(Object.assign({}, encode.baseEncodeEntry(model, {\n            align: 'ignore',\n            baseline: 'ignore',\n            color: 'include',\n            orient: 'include',\n            size: 'ignore',\n            theta: 'ignore'\n        })), encode.pointOrRangePosition('x', model, {\n            defaultPos: 'zeroOrMin',\n            defaultPos2: 'zeroOrMin',\n            range: model.markDef.orient === 'horizontal'\n        })), encode.pointOrRangePosition('y', model, {\n            defaultPos: 'zeroOrMin',\n            defaultPos2: 'zeroOrMin',\n            range: model.markDef.orient === 'vertical'\n        })), encode.defined(model));\n    }\n};\n//# sourceMappingURL=area.js.map","import * as encode from './encode';\nexport const bar = {\n    vgMark: 'rect',\n    encodeEntry: (model) => {\n        return Object.assign(Object.assign(Object.assign({}, encode.baseEncodeEntry(model, {\n            align: 'ignore',\n            baseline: 'ignore',\n            color: 'include',\n            orient: 'ignore',\n            size: 'ignore',\n            theta: 'ignore'\n        })), encode.rectPosition(model, 'x')), encode.rectPosition(model, 'y'));\n    }\n};\n//# sourceMappingURL=bar.js.map","import { entries, isEmpty } from '../../../util';\nimport { getMarkPropOrConfig, signalOrValueRef } from '../../common';\nimport { VG_MARK_INDEX } from './../../../vega.schema';\nimport { wrapCondition } from './conditional';\nimport { textRef } from './text';\nimport { tooltipData } from './tooltip';\nexport function aria(model) {\n    const { markDef, config } = model;\n    const enableAria = getMarkPropOrConfig('aria', markDef, config);\n    // We can ignore other aria properties if ariaHidden is true.\n    if (enableAria === false) {\n        // getMarkGroups sets aria to false already so we don't have to set it in the encode block\n        return {};\n    }\n    return Object.assign(Object.assign(Object.assign({}, (enableAria ? { aria: enableAria } : {})), ariaRoleDescription(model)), description(model));\n}\nfunction ariaRoleDescription(model) {\n    const { mark, markDef, config } = model;\n    if (config.aria === false) {\n        return {};\n    }\n    const ariaRoleDesc = getMarkPropOrConfig('ariaRoleDescription', markDef, config);\n    if (ariaRoleDesc != null) {\n        return { ariaRoleDescription: { value: ariaRoleDesc } };\n    }\n    return mark in VG_MARK_INDEX ? {} : { ariaRoleDescription: { value: mark } };\n}\nexport function description(model) {\n    const { encoding, markDef, config, stack } = model;\n    const channelDef = encoding.description;\n    if (channelDef) {\n        return wrapCondition(model, channelDef, 'description', cDef => textRef(cDef, model.config));\n    }\n    // Use default from mark def or config if defined.\n    // Functions in encode usually just return undefined but since we are defining a default below, we need to check the default here.\n    const descriptionValue = getMarkPropOrConfig('description', markDef, config);\n    if (descriptionValue != null) {\n        return {\n            description: signalOrValueRef(descriptionValue)\n        };\n    }\n    if (config.aria === false) {\n        return {};\n    }\n    const data = tooltipData(encoding, stack, config);\n    if (isEmpty(data)) {\n        return undefined;\n    }\n    return {\n        description: {\n            signal: entries(data)\n                .map(([key, value], index) => `\"${index > 0 ? '; ' : ''}${key}: \" + (${value})`)\n                .join(' + ')\n        }\n    };\n}\n//# sourceMappingURL=aria.js.map","import { array } from 'vega-util';\nimport { SCALE_CHANNELS } from '../../../channel';\nimport { isPathMark } from '../../../mark';\nimport { hasContinuousDomain } from '../../../scale';\nimport { keys } from '../../../util';\nimport { VG_MARK_CONFIGS } from '../../../vega.schema';\nimport { getMarkPropOrConfig, signalOrValueRef } from '../../common';\nimport { aria } from './aria';\nimport { color } from './color';\nimport { nonPosition } from './nonposition';\nimport { text } from './text';\nimport { tooltip } from './tooltip';\nimport { fieldInvalidPredicate } from './valueref';\nimport { zindex } from './zindex';\nexport { color } from './color';\nexport { wrapCondition } from './conditional';\nexport { nonPosition } from './nonposition';\nexport { pointPosition } from './position-point';\nexport { pointOrRangePosition, rangePosition } from './position-range';\nexport { rectPosition } from './position-rect';\nexport { text } from './text';\nexport { tooltip } from './tooltip';\nconst ALWAYS_IGNORE = new Set(['aria', 'width', 'height']);\nexport function baseEncodeEntry(model, ignore) {\n    const { fill = undefined, stroke = undefined } = ignore.color === 'include' ? color(model) : {};\n    return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, markDefProperties(model.markDef, ignore)), wrapAllFieldsInvalid(model, 'fill', fill)), wrapAllFieldsInvalid(model, 'stroke', stroke)), nonPosition('opacity', model)), nonPosition('fillOpacity', model)), nonPosition('strokeOpacity', model)), nonPosition('strokeWidth', model)), nonPosition('strokeDash', model)), zindex(model)), tooltip(model)), text(model, 'href')), aria(model));\n}\n// TODO: mark VgValueRef[] as readonly after https://github.com/vega/vega/pull/1987\nfunction wrapAllFieldsInvalid(model, channel, valueRef) {\n    const { config, mark, markDef } = model;\n    const invalid = getMarkPropOrConfig('invalid', markDef, config);\n    if (invalid === 'hide' && valueRef && !isPathMark(mark)) {\n        // For non-path marks, we have to exclude invalid values (null and NaN) for scales with continuous domains.\n        // For path marks, we will use \"defined\" property and skip these values instead.\n        const test = allFieldsInvalidPredicate(model, { invalid: true, channels: SCALE_CHANNELS });\n        if (test) {\n            return {\n                [channel]: [\n                    // prepend the invalid case\n                    // TODO: support custom value\n                    { test, value: null },\n                    ...array(valueRef)\n                ]\n            };\n        }\n    }\n    return valueRef ? { [channel]: valueRef } : {};\n}\nfunction markDefProperties(mark, ignore) {\n    return VG_MARK_CONFIGS.reduce((m, prop) => {\n        if (!ALWAYS_IGNORE.has(prop) && mark[prop] !== undefined && ignore[prop] !== 'ignore') {\n            m[prop] = signalOrValueRef(mark[prop]);\n        }\n        return m;\n    }, {});\n}\nfunction allFieldsInvalidPredicate(model, { invalid = false, channels }) {\n    const filterIndex = channels.reduce((aggregator, channel) => {\n        const scaleComponent = model.getScaleComponent(channel);\n        if (scaleComponent) {\n            const scaleType = scaleComponent.get('type');\n            const field = model.vgField(channel, { expr: 'datum' });\n            // While discrete domain scales can handle invalid values, continuous scales can't.\n            if (field && hasContinuousDomain(scaleType)) {\n                aggregator[field] = true;\n            }\n        }\n        return aggregator;\n    }, {});\n    const fields = keys(filterIndex);\n    if (fields.length > 0) {\n        const op = invalid ? '||' : '&&';\n        return fields.map(field => fieldInvalidPredicate(field, invalid)).join(` ${op} `);\n    }\n    return undefined;\n}\n//# sourceMappingURL=base.js.map","import * as log from '../../../log';\nimport { contains } from '../../../util';\nimport { getMarkPropOrConfig, signalOrValueRef } from '../../common';\nimport { nonPosition } from './nonposition';\nexport function color(model, opt = { filled: undefined }) {\n    var _a, _b, _c, _d;\n    const { markDef, encoding, config } = model;\n    const { type: markType } = markDef;\n    // Allow filled to be overridden (for trail's \"filled\")\n    const filled = (_a = opt.filled) !== null && _a !== void 0 ? _a : getMarkPropOrConfig('filled', markDef, config);\n    const transparentIfNeeded = contains(['bar', 'point', 'circle', 'square', 'geoshape'], markType)\n        ? 'transparent'\n        : undefined;\n    const defaultFill = (_c = (_b = getMarkPropOrConfig(filled === true ? 'color' : undefined, markDef, config, { vgChannel: 'fill' })) !== null && _b !== void 0 ? _b : \n    // need to add this manually as getMarkConfig normally drops config.mark[channel] if vgChannel is specified\n    config.mark[filled === true && 'color']) !== null && _c !== void 0 ? _c : \n    // If there is no fill, always fill symbols, bar, geoshape\n    // with transparent fills https://github.com/vega/vega-lite/issues/1316\n    transparentIfNeeded;\n    const defaultStroke = (_d = getMarkPropOrConfig(filled === false ? 'color' : undefined, markDef, config, { vgChannel: 'stroke' })) !== null && _d !== void 0 ? _d : \n    // need to add this manually as getMarkConfig normally drops config.mark[channel] if vgChannel is specified\n    config.mark[filled === false && 'color'];\n    const colorVgChannel = filled ? 'fill' : 'stroke';\n    const fillStrokeMarkDefAndConfig = Object.assign(Object.assign({}, (defaultFill ? { fill: signalOrValueRef(defaultFill) } : {})), (defaultStroke ? { stroke: signalOrValueRef(defaultStroke) } : {}));\n    if (markDef.color && (filled ? markDef.fill : markDef.stroke)) {\n        log.warn(log.message.droppingColor('property', { fill: 'fill' in markDef, stroke: 'stroke' in markDef }));\n    }\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, fillStrokeMarkDefAndConfig), nonPosition('color', model, {\n        vgChannel: colorVgChannel,\n        defaultValue: filled ? defaultFill : defaultStroke\n    })), nonPosition('fill', model, {\n        // if there is encoding.fill, include default fill just in case we have conditional-only fill encoding\n        defaultValue: encoding.fill ? defaultFill : undefined\n    })), nonPosition('stroke', model, {\n        // if there is encoding.stroke, include default fill just in case we have conditional-only stroke encoding\n        defaultValue: encoding.stroke ? defaultStroke : undefined\n    }));\n}\n//# sourceMappingURL=color.js.map","import { array } from 'vega-util';\nimport { isConditionalDef, isConditionalParameter } from '../../../channeldef';\nimport { expression } from '../../predicate';\nimport { parseSelectionPredicate } from '../../selection/parse';\n/**\n * Return a mixin that includes a Vega production rule for a Vega-Lite conditional channel definition\n * or a simple mixin if channel def has no condition.\n */\nexport function wrapCondition(model, channelDef, vgChannel, refFn) {\n    const condition = isConditionalDef(channelDef) && channelDef.condition;\n    const valueRef = refFn(channelDef);\n    if (condition) {\n        const conditions = array(condition);\n        const vgConditions = conditions.map(c => {\n            const conditionValueRef = refFn(c);\n            if (isConditionalParameter(c)) {\n                const { param, empty } = c;\n                const test = parseSelectionPredicate(model, { param, empty });\n                return Object.assign({ test }, conditionValueRef);\n            }\n            else {\n                const test = expression(model, c.test); // FIXME: remove casting once TS is no longer dumb about it\n                return Object.assign({ test }, conditionValueRef);\n            }\n        });\n        return {\n            [vgChannel]: [...vgConditions, ...(valueRef !== undefined ? [valueRef] : [])]\n        };\n    }\n    else {\n        return valueRef !== undefined ? { [vgChannel]: valueRef } : {};\n    }\n}\n//# sourceMappingURL=conditional.js.map","import { POSITION_SCALE_CHANNELS } from '../../../channel';\nimport { hasContinuousDomain } from '../../../scale';\nimport { keys } from '../../../util';\nimport { getMarkPropOrConfig, signalOrValueRef } from '../../common';\nimport { fieldInvalidPredicate } from './valueref';\nexport function defined(model) {\n    const { config, markDef } = model;\n    const invalid = getMarkPropOrConfig('invalid', markDef, config);\n    if (invalid) {\n        const signal = allFieldsInvalidPredicate(model, { channels: POSITION_SCALE_CHANNELS });\n        if (signal) {\n            return { defined: { signal } };\n        }\n    }\n    return {};\n}\nfunction allFieldsInvalidPredicate(model, { invalid = false, channels }) {\n    const filterIndex = channels.reduce((aggregator, channel) => {\n        var _a;\n        const scaleComponent = model.getScaleComponent(channel);\n        if (scaleComponent) {\n            const scaleType = scaleComponent.get('type');\n            const field = model.vgField(channel, { expr: 'datum', binSuffix: ((_a = model.stack) === null || _a === void 0 ? void 0 : _a.impute) ? 'mid' : undefined });\n            // While discrete domain scales can handle invalid values, continuous scales can't.\n            if (field && hasContinuousDomain(scaleType)) {\n                aggregator[field] = true;\n            }\n        }\n        return aggregator;\n    }, {});\n    const fields = keys(filterIndex);\n    if (fields.length > 0) {\n        const op = invalid ? '||' : '&&';\n        return fields.map(field => fieldInvalidPredicate(field, invalid)).join(` ${op} `);\n    }\n    return undefined;\n}\nexport function valueIfDefined(prop, value) {\n    if (value !== undefined) {\n        return { [prop]: signalOrValueRef(value) };\n    }\n    return undefined;\n}\n//# sourceMappingURL=defined.js.map","import { getMarkPropOrConfig, signalOrValueRef } from '../../common';\nimport { wrapCondition } from './conditional';\nimport * as ref from './valueref';\n/**\n * Return encode for non-positional channels with scales. (Text doesn't have scale.)\n */\nexport function nonPosition(channel, model, opt = {}) {\n    const { markDef, encoding, config } = model;\n    const { vgChannel } = opt;\n    let { defaultRef, defaultValue } = opt;\n    if (defaultRef === undefined) {\n        // prettier-ignore\n        defaultValue !== null && defaultValue !== void 0 ? defaultValue : (defaultValue = getMarkPropOrConfig(channel, markDef, config, { vgChannel, ignoreVgConfig: true }));\n        if (defaultValue !== undefined) {\n            defaultRef = signalOrValueRef(defaultValue);\n        }\n    }\n    const channelDef = encoding[channel];\n    return wrapCondition(model, channelDef, vgChannel !== null && vgChannel !== void 0 ? vgChannel : channel, cDef => {\n        return ref.midPoint({\n            channel,\n            channelDef: cDef,\n            markDef,\n            config,\n            scaleName: model.scaleName(channel),\n            scale: model.getScaleComponent(channel),\n            stack: null,\n            defaultRef\n        });\n    });\n}\n//# sourceMappingURL=nonposition.js.map","import { signalOrValueRef } from '../../common';\nimport { midPoint } from './valueref';\nexport function positionOffset({ channel: baseChannel, markDef, encoding = {}, model, bandPosition }) {\n    const channel = `${baseChannel}Offset`; // Need to cast as the type can't be inferred automatically\n    const defaultValue = markDef[channel];\n    const channelDef = encoding[channel];\n    if ((channel === 'xOffset' || channel === 'yOffset') && channelDef) {\n        const ref = midPoint({\n            channel: channel,\n            channelDef,\n            markDef,\n            config: model === null || model === void 0 ? void 0 : model.config,\n            scaleName: model.scaleName(channel),\n            scale: model.getScaleComponent(channel),\n            stack: null,\n            defaultRef: signalOrValueRef(defaultValue),\n            bandPosition\n        });\n        return { offsetType: 'encoding', offset: ref };\n    }\n    const markDefOffsetValue = markDef[channel];\n    if (markDefOffsetValue) {\n        return { offsetType: 'visual', offset: markDefOffsetValue };\n    }\n    return {};\n}\n//# sourceMappingURL=offset.js.map","import { getVgPositionChannel } from '../../../channel';\nimport * as log from '../../../log';\nimport { isSignalRef } from '../../../vega.schema';\nimport { getMarkPropOrConfig } from '../../common';\nconst ALIGNED_X_CHANNEL = {\n    left: 'x',\n    center: 'xc',\n    right: 'x2'\n};\nconst BASELINED_Y_CHANNEL = {\n    top: 'y',\n    middle: 'yc',\n    bottom: 'y2'\n};\nexport function vgAlignedPositionChannel(channel, markDef, config, defaultAlign = 'middle') {\n    if (channel === 'radius' || channel === 'theta') {\n        return getVgPositionChannel(channel);\n    }\n    const alignChannel = channel === 'x' ? 'align' : 'baseline';\n    const align = getMarkPropOrConfig(alignChannel, markDef, config);\n    let alignExcludingSignal;\n    if (isSignalRef(align)) {\n        log.warn(log.message.rangeMarkAlignmentCannotBeExpression(alignChannel));\n        alignExcludingSignal = undefined;\n    }\n    else {\n        alignExcludingSignal = align;\n    }\n    if (channel === 'x') {\n        return ALIGNED_X_CHANNEL[alignExcludingSignal || (defaultAlign === 'top' ? 'left' : 'center')];\n    }\n    else {\n        return BASELINED_Y_CHANNEL[alignExcludingSignal || defaultAlign];\n    }\n}\n//# sourceMappingURL=position-align.js.map","import { getMainRangeChannel, getSecondaryRangeChannel, getSizeChannel, getVgPositionChannel, isXorY } from '../../../channel';\nimport { isFieldDef, isFieldOrDatumDef } from '../../../channeldef';\nimport { ScaleType } from '../../../scale';\nimport { contains } from '../../../util';\nimport { getMarkPropOrConfig } from '../../common';\nimport { positionOffset } from './offset';\nimport * as ref from './valueref';\n/**\n * Return encode for point (non-band) position channels.\n */\nexport function pointPosition(channel, model, { defaultPos, vgChannel }) {\n    const { encoding, markDef, config, stack } = model;\n    const channelDef = encoding[channel];\n    const channel2Def = encoding[getSecondaryRangeChannel(channel)];\n    const scaleName = model.scaleName(channel);\n    const scale = model.getScaleComponent(channel);\n    const { offset, offsetType } = positionOffset({\n        channel,\n        markDef,\n        encoding,\n        model,\n        bandPosition: 0.5\n    });\n    // Get default position or position from mark def\n    const defaultRef = pointPositionDefaultRef({\n        model,\n        defaultPos,\n        channel,\n        scaleName,\n        scale\n    });\n    const valueRef = !channelDef && isXorY(channel) && (encoding.latitude || encoding.longitude)\n        ? // use geopoint output if there are lat/long and there is no point position overriding lat/long.\n            { field: model.getName(channel) }\n        : positionRef({\n            channel,\n            channelDef,\n            channel2Def,\n            markDef,\n            config,\n            scaleName,\n            scale,\n            stack,\n            offset,\n            defaultRef,\n            bandPosition: offsetType === 'encoding' ? 0 : undefined\n        });\n    return valueRef ? { [vgChannel || channel]: valueRef } : undefined;\n}\n// TODO: we need to find a way to refactor these so that scaleName is a part of scale\n// but that's complicated. For now, this is a huge step moving forward.\n/**\n * @return Vega ValueRef for normal x- or y-position without projection\n */\nexport function positionRef(params) {\n    const { channel, channelDef, scaleName, stack, offset, markDef } = params;\n    // This isn't a part of midPoint because we use midPoint for non-position too\n    if (isFieldOrDatumDef(channelDef) && stack && channel === stack.fieldChannel) {\n        if (isFieldDef(channelDef)) {\n            let bandPosition = channelDef.bandPosition;\n            if (bandPosition === undefined && markDef.type === 'text' && (channel === 'radius' || channel === 'theta')) {\n                // theta and radius of text mark should use bandPosition = 0.5 by default\n                // so that labels for arc marks are centered automatically\n                bandPosition = 0.5;\n            }\n            if (bandPosition !== undefined) {\n                return ref.interpolatedSignalRef({\n                    scaleName,\n                    fieldOrDatumDef: channelDef,\n                    startSuffix: 'start',\n                    bandPosition,\n                    offset\n                });\n            }\n        }\n        // x or y use stack_end so that stacked line's point mark use stack_end too.\n        return ref.valueRefForFieldOrDatumDef(channelDef, scaleName, { suffix: 'end' }, { offset });\n    }\n    return ref.midPointRefWithPositionInvalidTest(params);\n}\nexport function pointPositionDefaultRef({ model, defaultPos, channel, scaleName, scale }) {\n    const { markDef, config } = model;\n    return () => {\n        const mainChannel = getMainRangeChannel(channel);\n        const vgChannel = getVgPositionChannel(channel);\n        const definedValueOrConfig = getMarkPropOrConfig(channel, markDef, config, { vgChannel });\n        if (definedValueOrConfig !== undefined) {\n            return ref.widthHeightValueOrSignalRef(channel, definedValueOrConfig);\n        }\n        switch (defaultPos) {\n            case 'zeroOrMin':\n            case 'zeroOrMax':\n                if (scaleName) {\n                    const scaleType = scale.get('type');\n                    if (contains([ScaleType.LOG, ScaleType.TIME, ScaleType.UTC], scaleType)) {\n                        // Log scales cannot have zero.\n                        // Zero in time scale is arbitrary, and does not affect ratio.\n                        // (Time is an interval level of measurement, not ratio).\n                        // See https://en.wikipedia.org/wiki/Level_of_measurement for more info.\n                    }\n                    else {\n                        if (scale.domainDefinitelyIncludesZero()) {\n                            return {\n                                scale: scaleName,\n                                value: 0\n                            };\n                        }\n                    }\n                }\n                if (defaultPos === 'zeroOrMin') {\n                    return mainChannel === 'y' ? { field: { group: 'height' } } : { value: 0 };\n                }\n                else {\n                    // zeroOrMax\n                    switch (mainChannel) {\n                        case 'radius':\n                            // max of radius is min(width, height) / 2\n                            return {\n                                signal: `min(${model.width.signal},${model.height.signal})/2`\n                            };\n                        case 'theta':\n                            return { signal: '2*PI' };\n                        case 'x':\n                            return { field: { group: 'width' } };\n                        case 'y':\n                            return { value: 0 };\n                    }\n                }\n                break;\n            case 'mid': {\n                const sizeRef = model[getSizeChannel(channel)];\n                return Object.assign(Object.assign({}, sizeRef), { mult: 0.5 });\n            }\n        }\n        // defaultPos === null\n        return undefined;\n    };\n}\n//# sourceMappingURL=position-point.js.map","import { getMainRangeChannel, getSecondaryRangeChannel, getSizeChannel, getVgPositionChannel } from '../../../channel';\nimport { isFieldOrDatumDef } from '../../../channeldef';\nimport * as log from '../../../log';\nimport { isRelativeBandSize } from '../../../mark';\nimport { getMarkStyleConfig } from '../../common';\nimport { positionOffset } from './offset';\nimport { vgAlignedPositionChannel } from './position-align';\nimport { pointPosition, pointPositionDefaultRef } from './position-point';\nimport * as ref from './valueref';\n/**\n * Utility for area/rule position, which can be either point or range.\n * (One of the axes should be point and the other should be range.)\n */\nexport function pointOrRangePosition(channel, model, { defaultPos, defaultPos2, range }) {\n    if (range) {\n        return rangePosition(channel, model, { defaultPos, defaultPos2 });\n    }\n    return pointPosition(channel, model, { defaultPos });\n}\nexport function rangePosition(channel, model, { defaultPos, defaultPos2 }) {\n    const { markDef, config } = model;\n    const channel2 = getSecondaryRangeChannel(channel);\n    const sizeChannel = getSizeChannel(channel);\n    const pos2Mixins = pointPosition2OrSize(model, defaultPos2, channel2);\n    const vgChannel = pos2Mixins[sizeChannel]\n        ? // If there is width/height, we need to position the marks based on the alignment.\n            vgAlignedPositionChannel(channel, markDef, config)\n        : // Otherwise, make sure to apply to the right Vg Channel (for arc mark)\n            getVgPositionChannel(channel);\n    return Object.assign(Object.assign({}, pointPosition(channel, model, { defaultPos, vgChannel })), pos2Mixins);\n}\n/**\n * Return encode for x2, y2.\n * If channel is not specified, return one channel based on orientation.\n */\nfunction pointPosition2OrSize(model, defaultPos, channel) {\n    const { encoding, mark, markDef, stack, config } = model;\n    const baseChannel = getMainRangeChannel(channel);\n    const sizeChannel = getSizeChannel(channel);\n    const vgChannel = getVgPositionChannel(channel);\n    const channelDef = encoding[baseChannel];\n    const scaleName = model.scaleName(baseChannel);\n    const scale = model.getScaleComponent(baseChannel);\n    const { offset } = channel in encoding || channel in markDef\n        ? positionOffset({ channel, markDef, encoding, model })\n        : positionOffset({ channel: baseChannel, markDef, encoding, model });\n    if (!channelDef && (channel === 'x2' || channel === 'y2') && (encoding.latitude || encoding.longitude)) {\n        const vgSizeChannel = getSizeChannel(channel);\n        const size = model.markDef[vgSizeChannel];\n        if (size != null) {\n            return {\n                [vgSizeChannel]: { value: size }\n            };\n        }\n        else {\n            return {\n                [vgChannel]: { field: model.getName(channel) }\n            };\n        }\n    }\n    const valueRef = position2Ref({\n        channel,\n        channelDef,\n        channel2Def: encoding[channel],\n        markDef,\n        config,\n        scaleName,\n        scale,\n        stack,\n        offset,\n        defaultRef: undefined\n    });\n    if (valueRef !== undefined) {\n        return { [vgChannel]: valueRef };\n    }\n    // TODO: check width/height encoding here once we add them\n    // no x2/y2 encoding, then try to read x2/y2 or width/height based on precedence:\n    // markDef > config.style > mark-specific config (config[mark]) > general mark config (config.mark)\n    return (position2orSize(channel, markDef) ||\n        position2orSize(channel, {\n            [channel]: getMarkStyleConfig(channel, markDef, config.style),\n            [sizeChannel]: getMarkStyleConfig(sizeChannel, markDef, config.style)\n        }) ||\n        position2orSize(channel, config[mark]) ||\n        position2orSize(channel, config.mark) || {\n        [vgChannel]: pointPositionDefaultRef({\n            model,\n            defaultPos,\n            channel,\n            scaleName,\n            scale\n        })()\n    });\n}\nexport function position2Ref({ channel, channelDef, channel2Def, markDef, config, scaleName, scale, stack, offset, defaultRef }) {\n    if (isFieldOrDatumDef(channelDef) &&\n        stack &&\n        // If fieldChannel is X and channel is X2 (or Y and Y2)\n        channel.charAt(0) === stack.fieldChannel.charAt(0)) {\n        return ref.valueRefForFieldOrDatumDef(channelDef, scaleName, { suffix: 'start' }, { offset });\n    }\n    return ref.midPointRefWithPositionInvalidTest({\n        channel,\n        channelDef: channel2Def,\n        scaleName,\n        scale,\n        stack,\n        markDef,\n        config,\n        offset,\n        defaultRef\n    });\n}\nfunction position2orSize(channel, markDef) {\n    const sizeChannel = getSizeChannel(channel);\n    const vgChannel = getVgPositionChannel(channel);\n    if (markDef[vgChannel] !== undefined) {\n        return { [vgChannel]: ref.widthHeightValueOrSignalRef(channel, markDef[vgChannel]) };\n    }\n    else if (markDef[channel] !== undefined) {\n        return { [vgChannel]: ref.widthHeightValueOrSignalRef(channel, markDef[channel]) };\n    }\n    else if (markDef[sizeChannel]) {\n        const dimensionSize = markDef[sizeChannel];\n        if (isRelativeBandSize(dimensionSize)) {\n            log.warn(log.message.relativeBandSizeNotSupported(sizeChannel));\n        }\n        else {\n            return { [sizeChannel]: ref.widthHeightValueOrSignalRef(channel, dimensionSize) };\n        }\n    }\n    return undefined;\n}\n//# sourceMappingURL=position-range.js.map","import { isArray, isNumber } from 'vega-util';\nimport { isBinned, isBinning, isBinParams } from '../../../bin';\nimport { getOffsetChannel, getSecondaryRangeChannel, getSizeChannel, getVgPositionChannel, isPolarPositionChannel, isXorY } from '../../../channel';\nimport { getBandSize, isFieldDef, isFieldOrDatumDef, vgField } from '../../../channeldef';\nimport { getViewConfigDiscreteStep } from '../../../config';\nimport * as log from '../../../log';\nimport { isRelativeBandSize } from '../../../mark';\nimport { hasDiscreteDomain } from '../../../scale';\nimport { isSignalRef, isVgRangeStep } from '../../../vega.schema';\nimport { getMarkPropOrConfig, signalOrStringValue, signalOrValueRef } from '../../common';\nimport { nonPosition } from './nonposition';\nimport { positionOffset } from './offset';\nimport { vgAlignedPositionChannel } from './position-align';\nimport { pointPositionDefaultRef } from './position-point';\nimport { rangePosition } from './position-range';\nimport * as ref from './valueref';\nexport function rectPosition(model, channel) {\n    var _a, _b;\n    const { config, encoding, markDef } = model;\n    const mark = markDef.type;\n    const channel2 = getSecondaryRangeChannel(channel);\n    const sizeChannel = getSizeChannel(channel);\n    const channelDef = encoding[channel];\n    const channelDef2 = encoding[channel2];\n    const scale = model.getScaleComponent(channel);\n    const scaleType = scale ? scale.get('type') : undefined;\n    const orient = markDef.orient;\n    const hasSizeDef = (_b = (_a = encoding[sizeChannel]) !== null && _a !== void 0 ? _a : encoding.size) !== null && _b !== void 0 ? _b : getMarkPropOrConfig('size', markDef, config, { vgChannel: sizeChannel });\n    const isBarBand = mark === 'bar' && (channel === 'x' ? orient === 'vertical' : orient === 'horizontal');\n    // x, x2, and width -- we must specify two of these in all conditions\n    if (isFieldDef(channelDef) &&\n        (isBinning(channelDef.bin) || isBinned(channelDef.bin) || (channelDef.timeUnit && !channelDef2)) &&\n        !(hasSizeDef && !isRelativeBandSize(hasSizeDef)) &&\n        !hasDiscreteDomain(scaleType)) {\n        return rectBinPosition({\n            fieldDef: channelDef,\n            fieldDef2: channelDef2,\n            channel,\n            model\n        });\n    }\n    else if (((isFieldOrDatumDef(channelDef) && hasDiscreteDomain(scaleType)) || isBarBand) && !channelDef2) {\n        return positionAndSize(channelDef, channel, model);\n    }\n    else {\n        return rangePosition(channel, model, { defaultPos: 'zeroOrMax', defaultPos2: 'zeroOrMin' });\n    }\n}\nfunction defaultSizeRef(sizeChannel, scaleName, scale, config, bandSize) {\n    if (isRelativeBandSize(bandSize)) {\n        if (scale) {\n            const scaleType = scale.get('type');\n            if (scaleType === 'band') {\n                let bandWidth = `bandwidth('${scaleName}')`;\n                if (bandSize.band !== 1) {\n                    bandWidth = `${bandSize.band} * ${bandWidth}`;\n                }\n                // TODO(#8351): make 0.25 here configurable\n                return { signal: `max(0.25, ${bandWidth})` };\n            }\n            else if (bandSize.band !== 1) {\n                log.warn(log.message.cannotUseRelativeBandSizeWithNonBandScale(scaleType));\n                bandSize = undefined;\n            }\n        }\n        else {\n            return {\n                mult: bandSize.band,\n                field: { group: sizeChannel }\n            };\n        }\n    }\n    else if (isSignalRef(bandSize)) {\n        return bandSize;\n    }\n    else if (bandSize) {\n        return { value: bandSize };\n    }\n    // no valid band size\n    if (scale) {\n        const scaleRange = scale.get('range');\n        if (isVgRangeStep(scaleRange) && isNumber(scaleRange.step)) {\n            return { value: scaleRange.step - 2 };\n        }\n    }\n    const defaultStep = getViewConfigDiscreteStep(config.view, sizeChannel);\n    return { value: defaultStep - 2 };\n}\n/**\n * Output position encoding and its size encoding for continuous, point, and band scales.\n */\nfunction positionAndSize(fieldDef, channel, model) {\n    const { markDef, encoding, config, stack } = model;\n    const orient = markDef.orient;\n    const scaleName = model.scaleName(channel);\n    const scale = model.getScaleComponent(channel);\n    const vgSizeChannel = getSizeChannel(channel);\n    const channel2 = getSecondaryRangeChannel(channel);\n    const offsetScaleChannel = getOffsetChannel(channel);\n    const offsetScaleName = model.scaleName(offsetScaleChannel);\n    // use \"size\" channel for bars, if there is orient and the channel matches the right orientation\n    const useVlSizeChannel = (orient === 'horizontal' && channel === 'y') || (orient === 'vertical' && channel === 'x');\n    // Use size encoding / mark property / config if it exists\n    let sizeMixins;\n    if (encoding.size || markDef.size) {\n        if (useVlSizeChannel) {\n            sizeMixins = nonPosition('size', model, {\n                vgChannel: vgSizeChannel,\n                defaultRef: signalOrValueRef(markDef.size)\n            });\n        }\n        else {\n            log.warn(log.message.cannotApplySizeToNonOrientedMark(markDef.type));\n        }\n    }\n    const hasSizeFromMarkOrEncoding = !!sizeMixins;\n    // Otherwise, apply default value\n    const bandSize = getBandSize({ channel, fieldDef, markDef, config, scaleType: scale === null || scale === void 0 ? void 0 : scale.get('type'), useVlSizeChannel });\n    sizeMixins = sizeMixins || {\n        [vgSizeChannel]: defaultSizeRef(vgSizeChannel, offsetScaleName || scaleName, scale, config, bandSize)\n    };\n    /*\n      Band scales with size value and all point scales, use xc/yc + band=0.5\n  \n      Otherwise (band scales that has size based on a band ref), use x/y with position band = (1 - size_band) / 2.\n      In this case, size_band is the band specified in the x/y-encoding.\n      By default band is 1, so `(1 - band) / 2` = 0.\n      If band is 0.6, the the x/y position in such case should be `(1 - band) / 2` = 0.2\n     */\n    const defaultBandAlign = (scale === null || scale === void 0 ? void 0 : scale.get('type')) === 'band' && isRelativeBandSize(bandSize) && !hasSizeFromMarkOrEncoding ? 'top' : 'middle';\n    const vgChannel = vgAlignedPositionChannel(channel, markDef, config, defaultBandAlign);\n    const center = vgChannel === 'xc' || vgChannel === 'yc';\n    const { offset, offsetType } = positionOffset({ channel, markDef, encoding, model, bandPosition: center ? 0.5 : 0 });\n    const posRef = ref.midPointRefWithPositionInvalidTest({\n        channel,\n        channelDef: fieldDef,\n        markDef,\n        config,\n        scaleName,\n        scale,\n        stack,\n        offset,\n        defaultRef: pointPositionDefaultRef({ model, defaultPos: 'mid', channel, scaleName, scale }),\n        bandPosition: center\n            ? offsetType === 'encoding'\n                ? 0\n                : 0.5\n            : isSignalRef(bandSize)\n                ? { signal: `(1-${bandSize})/2` }\n                : isRelativeBandSize(bandSize)\n                    ? (1 - bandSize.band) / 2\n                    : 0\n    });\n    if (vgSizeChannel) {\n        return Object.assign({ [vgChannel]: posRef }, sizeMixins);\n    }\n    else {\n        // otherwise, we must simulate size by setting position2 = position + size\n        // (for theta/radius since Vega doesn't have thetaWidth/radiusWidth)\n        const vgChannel2 = getVgPositionChannel(channel2);\n        const sizeRef = sizeMixins[vgSizeChannel];\n        const sizeOffset = offset ? Object.assign(Object.assign({}, sizeRef), { offset }) : sizeRef;\n        return {\n            [vgChannel]: posRef,\n            // posRef might be an array that wraps position invalid test\n            [vgChannel2]: isArray(posRef)\n                ? [posRef[0], Object.assign(Object.assign({}, posRef[1]), { offset: sizeOffset })]\n                : Object.assign(Object.assign({}, posRef), { offset: sizeOffset })\n        };\n    }\n}\nfunction getBinSpacing(channel, spacing, reverse, translate, offset) {\n    if (isPolarPositionChannel(channel)) {\n        return 0;\n    }\n    const spacingOffset = channel === 'x' || channel === 'y2' ? -spacing / 2 : spacing / 2;\n    if (isSignalRef(reverse) || isSignalRef(offset) || isSignalRef(translate)) {\n        const reverseExpr = signalOrStringValue(reverse);\n        const offsetExpr = signalOrStringValue(offset);\n        const translateExpr = signalOrStringValue(translate);\n        const t = translateExpr ? `${translateExpr} + ` : '';\n        const r = reverseExpr ? `(${reverseExpr} ? -1 : 1) * ` : '';\n        const o = offsetExpr ? `(${offsetExpr} + ${spacingOffset})` : spacingOffset;\n        return {\n            signal: t + r + o\n        };\n    }\n    else {\n        offset = offset || 0;\n        return translate + (reverse ? -offset - spacingOffset : +offset + spacingOffset);\n    }\n}\nfunction rectBinPosition({ fieldDef, fieldDef2, channel, model }) {\n    var _a, _b, _c;\n    const { config, markDef, encoding } = model;\n    const scale = model.getScaleComponent(channel);\n    const scaleName = model.scaleName(channel);\n    const scaleType = scale ? scale.get('type') : undefined;\n    const reverse = scale.get('reverse');\n    const bandSize = getBandSize({ channel, fieldDef, markDef, config, scaleType });\n    const axis = (_a = model.component.axes[channel]) === null || _a === void 0 ? void 0 : _a[0];\n    const axisTranslate = (_b = axis === null || axis === void 0 ? void 0 : axis.get('translate')) !== null && _b !== void 0 ? _b : 0.5; // vega default is 0.5\n    const spacing = isXorY(channel) ? (_c = getMarkPropOrConfig('binSpacing', markDef, config)) !== null && _c !== void 0 ? _c : 0 : 0;\n    const channel2 = getSecondaryRangeChannel(channel);\n    const vgChannel = getVgPositionChannel(channel);\n    const vgChannel2 = getVgPositionChannel(channel2);\n    const { offset } = positionOffset({ channel, markDef, encoding, model, bandPosition: 0 });\n    const bandPosition = isSignalRef(bandSize)\n        ? { signal: `(1-${bandSize.signal})/2` }\n        : isRelativeBandSize(bandSize)\n            ? (1 - bandSize.band) / 2\n            : 0.5;\n    if (isBinning(fieldDef.bin) || fieldDef.timeUnit) {\n        return {\n            [vgChannel2]: rectBinRef({\n                fieldDef,\n                scaleName,\n                bandPosition,\n                offset: getBinSpacing(channel2, spacing, reverse, axisTranslate, offset)\n            }),\n            [vgChannel]: rectBinRef({\n                fieldDef,\n                scaleName,\n                bandPosition: isSignalRef(bandPosition) ? { signal: `1-${bandPosition.signal}` } : 1 - bandPosition,\n                offset: getBinSpacing(channel, spacing, reverse, axisTranslate, offset)\n            })\n        };\n    }\n    else if (isBinned(fieldDef.bin)) {\n        const startRef = ref.valueRefForFieldOrDatumDef(fieldDef, scaleName, {}, { offset: getBinSpacing(channel2, spacing, reverse, axisTranslate, offset) });\n        if (isFieldDef(fieldDef2)) {\n            return {\n                [vgChannel2]: startRef,\n                [vgChannel]: ref.valueRefForFieldOrDatumDef(fieldDef2, scaleName, {}, { offset: getBinSpacing(channel, spacing, reverse, axisTranslate, offset) })\n            };\n        }\n        else if (isBinParams(fieldDef.bin) && fieldDef.bin.step) {\n            return {\n                [vgChannel2]: startRef,\n                [vgChannel]: {\n                    signal: `scale(\"${scaleName}\", ${vgField(fieldDef, { expr: 'datum' })} + ${fieldDef.bin.step})`,\n                    offset: getBinSpacing(channel, spacing, reverse, axisTranslate, offset)\n                }\n            };\n        }\n    }\n    log.warn(log.message.channelRequiredForBinned(channel2));\n    return undefined;\n}\n/**\n * Value Ref for binned fields\n */\nexport function rectBinRef({ fieldDef, scaleName, bandPosition, offset }) {\n    return ref.interpolatedSignalRef({\n        scaleName,\n        fieldOrDatumDef: fieldDef,\n        bandPosition,\n        offset\n    });\n}\n//# sourceMappingURL=position-rect.js.map","import { getFormatMixins, isFieldOrDatumDef, isValueDef } from '../../../channeldef';\nimport { signalOrValueRef } from '../../common';\nimport { formatSignalRef } from '../../format';\nimport { wrapCondition } from './conditional';\nexport function text(model, channel = 'text') {\n    const channelDef = model.encoding[channel];\n    return wrapCondition(model, channelDef, channel, cDef => textRef(cDef, model.config));\n}\nexport function textRef(channelDef, config, expr = 'datum') {\n    // text\n    if (channelDef) {\n        if (isValueDef(channelDef)) {\n            return signalOrValueRef(channelDef.value);\n        }\n        if (isFieldOrDatumDef(channelDef)) {\n            const { format, formatType } = getFormatMixins(channelDef);\n            return formatSignalRef({ fieldOrDatumDef: channelDef, format, formatType, expr, config });\n        }\n    }\n    return undefined;\n}\n//# sourceMappingURL=text.js.map","import { array, isArray, isObject, isString } from 'vega-util';\nimport { isBinned } from '../../../bin';\nimport { getMainRangeChannel, isXorY, THETA, RADIUS } from '../../../channel';\nimport { defaultTitle, getFieldDef, getFormatMixins, hasConditionalFieldDef, isFieldDef, isTypedFieldDef, vgField } from '../../../channeldef';\nimport { forEach } from '../../../encoding';\nimport { entries } from '../../../util';\nimport { isSignalRef } from '../../../vega.schema';\nimport { getMarkPropOrConfig } from '../../common';\nimport { binFormatExpression, formatSignalRef } from '../../format';\nimport { wrapCondition } from './conditional';\nimport { textRef } from './text';\nexport function tooltip(model, opt = {}) {\n    const { encoding, markDef, config, stack } = model;\n    const channelDef = encoding.tooltip;\n    if (isArray(channelDef)) {\n        return { tooltip: tooltipRefForEncoding({ tooltip: channelDef }, stack, config, opt) };\n    }\n    else {\n        const datum = opt.reactiveGeom ? 'datum.datum' : 'datum';\n        return wrapCondition(model, channelDef, 'tooltip', cDef => {\n            // use valueRef based on channelDef first\n            const tooltipRefFromChannelDef = textRef(cDef, config, datum);\n            if (tooltipRefFromChannelDef) {\n                return tooltipRefFromChannelDef;\n            }\n            if (cDef === null) {\n                // Allow using encoding.tooltip = null to disable tooltip\n                return undefined;\n            }\n            let markTooltip = getMarkPropOrConfig('tooltip', markDef, config);\n            if (markTooltip === true) {\n                markTooltip = { content: 'encoding' };\n            }\n            if (isString(markTooltip)) {\n                return { value: markTooltip };\n            }\n            else if (isObject(markTooltip)) {\n                // `tooltip` is `{fields: 'encodings' | 'fields'}`\n                if (isSignalRef(markTooltip)) {\n                    return markTooltip;\n                }\n                else if (markTooltip.content === 'encoding') {\n                    return tooltipRefForEncoding(encoding, stack, config, opt);\n                }\n                else {\n                    return { signal: datum };\n                }\n            }\n            return undefined;\n        });\n    }\n}\nexport function tooltipData(encoding, stack, config, { reactiveGeom } = {}) {\n    const toSkip = {};\n    const expr = reactiveGeom ? 'datum.datum' : 'datum';\n    const tuples = [];\n    function add(fDef, channel) {\n        const mainChannel = getMainRangeChannel(channel);\n        const fieldDef = isTypedFieldDef(fDef)\n            ? fDef\n            : Object.assign(Object.assign({}, fDef), { type: encoding[mainChannel].type // for secondary field def, copy type from main channel\n             });\n        const title = fieldDef.title || defaultTitle(fieldDef, config);\n        const key = array(title).join(', ');\n        let value;\n        if (isXorY(channel)) {\n            const channel2 = channel === 'x' ? 'x2' : 'y2';\n            const fieldDef2 = getFieldDef(encoding[channel2]);\n            if (isBinned(fieldDef.bin) && fieldDef2) {\n                const startField = vgField(fieldDef, { expr });\n                const endField = vgField(fieldDef2, { expr });\n                const { format, formatType } = getFormatMixins(fieldDef);\n                value = binFormatExpression(startField, endField, format, formatType, config);\n                toSkip[channel2] = true;\n            }\n        }\n        if ((isXorY(channel) || channel === THETA || channel === RADIUS) &&\n            stack &&\n            stack.fieldChannel === channel &&\n            stack.offset === 'normalize') {\n            const { format, formatType } = getFormatMixins(fieldDef);\n            value = formatSignalRef({\n                fieldOrDatumDef: fieldDef,\n                format,\n                formatType,\n                expr,\n                config,\n                normalizeStack: true\n            }).signal;\n        }\n        value !== null && value !== void 0 ? value : (value = textRef(fieldDef, config, expr).signal);\n        tuples.push({ channel, key, value });\n    }\n    forEach(encoding, (channelDef, channel) => {\n        if (isFieldDef(channelDef)) {\n            add(channelDef, channel);\n        }\n        else if (hasConditionalFieldDef(channelDef)) {\n            add(channelDef.condition, channel);\n        }\n    });\n    const out = {};\n    for (const { channel, key, value } of tuples) {\n        if (!toSkip[channel] && !out[key]) {\n            out[key] = value;\n        }\n    }\n    return out;\n}\nexport function tooltipRefForEncoding(encoding, stack, config, { reactiveGeom } = {}) {\n    const data = tooltipData(encoding, stack, config, { reactiveGeom });\n    const keyValues = entries(data).map(([key, value]) => `\"${key}\": ${value}`);\n    return keyValues.length > 0 ? { signal: `{${keyValues.join(', ')}}` } : undefined;\n}\n//# sourceMappingURL=tooltip.js.map","import { isFunction, isString } from 'vega-util';\nimport { isCountingAggregateOp } from '../../../aggregate';\nimport { isBinned, isBinning } from '../../../bin';\nimport { getMainRangeChannel, X, X2, Y2 } from '../../../channel';\nimport { binRequiresRange, getBandPosition, isDatumDef, isFieldDef, isFieldOrDatumDef, isTypedFieldDef, isValueDef, vgField } from '../../../channeldef';\nimport { dateTimeToExpr, isDateTime } from '../../../datetime';\nimport { isExprRef } from '../../../expr';\nimport * as log from '../../../log';\nimport { isPathMark } from '../../../mark';\nimport { fieldValidPredicate } from '../../../predicate';\nimport { hasDiscreteDomain, isContinuousToContinuous } from '../../../scale';\nimport { TEMPORAL } from '../../../type';\nimport { contains, stringify } from '../../../util';\nimport { isSignalRef } from '../../../vega.schema';\nimport { getMarkPropOrConfig, signalOrValueRef } from '../../common';\nexport function midPointRefWithPositionInvalidTest(params) {\n    const { channel, channelDef, markDef, scale, config } = params;\n    const ref = midPoint(params);\n    // Wrap to check if the positional value is invalid, if so, plot the point on the min value\n    if (\n    // Only this for field def without counting aggregate (as count wouldn't be null)\n    isFieldDef(channelDef) &&\n        !isCountingAggregateOp(channelDef.aggregate) &&\n        // and only for continuous scale\n        scale &&\n        isContinuousToContinuous(scale.get('type'))) {\n        return wrapPositionInvalidTest({\n            fieldDef: channelDef,\n            channel,\n            markDef,\n            ref,\n            config\n        });\n    }\n    return ref;\n}\nexport function wrapPositionInvalidTest({ fieldDef, channel, markDef, ref, config }) {\n    if (isPathMark(markDef.type)) {\n        // path mark already use defined to skip points, no need to do it here.\n        return ref;\n    }\n    const invalid = getMarkPropOrConfig('invalid', markDef, config);\n    if (invalid === null) {\n        // if there is no invalid filter, don't do the invalid test\n        return [fieldInvalidTestValueRef(fieldDef, channel), ref];\n    }\n    return ref;\n}\nexport function fieldInvalidTestValueRef(fieldDef, channel) {\n    const test = fieldInvalidPredicate(fieldDef, true);\n    const mainChannel = getMainRangeChannel(channel); // we can cast here as the output can't be other things.\n    const zeroValueRef = mainChannel === 'y'\n        ? { field: { group: 'height' } }\n        : // x / angle / radius can all use 0\n            { value: 0 };\n    return Object.assign({ test }, zeroValueRef);\n}\nexport function fieldInvalidPredicate(field, invalid = true) {\n    return fieldValidPredicate(isString(field) ? field : vgField(field, { expr: 'datum' }), !invalid);\n}\nexport function datumDefToExpr(datumDef) {\n    const { datum } = datumDef;\n    if (isDateTime(datum)) {\n        return dateTimeToExpr(datum);\n    }\n    return `${stringify(datum)}`;\n}\nexport function valueRefForFieldOrDatumDef(fieldDef, scaleName, opt, encode) {\n    const ref = {};\n    if (scaleName) {\n        ref.scale = scaleName;\n    }\n    if (isDatumDef(fieldDef)) {\n        const { datum } = fieldDef;\n        if (isDateTime(datum)) {\n            ref.signal = dateTimeToExpr(datum);\n        }\n        else if (isSignalRef(datum)) {\n            ref.signal = datum.signal;\n        }\n        else if (isExprRef(datum)) {\n            ref.signal = datum.expr;\n        }\n        else {\n            ref.value = datum;\n        }\n    }\n    else {\n        ref.field = vgField(fieldDef, opt);\n    }\n    if (encode) {\n        const { offset, band } = encode;\n        if (offset) {\n            ref.offset = offset;\n        }\n        if (band) {\n            ref.band = band;\n        }\n    }\n    return ref;\n}\n/**\n * Signal that returns the middle of a bin from start and end field. Should only be used with x and y.\n */\nexport function interpolatedSignalRef({ scaleName, fieldOrDatumDef, fieldOrDatumDef2, offset, startSuffix, bandPosition = 0.5 }) {\n    const expr = 0 < bandPosition && bandPosition < 1 ? 'datum' : undefined;\n    const start = vgField(fieldOrDatumDef, { expr, suffix: startSuffix });\n    const end = fieldOrDatumDef2 !== undefined\n        ? vgField(fieldOrDatumDef2, { expr })\n        : vgField(fieldOrDatumDef, { suffix: 'end', expr });\n    const ref = {};\n    if (bandPosition === 0 || bandPosition === 1) {\n        ref.scale = scaleName;\n        const val = bandPosition === 0 ? start : end;\n        ref.field = val;\n    }\n    else {\n        const datum = isSignalRef(bandPosition)\n            ? `${bandPosition.signal} * ${start} + (1-${bandPosition.signal}) * ${end}`\n            : `${bandPosition} * ${start} + ${1 - bandPosition} * ${end}`;\n        ref.signal = `scale(\"${scaleName}\", ${datum})`;\n    }\n    if (offset) {\n        ref.offset = offset;\n    }\n    return ref;\n}\n/**\n * @returns {VgValueRef} Value Ref for xc / yc or mid point for other channels.\n */\nexport function midPoint({ channel, channelDef, channel2Def, markDef, config, scaleName, scale, stack, offset, defaultRef, bandPosition }) {\n    var _a;\n    // TODO: datum support\n    if (channelDef) {\n        /* istanbul ignore else */\n        if (isFieldOrDatumDef(channelDef)) {\n            const scaleType = scale === null || scale === void 0 ? void 0 : scale.get('type');\n            if (isTypedFieldDef(channelDef)) {\n                bandPosition !== null && bandPosition !== void 0 ? bandPosition : (bandPosition = getBandPosition({\n                    fieldDef: channelDef,\n                    fieldDef2: channel2Def,\n                    markDef,\n                    config\n                }));\n                const { bin, timeUnit, type } = channelDef;\n                if (isBinning(bin) || (bandPosition && timeUnit && type === TEMPORAL)) {\n                    // Use middle only for x an y to place marks in the center between start and end of the bin range.\n                    // We do not use the mid point for other channels (e.g. size) so that properties of legends and marks match.\n                    if (stack === null || stack === void 0 ? void 0 : stack.impute) {\n                        // For stack, we computed bin_mid so we can impute.\n                        return valueRefForFieldOrDatumDef(channelDef, scaleName, { binSuffix: 'mid' }, { offset });\n                    }\n                    if (bandPosition && !hasDiscreteDomain(scaleType)) {\n                        // if band = 0, no need to call interpolation\n                        // For non-stack, we can just calculate bin mid on the fly using signal.\n                        return interpolatedSignalRef({ scaleName, fieldOrDatumDef: channelDef, bandPosition, offset });\n                    }\n                    return valueRefForFieldOrDatumDef(channelDef, scaleName, binRequiresRange(channelDef, channel) ? { binSuffix: 'range' } : {}, {\n                        offset\n                    });\n                }\n                else if (isBinned(bin)) {\n                    if (isFieldDef(channel2Def)) {\n                        return interpolatedSignalRef({\n                            scaleName,\n                            fieldOrDatumDef: channelDef,\n                            fieldOrDatumDef2: channel2Def,\n                            bandPosition,\n                            offset\n                        });\n                    }\n                    else {\n                        const channel2 = channel === X ? X2 : Y2;\n                        log.warn(log.message.channelRequiredForBinned(channel2));\n                    }\n                }\n            }\n            return valueRefForFieldOrDatumDef(channelDef, scaleName, hasDiscreteDomain(scaleType) ? { binSuffix: 'range' } : {}, // no need for bin suffix if there is no scale\n            {\n                offset,\n                // For band, to get mid point, need to offset by half of the band\n                band: scaleType === 'band' ? (_a = bandPosition !== null && bandPosition !== void 0 ? bandPosition : channelDef.bandPosition) !== null && _a !== void 0 ? _a : 0.5 : undefined\n            });\n        }\n        else if (isValueDef(channelDef)) {\n            const value = channelDef.value;\n            const offsetMixins = offset ? { offset } : {};\n            return Object.assign(Object.assign({}, widthHeightValueOrSignalRef(channel, value)), offsetMixins);\n        }\n        // If channelDef is neither field def or value def, it's a condition-only def.\n        // In such case, we will use default ref.\n    }\n    if (isFunction(defaultRef)) {\n        defaultRef = defaultRef();\n    }\n    if (defaultRef) {\n        // for non-position, ref could be undefined.\n        return Object.assign(Object.assign({}, defaultRef), (offset ? { offset } : {}));\n    }\n    return defaultRef;\n}\n/**\n * Convert special \"width\" and \"height\" values in Vega-Lite into Vega value ref.\n */\nexport function widthHeightValueOrSignalRef(channel, value) {\n    if (contains(['x', 'x2'], channel) && value === 'width') {\n        return { field: { group: 'width' } };\n    }\n    else if (contains(['y', 'y2'], channel) && value === 'height') {\n        return { field: { group: 'height' } };\n    }\n    return signalOrValueRef(value);\n}\n//# sourceMappingURL=valueref.js.map","import { isValueDef } from '../../../channeldef';\nimport { isPathMark } from '../../../mark';\nimport { signalOrValueRef } from '../../common';\nimport { wrapCondition } from './conditional';\nexport function zindex(model) {\n    const { encoding, mark } = model;\n    const order = encoding.order;\n    if (!isPathMark(mark) && isValueDef(order)) {\n        return wrapCondition(model, order, 'zindex', cd => signalOrValueRef(cd.value));\n    }\n    return {};\n}\n//# sourceMappingURL=zindex.js.map","import { isFieldDef, vgField } from '../../channeldef';\nimport { GEOJSON } from '../../type';\nimport * as encode from './encode';\nexport const geoshape = {\n    vgMark: 'shape',\n    encodeEntry: (model) => {\n        return Object.assign({}, encode.baseEncodeEntry(model, {\n            align: 'ignore',\n            baseline: 'ignore',\n            color: 'include',\n            size: 'ignore',\n            orient: 'ignore',\n            theta: 'ignore'\n        }));\n    },\n    postEncodingTransform: (model) => {\n        const { encoding } = model;\n        const shapeDef = encoding.shape;\n        const transform = Object.assign({ type: 'geoshape', projection: model.projectionName() }, (shapeDef && isFieldDef(shapeDef) && shapeDef.type === GEOJSON\n            ? { field: vgField(shapeDef, { expr: 'datum' }) }\n            : {}));\n        return [transform];\n    }\n};\n//# sourceMappingURL=geoshape.js.map","import * as encode from './encode';\nexport const image = {\n    vgMark: 'image',\n    encodeEntry: (model) => {\n        return Object.assign(Object.assign(Object.assign(Object.assign({}, encode.baseEncodeEntry(model, {\n            align: 'ignore',\n            baseline: 'ignore',\n            color: 'ignore',\n            orient: 'ignore',\n            size: 'ignore',\n            theta: 'ignore'\n        })), encode.rectPosition(model, 'x')), encode.rectPosition(model, 'y')), encode.text(model, 'url'));\n    }\n};\n//# sourceMappingURL=image.js.map","import { isBinned, isBinning } from '../../bin';\nimport { isContinuousFieldOrDatumDef, isFieldDef, isNumericDataDef } from '../../channeldef';\nimport { isAggregate } from '../../encoding';\nimport { replaceExprRef } from '../../expr';\nimport * as log from '../../log';\nimport { AREA, BAR, BAR_CORNER_RADIUS_INDEX as BAR_CORNER_RADIUS_END_INDEX, CIRCLE, IMAGE, LINE, POINT, RECT, RULE, SQUARE, TEXT, TICK } from '../../mark';\nimport { QUANTITATIVE, TEMPORAL } from '../../type';\nimport { contains, getFirstDefined } from '../../util';\nimport { getMarkConfig, getMarkPropOrConfig } from '../common';\nexport function initMarkdef(originalMarkDef, encoding, config) {\n    // FIXME: markDef expects that exprRefs are replaced recursively but replaceExprRef only replaces the top level\n    const markDef = replaceExprRef(originalMarkDef);\n    // set orient, which can be overridden by rules as sometimes the specified orient is invalid.\n    const specifiedOrient = getMarkPropOrConfig('orient', markDef, config);\n    markDef.orient = orient(markDef.type, encoding, specifiedOrient);\n    if (specifiedOrient !== undefined && specifiedOrient !== markDef.orient) {\n        log.warn(log.message.orientOverridden(markDef.orient, specifiedOrient));\n    }\n    if (markDef.type === 'bar' && markDef.orient) {\n        const cornerRadiusEnd = getMarkPropOrConfig('cornerRadiusEnd', markDef, config);\n        if (cornerRadiusEnd !== undefined) {\n            const newProps = (markDef.orient === 'horizontal' && encoding.x2) || (markDef.orient === 'vertical' && encoding.y2)\n                ? ['cornerRadius']\n                : BAR_CORNER_RADIUS_END_INDEX[markDef.orient];\n            for (const newProp of newProps) {\n                markDef[newProp] = cornerRadiusEnd;\n            }\n            if (markDef.cornerRadiusEnd !== undefined) {\n                delete markDef.cornerRadiusEnd; // no need to keep the original cap cornerRadius\n            }\n        }\n    }\n    // set opacity and filled if not specified in mark config\n    const specifiedOpacity = getMarkPropOrConfig('opacity', markDef, config);\n    if (specifiedOpacity === undefined) {\n        markDef.opacity = opacity(markDef.type, encoding);\n    }\n    // set cursor, which should be pointer if href channel is present unless otherwise specified\n    const specifiedCursor = getMarkPropOrConfig('cursor', markDef, config);\n    if (specifiedCursor === undefined) {\n        markDef.cursor = cursor(markDef, encoding, config);\n    }\n    return markDef;\n}\nfunction cursor(markDef, encoding, config) {\n    if (encoding.href || markDef.href || getMarkPropOrConfig('href', markDef, config)) {\n        return 'pointer';\n    }\n    return markDef.cursor;\n}\nfunction opacity(mark, encoding) {\n    if (contains([POINT, TICK, CIRCLE, SQUARE], mark)) {\n        // point-based marks\n        if (!isAggregate(encoding)) {\n            return 0.7;\n        }\n    }\n    return undefined;\n}\nexport function defaultFilled(markDef, config, { graticule }) {\n    if (graticule) {\n        return false;\n    }\n    const filledConfig = getMarkConfig('filled', markDef, config);\n    const mark = markDef.type;\n    return getFirstDefined(filledConfig, mark !== POINT && mark !== LINE && mark !== RULE);\n}\nfunction orient(mark, encoding, specifiedOrient) {\n    switch (mark) {\n        case POINT:\n        case CIRCLE:\n        case SQUARE:\n        case TEXT:\n        case RECT:\n        case IMAGE:\n            // orient is meaningless for these marks.\n            return undefined;\n    }\n    const { x, y, x2, y2 } = encoding;\n    switch (mark) {\n        case BAR:\n            if (isFieldDef(x) && (isBinned(x.bin) || (isFieldDef(y) && y.aggregate && !x.aggregate))) {\n                return 'vertical';\n            }\n            if (isFieldDef(y) && (isBinned(y.bin) || (isFieldDef(x) && x.aggregate && !y.aggregate))) {\n                return 'horizontal';\n            }\n            if (y2 || x2) {\n                // Ranged bar does not always have clear orientation, so we allow overriding\n                if (specifiedOrient) {\n                    return specifiedOrient;\n                }\n                // If y is range and x is non-range, non-bin Q\n                if (!x2) {\n                    if ((isFieldDef(x) && x.type === QUANTITATIVE && !isBinning(x.bin)) || isNumericDataDef(x)) {\n                        if (isFieldDef(y) && isBinned(y.bin)) {\n                            return 'horizontal';\n                        }\n                    }\n                    return 'vertical';\n                }\n                // If x is range and y is non-range, non-bin Q\n                if (!y2) {\n                    if ((isFieldDef(y) && y.type === QUANTITATIVE && !isBinning(y.bin)) || isNumericDataDef(y)) {\n                        if (isFieldDef(x) && isBinned(x.bin)) {\n                            return 'vertical';\n                        }\n                    }\n                    return 'horizontal';\n                }\n            }\n        // falls through\n        case RULE:\n            // return undefined for line segment rule and bar with both axis ranged\n            // we have to ignore the case that the data are already binned\n            if (x2 && !(isFieldDef(x) && isBinned(x.bin)) && y2 && !(isFieldDef(y) && isBinned(y.bin))) {\n                return undefined;\n            }\n        // falls through\n        case AREA:\n            // If there are range for both x and y, y (vertical) has higher precedence.\n            if (y2) {\n                if (isFieldDef(y) && isBinned(y.bin)) {\n                    return 'horizontal';\n                }\n                else {\n                    return 'vertical';\n                }\n            }\n            else if (x2) {\n                if (isFieldDef(x) && isBinned(x.bin)) {\n                    return 'vertical';\n                }\n                else {\n                    return 'horizontal';\n                }\n            }\n            else if (mark === RULE) {\n                if (x && !y) {\n                    return 'vertical';\n                }\n                else if (y && !x) {\n                    return 'horizontal';\n                }\n            }\n        // falls through\n        case LINE:\n        case TICK: {\n            // Tick is opposite to bar, line, area and never have ranged mark.\n            const xIsContinuous = isContinuousFieldOrDatumDef(x);\n            const yIsContinuous = isContinuousFieldOrDatumDef(y);\n            if (specifiedOrient) {\n                return specifiedOrient;\n            }\n            else if (xIsContinuous && !yIsContinuous) {\n                return mark !== 'tick' ? 'horizontal' : 'vertical';\n            }\n            else if (!xIsContinuous && yIsContinuous) {\n                return mark !== 'tick' ? 'vertical' : 'horizontal';\n            }\n            else if (xIsContinuous && yIsContinuous) {\n                const xDef = x; // we can cast here since they are surely fieldDef\n                const yDef = y;\n                const xIsTemporal = xDef.type === TEMPORAL;\n                const yIsTemporal = yDef.type === TEMPORAL;\n                // temporal without timeUnit is considered continuous, but better serves as dimension\n                if (xIsTemporal && !yIsTemporal) {\n                    return mark !== 'tick' ? 'vertical' : 'horizontal';\n                }\n                else if (!xIsTemporal && yIsTemporal) {\n                    return mark !== 'tick' ? 'horizontal' : 'vertical';\n                }\n                if (!xDef.aggregate && yDef.aggregate) {\n                    return mark !== 'tick' ? 'vertical' : 'horizontal';\n                }\n                else if (xDef.aggregate && !yDef.aggregate) {\n                    return mark !== 'tick' ? 'horizontal' : 'vertical';\n                }\n                return 'vertical';\n            }\n            else {\n                return undefined;\n            }\n        }\n    }\n    return 'vertical';\n}\n//# sourceMappingURL=init.js.map","import * as encode from './encode';\nexport const line = {\n    vgMark: 'line',\n    encodeEntry: (model) => {\n        return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, encode.baseEncodeEntry(model, {\n            align: 'ignore',\n            baseline: 'ignore',\n            color: 'include',\n            size: 'ignore',\n            orient: 'ignore',\n            theta: 'ignore'\n        })), encode.pointPosition('x', model, { defaultPos: 'mid' })), encode.pointPosition('y', model, { defaultPos: 'mid' })), encode.nonPosition('size', model, {\n            vgChannel: 'strokeWidth' // VL's line size is strokeWidth\n        })), encode.defined(model));\n    }\n};\nexport const trail = {\n    vgMark: 'trail',\n    encodeEntry: (model) => {\n        return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, encode.baseEncodeEntry(model, {\n            align: 'ignore',\n            baseline: 'ignore',\n            color: 'include',\n            size: 'include',\n            orient: 'ignore',\n            theta: 'ignore'\n        })), encode.pointPosition('x', model, { defaultPos: 'mid' })), encode.pointPosition('y', model, { defaultPos: 'mid' })), encode.nonPosition('size', model)), encode.defined(model));\n    }\n};\n//# sourceMappingURL=line.js.map","import { isArray } from 'vega-util';\nimport { isFieldDef, isValueDef, vgField } from '../../channeldef';\nimport { DataSourceType } from '../../data';\nimport { isAggregate, pathGroupingFields } from '../../encoding';\nimport { AREA, BAR, isPathMark, LINE, TRAIL } from '../../mark';\nimport { isSortByEncoding, isSortField } from '../../sort';\nimport { contains, getFirstDefined, isNullOrFalse, keys, omit, pick } from '../../util';\nimport { VG_CORNERRADIUS_CHANNELS } from '../../vega.schema';\nimport { getMarkConfig, getMarkPropOrConfig, getStyles, signalOrValueRef, sortParams } from '../common';\nimport { arc } from './arc';\nimport { area } from './area';\nimport { bar } from './bar';\nimport { geoshape } from './geoshape';\nimport { image } from './image';\nimport { line, trail } from './line';\nimport { circle, point, square } from './point';\nimport { rect } from './rect';\nimport { rule } from './rule';\nimport { text } from './text';\nimport { tick } from './tick';\nconst markCompiler = {\n    arc,\n    area,\n    bar,\n    circle,\n    geoshape,\n    image,\n    line,\n    point,\n    rect,\n    rule,\n    square,\n    text,\n    tick,\n    trail\n};\nexport function parseMarkGroups(model) {\n    if (contains([LINE, AREA, TRAIL], model.mark)) {\n        const details = pathGroupingFields(model.mark, model.encoding);\n        if (details.length > 0) {\n            return getPathGroups(model, details);\n        }\n        // otherwise use standard mark groups\n    }\n    else if (model.mark === BAR) {\n        const hasCornerRadius = VG_CORNERRADIUS_CHANNELS.some(prop => getMarkPropOrConfig(prop, model.markDef, model.config));\n        if (model.stack && !model.fieldDef('size') && hasCornerRadius) {\n            return getGroupsForStackedBarWithCornerRadius(model);\n        }\n    }\n    return getMarkGroup(model);\n}\nconst FACETED_PATH_PREFIX = 'faceted_path_';\nfunction getPathGroups(model, details) {\n    // TODO: for non-stacked plot, map order to zindex. (Maybe rename order for layer to zindex?)\n    return [\n        {\n            name: model.getName('pathgroup'),\n            type: 'group',\n            from: {\n                facet: {\n                    name: FACETED_PATH_PREFIX + model.requestDataName(DataSourceType.Main),\n                    data: model.requestDataName(DataSourceType.Main),\n                    groupby: details\n                }\n            },\n            encode: {\n                update: {\n                    width: { field: { group: 'width' } },\n                    height: { field: { group: 'height' } }\n                }\n            },\n            // With subfacet for line/area group, need to use faceted data from above.\n            marks: getMarkGroup(model, { fromPrefix: FACETED_PATH_PREFIX })\n        }\n    ];\n}\nconst STACK_GROUP_PREFIX = 'stack_group_';\n/**\n * We need to put stacked bars into groups in order to enable cornerRadius for stacks.\n * If stack is used and the model doesn't have size encoding, we put the mark into groups,\n * and apply cornerRadius properties at the group.\n */\nfunction getGroupsForStackedBarWithCornerRadius(model) {\n    var _a;\n    // Generate the mark\n    const [mark] = getMarkGroup(model, { fromPrefix: STACK_GROUP_PREFIX });\n    // Get the scale for the stacked field\n    const fieldScale = model.scaleName(model.stack.fieldChannel);\n    const stackField = (opt = {}) => model.vgField(model.stack.fieldChannel, opt);\n    // Find the min/max of the pixel value on the stacked direction\n    const stackFieldGroup = (func, expr) => {\n        const vgFieldMinMax = [\n            stackField({ prefix: 'min', suffix: 'start', expr }),\n            stackField({ prefix: 'max', suffix: 'start', expr }),\n            stackField({ prefix: 'min', suffix: 'end', expr }),\n            stackField({ prefix: 'max', suffix: 'end', expr })\n        ];\n        return `${func}(${vgFieldMinMax.map(field => `scale('${fieldScale}',${field})`).join(',')})`;\n    };\n    let groupUpdate;\n    let innerGroupUpdate;\n    // Build the encoding for group and an inner group\n    if (model.stack.fieldChannel === 'x') {\n        // Move cornerRadius, y/yc/y2/height properties to group\n        // Group x/x2 should be the min/max of the marks within\n        groupUpdate = Object.assign(Object.assign({}, pick(mark.encode.update, ['y', 'yc', 'y2', 'height', ...VG_CORNERRADIUS_CHANNELS])), { x: { signal: stackFieldGroup('min', 'datum') }, x2: { signal: stackFieldGroup('max', 'datum') }, clip: { value: true } });\n        // Inner group should revert the x translation, and pass height through\n        innerGroupUpdate = {\n            x: { field: { group: 'x' }, mult: -1 },\n            height: { field: { group: 'height' } }\n        };\n        // The marks should use the same height as group, without y/yc/y2 properties (because it's already done by group)\n        // This is why size encoding is not supported yet\n        mark.encode.update = Object.assign(Object.assign({}, omit(mark.encode.update, ['y', 'yc', 'y2'])), { height: { field: { group: 'height' } } });\n    }\n    else {\n        groupUpdate = Object.assign(Object.assign({}, pick(mark.encode.update, ['x', 'xc', 'x2', 'width'])), { y: { signal: stackFieldGroup('min', 'datum') }, y2: { signal: stackFieldGroup('max', 'datum') }, clip: { value: true } });\n        innerGroupUpdate = {\n            y: { field: { group: 'y' }, mult: -1 },\n            width: { field: { group: 'width' } }\n        };\n        mark.encode.update = Object.assign(Object.assign({}, omit(mark.encode.update, ['x', 'xc', 'x2'])), { width: { field: { group: 'width' } } });\n    }\n    // Deal with cornerRadius properties\n    for (const key of VG_CORNERRADIUS_CHANNELS) {\n        const configValue = getMarkConfig(key, model.markDef, model.config);\n        // Move from mark to group\n        if (mark.encode.update[key]) {\n            groupUpdate[key] = mark.encode.update[key];\n            delete mark.encode.update[key];\n        }\n        else if (configValue) {\n            groupUpdate[key] = signalOrValueRef(configValue);\n        }\n        // Overwrite any cornerRadius on mark set by config --- they are already moved to the group\n        if (configValue) {\n            mark.encode.update[key] = { value: 0 };\n        }\n    }\n    const groupby = [];\n    if (((_a = model.stack.groupbyChannels) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n        for (const groupbyChannel of model.stack.groupbyChannels) {\n            // For bin and time unit, we have to add bin/timeunit -end channels.\n            const groupByField = model.fieldDef(groupbyChannel);\n            const field = vgField(groupByField);\n            if (field) {\n                groupby.push(field);\n            }\n            if ((groupByField === null || groupByField === void 0 ? void 0 : groupByField.bin) || (groupByField === null || groupByField === void 0 ? void 0 : groupByField.timeUnit)) {\n                groupby.push(vgField(groupByField, { binSuffix: 'end' }));\n            }\n        }\n    }\n    const strokeProperties = [\n        'stroke',\n        'strokeWidth',\n        'strokeJoin',\n        'strokeCap',\n        'strokeDash',\n        'strokeDashOffset',\n        'strokeMiterLimit',\n        'strokeOpacity'\n    ];\n    // Generate stroke properties for the group\n    groupUpdate = strokeProperties.reduce((encode, prop) => {\n        if (mark.encode.update[prop]) {\n            return Object.assign(Object.assign({}, encode), { [prop]: mark.encode.update[prop] });\n        }\n        else {\n            const configValue = getMarkConfig(prop, model.markDef, model.config);\n            if (configValue !== undefined) {\n                return Object.assign(Object.assign({}, encode), { [prop]: signalOrValueRef(configValue) });\n            }\n            else {\n                return encode;\n            }\n        }\n    }, groupUpdate);\n    // Apply strokeForeground and strokeOffset if stroke is used\n    if (groupUpdate.stroke) {\n        groupUpdate.strokeForeground = { value: true };\n        groupUpdate.strokeOffset = { value: 0 };\n    }\n    return [\n        {\n            type: 'group',\n            from: {\n                facet: {\n                    data: model.requestDataName(DataSourceType.Main),\n                    name: STACK_GROUP_PREFIX + model.requestDataName(DataSourceType.Main),\n                    groupby,\n                    aggregate: {\n                        fields: [\n                            stackField({ suffix: 'start' }),\n                            stackField({ suffix: 'start' }),\n                            stackField({ suffix: 'end' }),\n                            stackField({ suffix: 'end' })\n                        ],\n                        ops: ['min', 'max', 'min', 'max']\n                    }\n                }\n            },\n            encode: {\n                update: groupUpdate\n            },\n            marks: [\n                {\n                    type: 'group',\n                    encode: { update: innerGroupUpdate },\n                    marks: [mark]\n                }\n            ]\n        }\n    ];\n}\nexport function getSort(model) {\n    var _a;\n    const { encoding, stack, mark, markDef, config } = model;\n    const order = encoding.order;\n    if ((!isArray(order) && isValueDef(order) && isNullOrFalse(order.value)) ||\n        (!order && isNullOrFalse(getMarkPropOrConfig('order', markDef, config)))) {\n        return undefined;\n    }\n    else if ((isArray(order) || isFieldDef(order)) && !stack) {\n        // Sort by the order field if it is specified and the field is not stacked. (For stacked field, order specify stack order.)\n        return sortParams(order, { expr: 'datum' });\n    }\n    else if (isPathMark(mark)) {\n        // For both line and area, we sort values based on dimension by default\n        const dimensionChannel = markDef.orient === 'horizontal' ? 'y' : 'x';\n        const dimensionChannelDef = encoding[dimensionChannel];\n        if (isFieldDef(dimensionChannelDef)) {\n            const s = dimensionChannelDef.sort;\n            if (isArray(s)) {\n                return {\n                    field: vgField(dimensionChannelDef, { prefix: dimensionChannel, suffix: 'sort_index', expr: 'datum' })\n                };\n            }\n            else if (isSortField(s)) {\n                return {\n                    field: vgField({\n                        // FIXME: this op might not already exist?\n                        // FIXME: what if dimensionChannel (x or y) contains custom domain?\n                        aggregate: isAggregate(model.encoding) ? s.op : undefined,\n                        field: s.field\n                    }, { expr: 'datum' })\n                };\n            }\n            else if (isSortByEncoding(s)) {\n                const fieldDefToSort = model.fieldDef(s.encoding);\n                return {\n                    field: vgField(fieldDefToSort, { expr: 'datum' }),\n                    order: s.order\n                };\n            }\n            else if (s === null) {\n                return undefined;\n            }\n            else {\n                return {\n                    field: vgField(dimensionChannelDef, {\n                        // For stack with imputation, we only have bin_mid\n                        binSuffix: ((_a = model.stack) === null || _a === void 0 ? void 0 : _a.impute) ? 'mid' : undefined,\n                        expr: 'datum'\n                    })\n                };\n            }\n        }\n        return undefined;\n    }\n    return undefined;\n}\nfunction getMarkGroup(model, opt = { fromPrefix: '' }) {\n    const { mark, markDef, encoding, config } = model;\n    const clip = getFirstDefined(markDef.clip, scaleClip(model), projectionClip(model));\n    const style = getStyles(markDef);\n    const key = encoding.key;\n    const sort = getSort(model);\n    const interactive = interactiveFlag(model);\n    const aria = getMarkPropOrConfig('aria', markDef, config);\n    const postEncodingTransform = markCompiler[mark].postEncodingTransform\n        ? markCompiler[mark].postEncodingTransform(model)\n        : null;\n    return [\n        Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({ name: model.getName('marks'), type: markCompiler[mark].vgMark }, (clip ? { clip: true } : {})), (style ? { style } : {})), (key ? { key: key.field } : {})), (sort ? { sort } : {})), (interactive ? interactive : {})), (aria === false ? { aria } : {})), { from: { data: opt.fromPrefix + model.requestDataName(DataSourceType.Main) }, encode: {\n                update: markCompiler[mark].encodeEntry(model)\n            } }), (postEncodingTransform\n            ? {\n                transform: postEncodingTransform\n            }\n            : {}))\n    ];\n}\n/**\n * If scales are bound to interval selections, we want to automatically clip\n * marks to account for panning/zooming interactions. We identify bound scales\n * by the selectionExtent property, which gets added during scale parsing.\n */\nfunction scaleClip(model) {\n    const xScale = model.getScaleComponent('x');\n    const yScale = model.getScaleComponent('y');\n    return (xScale === null || xScale === void 0 ? void 0 : xScale.get('selectionExtent')) || (yScale === null || yScale === void 0 ? void 0 : yScale.get('selectionExtent')) ? true : undefined;\n}\n/**\n * If we use a custom projection with auto-fitting to the geodata extent,\n * we need to clip to ensure the chart size doesn't explode.\n */\nfunction projectionClip(model) {\n    const projection = model.component.projection;\n    return projection && !projection.isFit ? true : undefined;\n}\n/**\n * Only output interactive flags if we have selections defined somewhere in our model hierarchy.\n */\nfunction interactiveFlag(model) {\n    if (!model.component.selection)\n        return null;\n    const unitCount = keys(model.component.selection).length;\n    let parentCount = unitCount;\n    let parent = model.parent;\n    while (parent && parentCount === 0) {\n        parentCount = keys(parent.component.selection).length;\n        parent = parent.parent;\n    }\n    return parentCount\n        ? {\n            interactive: unitCount > 0 || !!model.encoding.tooltip\n        }\n        : null;\n}\n//# sourceMappingURL=mark.js.map","import * as encode from './encode';\nfunction encodeEntry(model, fixedShape) {\n    const { config } = model;\n    return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, encode.baseEncodeEntry(model, {\n        align: 'ignore',\n        baseline: 'ignore',\n        color: 'include',\n        size: 'include',\n        orient: 'ignore',\n        theta: 'ignore'\n    })), encode.pointPosition('x', model, { defaultPos: 'mid' })), encode.pointPosition('y', model, { defaultPos: 'mid' })), encode.nonPosition('size', model)), encode.nonPosition('angle', model)), shapeMixins(model, config, fixedShape));\n}\nexport function shapeMixins(model, config, fixedShape) {\n    if (fixedShape) {\n        return { shape: { value: fixedShape } };\n    }\n    return encode.nonPosition('shape', model);\n}\nexport const point = {\n    vgMark: 'symbol',\n    encodeEntry: (model) => {\n        return encodeEntry(model);\n    }\n};\nexport const circle = {\n    vgMark: 'symbol',\n    encodeEntry: (model) => {\n        return encodeEntry(model, 'circle');\n    }\n};\nexport const square = {\n    vgMark: 'symbol',\n    encodeEntry: (model) => {\n        return encodeEntry(model, 'square');\n    }\n};\n//# sourceMappingURL=point.js.map","import * as encode from './encode';\nexport const rect = {\n    vgMark: 'rect',\n    encodeEntry: (model) => {\n        return Object.assign(Object.assign(Object.assign({}, encode.baseEncodeEntry(model, {\n            align: 'ignore',\n            baseline: 'ignore',\n            color: 'include',\n            orient: 'ignore',\n            size: 'ignore',\n            theta: 'ignore'\n        })), encode.rectPosition(model, 'x')), encode.rectPosition(model, 'y'));\n    }\n};\n//# sourceMappingURL=rect.js.map","import * as encode from './encode';\nexport const rule = {\n    vgMark: 'rule',\n    encodeEntry: (model) => {\n        const { markDef } = model;\n        const orient = markDef.orient;\n        if (!model.encoding.x && !model.encoding.y && !model.encoding.latitude && !model.encoding.longitude) {\n            // Show nothing if we have none of x, y, lat, and long.\n            return {};\n        }\n        return Object.assign(Object.assign(Object.assign(Object.assign({}, encode.baseEncodeEntry(model, {\n            align: 'ignore',\n            baseline: 'ignore',\n            color: 'include',\n            orient: 'ignore',\n            size: 'ignore',\n            theta: 'ignore'\n        })), encode.pointOrRangePosition('x', model, {\n            defaultPos: orient === 'horizontal' ? 'zeroOrMax' : 'mid',\n            defaultPos2: 'zeroOrMin',\n            range: orient !== 'vertical' // include x2 for horizontal or line segment rule\n        })), encode.pointOrRangePosition('y', model, {\n            defaultPos: orient === 'vertical' ? 'zeroOrMax' : 'mid',\n            defaultPos2: 'zeroOrMin',\n            range: orient !== 'horizontal' // include y2 for vertical or line segment rule\n        })), encode.nonPosition('size', model, {\n            vgChannel: 'strokeWidth' // VL's rule size is strokeWidth\n        }));\n    }\n};\n//# sourceMappingURL=rule.js.map","import { getMarkPropOrConfig } from '../common';\nimport * as encode from './encode';\nexport const text = {\n    vgMark: 'text',\n    encodeEntry: (model) => {\n        const { config, encoding } = model;\n        return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, encode.baseEncodeEntry(model, {\n            align: 'include',\n            baseline: 'include',\n            color: 'include',\n            size: 'ignore',\n            orient: 'ignore',\n            theta: 'include'\n        })), encode.pointPosition('x', model, { defaultPos: 'mid' })), encode.pointPosition('y', model, { defaultPos: 'mid' })), encode.text(model)), encode.nonPosition('size', model, {\n            vgChannel: 'fontSize' // VL's text size is fontSize\n        })), encode.nonPosition('angle', model)), encode.valueIfDefined('align', align(model.markDef, encoding, config))), encode.valueIfDefined('baseline', baseline(model.markDef, encoding, config))), encode.pointPosition('radius', model, { defaultPos: null })), encode.pointPosition('theta', model, { defaultPos: null }));\n    }\n};\nfunction align(markDef, encoding, config) {\n    const a = getMarkPropOrConfig('align', markDef, config);\n    if (a === undefined) {\n        return 'center';\n    }\n    // If there is a config, Vega-parser will process this already.\n    return undefined;\n}\nfunction baseline(markDef, encoding, config) {\n    const b = getMarkPropOrConfig('baseline', markDef, config);\n    if (b === undefined) {\n        return 'middle';\n    }\n    // If there is a config, Vega-parser will process this already.\n    return undefined;\n}\n//# sourceMappingURL=text.js.map","import { isNumber } from 'vega-util';\nimport { getViewConfigDiscreteStep } from '../../config';\nimport { isVgRangeStep } from '../../vega.schema';\nimport { getMarkPropOrConfig, signalOrValueRef } from '../common';\nimport * as encode from './encode';\nexport const tick = {\n    vgMark: 'rect',\n    encodeEntry: (model) => {\n        const { config, markDef } = model;\n        const orient = markDef.orient;\n        const vgSizeChannel = orient === 'horizontal' ? 'width' : 'height';\n        const vgThicknessChannel = orient === 'horizontal' ? 'height' : 'width';\n        return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, encode.baseEncodeEntry(model, {\n            align: 'ignore',\n            baseline: 'ignore',\n            color: 'include',\n            orient: 'ignore',\n            size: 'ignore',\n            theta: 'ignore'\n        })), encode.pointPosition('x', model, { defaultPos: 'mid', vgChannel: 'xc' })), encode.pointPosition('y', model, { defaultPos: 'mid', vgChannel: 'yc' })), encode.nonPosition('size', model, {\n            defaultValue: defaultSize(model),\n            vgChannel: vgSizeChannel\n        })), { [vgThicknessChannel]: signalOrValueRef(getMarkPropOrConfig('thickness', markDef, config)) });\n    }\n};\nfunction defaultSize(model) {\n    var _a;\n    const { config, markDef } = model;\n    const { orient } = markDef;\n    const vgSizeChannel = orient === 'horizontal' ? 'width' : 'height';\n    const scale = model.getScaleComponent(orient === 'horizontal' ? 'x' : 'y');\n    const markPropOrConfig = (_a = getMarkPropOrConfig('size', markDef, config, { vgChannel: vgSizeChannel })) !== null && _a !== void 0 ? _a : config.tick.bandSize;\n    if (markPropOrConfig !== undefined) {\n        return markPropOrConfig;\n    }\n    else {\n        const scaleRange = scale ? scale.get('range') : undefined;\n        if (scaleRange && isVgRangeStep(scaleRange) && isNumber(scaleRange.step)) {\n            return (scaleRange.step * 3) / 4;\n        }\n        const defaultViewStep = getViewConfigDiscreteStep(config.view, vgSizeChannel);\n        return (defaultViewStep * 3) / 4;\n    }\n}\n//# sourceMappingURL=tick.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { FACET_CHANNELS, getPositionScaleChannel, isChannel, isScaleChannel } from '../channel';\nimport { getFieldDef, vgField } from '../channeldef';\nimport { DataSourceType } from '../data';\nimport { forEach, reduce } from '../encoding';\nimport { replaceExprRef } from '../expr';\nimport * as log from '../log';\nimport { hasDiscreteDomain } from '../scale';\nimport { isFacetSpec } from '../spec';\nimport { extractCompositionLayout } from '../spec/base';\nimport { extractTitleConfig, isText } from '../title';\nimport { normalizeTransform } from '../transform';\nimport { contains, duplicate, isEmpty, keys, varName } from '../util';\nimport { isVgRangeStep } from '../vega.schema';\nimport { assembleAxes } from './axis/assemble';\nimport { signalOrValueRef } from './common';\nimport { assembleHeaderGroups, assembleLayoutTitleBand, assembleTitleGroup } from './header/assemble';\nimport { HEADER_CHANNELS } from './header/component';\nimport { sizeExpr } from './layoutsize/assemble';\nimport { getSizeTypeFromLayoutSizeType } from './layoutsize/component';\nimport { assembleLegends } from './legend/assemble';\nimport { parseLegend } from './legend/parse';\nimport { assembleProjections } from './projection/assemble';\nimport { parseProjection } from './projection/parse';\nimport { assembleScales } from './scale/assemble';\nimport { assembleDomain, getFieldFromDomain } from './scale/domain';\nimport { parseScales } from './scale/parse';\nimport { Split } from './split';\nexport class NameMap {\n    constructor() {\n        this.nameMap = {};\n    }\n    rename(oldName, newName) {\n        this.nameMap[oldName] = newName;\n    }\n    has(name) {\n        return this.nameMap[name] !== undefined;\n    }\n    get(name) {\n        // If the name appears in the _nameMap, we need to read its new name.\n        // We have to loop over the dict just in case the new name also gets renamed.\n        while (this.nameMap[name] && name !== this.nameMap[name]) {\n            name = this.nameMap[name];\n        }\n        return name;\n    }\n}\n/*\n  We use type guards instead of `instanceof` as `instanceof` makes\n  different parts of the compiler depend on the actual implementation of\n  the model classes, which in turn depend on different parts of the compiler.\n  Thus, `instanceof` leads to circular dependency problems.\n\n  On the other hand, type guards only make different parts of the compiler\n  depend on the type of the model classes, but not the actual implementation.\n*/\nexport function isUnitModel(model) {\n    return (model === null || model === void 0 ? void 0 : model.type) === 'unit';\n}\nexport function isFacetModel(model) {\n    return (model === null || model === void 0 ? void 0 : model.type) === 'facet';\n}\nexport function isConcatModel(model) {\n    return (model === null || model === void 0 ? void 0 : model.type) === 'concat';\n}\nexport function isLayerModel(model) {\n    return (model === null || model === void 0 ? void 0 : model.type) === 'layer';\n}\nexport class Model {\n    constructor(spec, type, parent, parentGivenName, config, resolve, view) {\n        var _a, _b;\n        this.type = type;\n        this.parent = parent;\n        this.config = config;\n        /**\n         * Corrects the data references in marks after assemble.\n         */\n        this.correctDataNames = (mark) => {\n            // TODO: make this correct\n            var _a, _b, _c;\n            // for normal data references\n            if ((_a = mark.from) === null || _a === void 0 ? void 0 : _a.data) {\n                mark.from.data = this.lookupDataSource(mark.from.data);\n            }\n            // for access to facet data\n            if ((_c = (_b = mark.from) === null || _b === void 0 ? void 0 : _b.facet) === null || _c === void 0 ? void 0 : _c.data) {\n                mark.from.facet.data = this.lookupDataSource(mark.from.facet.data);\n            }\n            return mark;\n        };\n        this.parent = parent;\n        this.config = config;\n        this.view = replaceExprRef(view);\n        // If name is not provided, always use parent's givenName to avoid name conflicts.\n        this.name = (_a = spec.name) !== null && _a !== void 0 ? _a : parentGivenName;\n        this.title = isText(spec.title) ? { text: spec.title } : spec.title ? replaceExprRef(spec.title) : undefined;\n        // Shared name maps\n        this.scaleNameMap = parent ? parent.scaleNameMap : new NameMap();\n        this.projectionNameMap = parent ? parent.projectionNameMap : new NameMap();\n        this.signalNameMap = parent ? parent.signalNameMap : new NameMap();\n        this.data = spec.data;\n        this.description = spec.description;\n        this.transforms = normalizeTransform((_b = spec.transform) !== null && _b !== void 0 ? _b : []);\n        this.layout = type === 'layer' || type === 'unit' ? {} : extractCompositionLayout(spec, type, config);\n        this.component = {\n            data: {\n                sources: parent ? parent.component.data.sources : [],\n                outputNodes: parent ? parent.component.data.outputNodes : {},\n                outputNodeRefCounts: parent ? parent.component.data.outputNodeRefCounts : {},\n                // data is faceted if the spec is a facet spec or the parent has faceted data and data is undefined\n                isFaceted: isFacetSpec(spec) || ((parent === null || parent === void 0 ? void 0 : parent.component.data.isFaceted) && spec.data === undefined)\n            },\n            layoutSize: new Split(),\n            layoutHeaders: { row: {}, column: {}, facet: {} },\n            mark: null,\n            resolve: Object.assign({ scale: {}, axis: {}, legend: {} }, (resolve ? duplicate(resolve) : {})),\n            selection: null,\n            scales: null,\n            projection: null,\n            axes: {},\n            legends: {}\n        };\n    }\n    get width() {\n        return this.getSizeSignalRef('width');\n    }\n    get height() {\n        return this.getSizeSignalRef('height');\n    }\n    parse() {\n        this.parseScale();\n        this.parseLayoutSize(); // depends on scale\n        this.renameTopLevelLayoutSizeSignal();\n        this.parseSelections();\n        this.parseProjection();\n        this.parseData(); // (pathorder) depends on markDef; selection filters depend on parsed selections; depends on projection because some transforms require the finalized projection name.\n        this.parseAxesAndHeaders(); // depends on scale and layout size\n        this.parseLegends(); // depends on scale, markDef\n        this.parseMarkGroup(); // depends on data name, scale, layout size, axisGroup, and children's scale, axis, legend and mark.\n    }\n    parseScale() {\n        parseScales(this);\n    }\n    parseProjection() {\n        parseProjection(this);\n    }\n    /**\n     * Rename top-level spec's size to be just width / height, ignoring model name.\n     * This essentially merges the top-level spec's width/height signals with the width/height signals\n     * to help us reduce redundant signals declaration.\n     */\n    renameTopLevelLayoutSizeSignal() {\n        if (this.getName('width') !== 'width') {\n            this.renameSignal(this.getName('width'), 'width');\n        }\n        if (this.getName('height') !== 'height') {\n            this.renameSignal(this.getName('height'), 'height');\n        }\n    }\n    parseLegends() {\n        parseLegend(this);\n    }\n    assembleEncodeFromView(view) {\n        // Exclude \"style\"\n        const { style: _ } = view, baseView = __rest(view, [\"style\"]);\n        const e = {};\n        for (const property of keys(baseView)) {\n            const value = baseView[property];\n            if (value !== undefined) {\n                e[property] = signalOrValueRef(value);\n            }\n        }\n        return e;\n    }\n    assembleGroupEncodeEntry(isTopLevel) {\n        let encodeEntry = {};\n        if (this.view) {\n            encodeEntry = this.assembleEncodeFromView(this.view);\n        }\n        if (!isTopLevel) {\n            // Descriptions are already added to the top-level description so we only need to add them to the inner views.\n            if (this.description) {\n                encodeEntry['description'] = signalOrValueRef(this.description);\n            }\n            // For top-level spec, we can set the global width and height signal to adjust the group size.\n            // For other child specs, we have to manually set width and height in the encode entry.\n            if (this.type === 'unit' || this.type === 'layer') {\n                return Object.assign({ width: this.getSizeSignalRef('width'), height: this.getSizeSignalRef('height') }, (encodeEntry !== null && encodeEntry !== void 0 ? encodeEntry : {}));\n            }\n        }\n        return isEmpty(encodeEntry) ? undefined : encodeEntry;\n    }\n    assembleLayout() {\n        if (!this.layout) {\n            return undefined;\n        }\n        const _a = this.layout, { spacing } = _a, layout = __rest(_a, [\"spacing\"]);\n        const { component, config } = this;\n        const titleBand = assembleLayoutTitleBand(component.layoutHeaders, config);\n        return Object.assign(Object.assign(Object.assign({ padding: spacing }, this.assembleDefaultLayout()), layout), (titleBand ? { titleBand } : {}));\n    }\n    assembleDefaultLayout() {\n        return {};\n    }\n    assembleHeaderMarks() {\n        const { layoutHeaders } = this.component;\n        let headerMarks = [];\n        for (const channel of FACET_CHANNELS) {\n            if (layoutHeaders[channel].title) {\n                headerMarks.push(assembleTitleGroup(this, channel));\n            }\n        }\n        for (const channel of HEADER_CHANNELS) {\n            headerMarks = headerMarks.concat(assembleHeaderGroups(this, channel));\n        }\n        return headerMarks;\n    }\n    assembleAxes() {\n        return assembleAxes(this.component.axes, this.config);\n    }\n    assembleLegends() {\n        return assembleLegends(this);\n    }\n    assembleProjections() {\n        return assembleProjections(this);\n    }\n    assembleTitle() {\n        var _a, _b, _c;\n        const _d = (_a = this.title) !== null && _a !== void 0 ? _a : {}, { encoding } = _d, titleNoEncoding = __rest(_d, [\"encoding\"]);\n        const title = Object.assign(Object.assign(Object.assign({}, extractTitleConfig(this.config.title).nonMarkTitleProperties), titleNoEncoding), (encoding ? { encode: { update: encoding } } : {}));\n        if (title.text) {\n            if (contains(['unit', 'layer'], this.type)) {\n                // Unit/Layer\n                if (contains(['middle', undefined], title.anchor)) {\n                    (_b = title.frame) !== null && _b !== void 0 ? _b : (title.frame = 'group');\n                }\n            }\n            else {\n                // composition with Vega layout\n                // Set title = \"start\" by default for composition as \"middle\" does not look nice\n                // https://github.com/vega/vega/issues/960#issuecomment-471360328\n                (_c = title.anchor) !== null && _c !== void 0 ? _c : (title.anchor = 'start');\n            }\n            return isEmpty(title) ? undefined : title;\n        }\n        return undefined;\n    }\n    /**\n     * Assemble the mark group for this model. We accept optional `signals` so that we can include concat top-level signals with the top-level model's local signals.\n     */\n    assembleGroup(signals = []) {\n        const group = {};\n        signals = signals.concat(this.assembleSignals());\n        if (signals.length > 0) {\n            group.signals = signals;\n        }\n        const layout = this.assembleLayout();\n        if (layout) {\n            group.layout = layout;\n        }\n        group.marks = [].concat(this.assembleHeaderMarks(), this.assembleMarks());\n        // Only include scales if this spec is top-level or if parent is facet.\n        // (Otherwise, it will be merged with upper-level's scope.)\n        const scales = !this.parent || isFacetModel(this.parent) ? assembleScales(this) : [];\n        if (scales.length > 0) {\n            group.scales = scales;\n        }\n        const axes = this.assembleAxes();\n        if (axes.length > 0) {\n            group.axes = axes;\n        }\n        const legends = this.assembleLegends();\n        if (legends.length > 0) {\n            group.legends = legends;\n        }\n        return group;\n    }\n    getName(text) {\n        return varName((this.name ? `${this.name}_` : '') + text);\n    }\n    getDataName(type) {\n        return this.getName(DataSourceType[type].toLowerCase());\n    }\n    /**\n     * Request a data source name for the given data source type and mark that data source as required.\n     * This method should be called in parse, so that all used data source can be correctly instantiated in assembleData().\n     * You can lookup the correct dataset name in assemble with `lookupDataSource`.\n     */\n    requestDataName(name) {\n        const fullName = this.getDataName(name);\n        // Increase ref count. This is critical because otherwise we won't create a data source.\n        // We also increase the ref counts on OutputNode.getSource() calls.\n        const refCounts = this.component.data.outputNodeRefCounts;\n        refCounts[fullName] = (refCounts[fullName] || 0) + 1;\n        return fullName;\n    }\n    getSizeSignalRef(layoutSizeType) {\n        if (isFacetModel(this.parent)) {\n            const sizeType = getSizeTypeFromLayoutSizeType(layoutSizeType);\n            const channel = getPositionScaleChannel(sizeType);\n            const scaleComponent = this.component.scales[channel];\n            if (scaleComponent && !scaleComponent.merged) {\n                // independent scale\n                const type = scaleComponent.get('type');\n                const range = scaleComponent.get('range');\n                if (hasDiscreteDomain(type) && isVgRangeStep(range)) {\n                    const scaleName = scaleComponent.get('name');\n                    const domain = assembleDomain(this, channel);\n                    const field = getFieldFromDomain(domain);\n                    if (field) {\n                        const fieldRef = vgField({ aggregate: 'distinct', field }, { expr: 'datum' });\n                        return {\n                            signal: sizeExpr(scaleName, scaleComponent, fieldRef)\n                        };\n                    }\n                    else {\n                        log.warn(log.message.unknownField(channel));\n                        return null;\n                    }\n                }\n            }\n        }\n        return {\n            signal: this.signalNameMap.get(this.getName(layoutSizeType))\n        };\n    }\n    /**\n     * Lookup the name of the datasource for an output node. You probably want to call this in assemble.\n     */\n    lookupDataSource(name) {\n        const node = this.component.data.outputNodes[name];\n        if (!node) {\n            // Name not found in map so let's just return what we got.\n            // This can happen if we already have the correct name.\n            return name;\n        }\n        return node.getSource();\n    }\n    getSignalName(oldSignalName) {\n        return this.signalNameMap.get(oldSignalName);\n    }\n    renameSignal(oldName, newName) {\n        this.signalNameMap.rename(oldName, newName);\n    }\n    renameScale(oldName, newName) {\n        this.scaleNameMap.rename(oldName, newName);\n    }\n    renameProjection(oldName, newName) {\n        this.projectionNameMap.rename(oldName, newName);\n    }\n    /**\n     * @return scale name for a given channel after the scale has been parsed and named.\n     */\n    scaleName(originalScaleName, parse) {\n        if (parse) {\n            // During the parse phase always return a value\n            // No need to refer to rename map because a scale can't be renamed\n            // before it has the original name.\n            return this.getName(originalScaleName);\n        }\n        // If there is a scale for the channel, it should either\n        // be in the scale component or exist in the name map\n        if (\n        // If there is a scale for the channel, there should be a local scale component for it\n        (isChannel(originalScaleName) && isScaleChannel(originalScaleName) && this.component.scales[originalScaleName]) ||\n            // in the scale name map (the scale get merged by its parent)\n            this.scaleNameMap.has(this.getName(originalScaleName))) {\n            return this.scaleNameMap.get(this.getName(originalScaleName));\n        }\n        return undefined;\n    }\n    /**\n     * @return projection name after the projection has been parsed and named.\n     */\n    projectionName(parse) {\n        if (parse) {\n            // During the parse phase always return a value\n            // No need to refer to rename map because a projection can't be renamed\n            // before it has the original name.\n            return this.getName('projection');\n        }\n        if ((this.component.projection && !this.component.projection.merged) ||\n            this.projectionNameMap.has(this.getName('projection'))) {\n            return this.projectionNameMap.get(this.getName('projection'));\n        }\n        return undefined;\n    }\n    /**\n     * Traverse a model's hierarchy to get the scale component for a particular channel.\n     */\n    getScaleComponent(channel) {\n        /* istanbul ignore next: This is warning for debugging test */\n        if (!this.component.scales) {\n            throw new Error('getScaleComponent cannot be called before parseScale(). Make sure you have called parseScale or use parseUnitModelWithScale().');\n        }\n        const localScaleComponent = this.component.scales[channel];\n        if (localScaleComponent && !localScaleComponent.merged) {\n            return localScaleComponent;\n        }\n        return this.parent ? this.parent.getScaleComponent(channel) : undefined;\n    }\n    /**\n     * Traverse a model's hierarchy to get a particular selection component.\n     */\n    getSelectionComponent(variableName, origName) {\n        let sel = this.component.selection[variableName];\n        if (!sel && this.parent) {\n            sel = this.parent.getSelectionComponent(variableName, origName);\n        }\n        if (!sel) {\n            throw new Error(log.message.selectionNotFound(origName));\n        }\n        return sel;\n    }\n    /**\n     * Returns true if the model has a signalRef for an axis orient.\n     */\n    hasAxisOrientSignalRef() {\n        var _a, _b;\n        return (((_a = this.component.axes.x) === null || _a === void 0 ? void 0 : _a.some(a => a.hasOrientSignalRef())) ||\n            ((_b = this.component.axes.y) === null || _b === void 0 ? void 0 : _b.some(a => a.hasOrientSignalRef())));\n    }\n}\n/** Abstract class for UnitModel and FacetModel. Both of which can contain fieldDefs as a part of its own specification. */\nexport class ModelWithField extends Model {\n    /** Get \"field\" reference for Vega */\n    vgField(channel, opt = {}) {\n        const fieldDef = this.fieldDef(channel);\n        if (!fieldDef) {\n            return undefined;\n        }\n        return vgField(fieldDef, opt);\n    }\n    reduceFieldDef(f, init) {\n        return reduce(this.getMapping(), (acc, cd, c) => {\n            const fieldDef = getFieldDef(cd);\n            if (fieldDef) {\n                return f(acc, fieldDef, c);\n            }\n            return acc;\n        }, init);\n    }\n    forEachFieldDef(f, t) {\n        forEach(this.getMapping(), (cd, c) => {\n            const fieldDef = getFieldDef(cd);\n            if (fieldDef) {\n                f(fieldDef, c);\n            }\n        }, t);\n    }\n}\n//# sourceMappingURL=model.js.map","import { isString } from 'vega-util';\nimport { fieldFilterExpression, isSelectionPredicate } from '../predicate';\nimport { logicalExpr } from '../util';\nimport { parseSelectionPredicate } from './selection/parse';\n/**\n * Converts a predicate into an expression.\n */\n// model is only used for selection filters.\nexport function expression(model, filterOp, node) {\n    return logicalExpr(filterOp, (predicate) => {\n        if (isString(predicate)) {\n            return predicate;\n        }\n        else if (isSelectionPredicate(predicate)) {\n            return parseSelectionPredicate(model, predicate, node);\n        }\n        else {\n            // Filter Object\n            return fieldFilterExpression(predicate);\n        }\n    });\n}\n//# sourceMappingURL=predicate.js.map","import { contains } from '../../util';\nimport { isSignalRef } from '../../vega.schema';\nimport { isConcatModel, isLayerModel } from '../model';\nexport function assembleProjections(model) {\n    if (isLayerModel(model) || isConcatModel(model)) {\n        return assembleProjectionsForModelAndChildren(model);\n    }\n    else {\n        return assembleProjectionForModel(model);\n    }\n}\nexport function assembleProjectionsForModelAndChildren(model) {\n    return model.children.reduce((projections, child) => {\n        return projections.concat(child.assembleProjections());\n    }, assembleProjectionForModel(model));\n}\nexport function assembleProjectionForModel(model) {\n    const component = model.component.projection;\n    if (!component || component.merged) {\n        return [];\n    }\n    const projection = component.combine();\n    const { name } = projection; // we need to extract name so that it is always present in the output and pass TS type validation\n    if (!component.data) {\n        // generate custom projection, no automatic fitting\n        return [\n            Object.assign(Object.assign({ name }, { translate: { signal: '[width / 2, height / 2]' } }), projection)\n        ];\n    }\n    else {\n        // generate projection that uses extent fitting\n        const size = {\n            signal: `[${component.size.map(ref => ref.signal).join(', ')}]`\n        };\n        const fits = component.data.reduce((sources, data) => {\n            const source = isSignalRef(data) ? data.signal : `data('${model.lookupDataSource(data)}')`;\n            if (!contains(sources, source)) {\n                // build a unique list of sources\n                sources.push(source);\n            }\n            return sources;\n        }, []);\n        if (fits.length <= 0) {\n            throw new Error(\"Projection's fit didn't find any data sources\");\n        }\n        return [\n            Object.assign({ name,\n                size, fit: {\n                    signal: fits.length > 1 ? `[${fits.join(', ')}]` : fits[0]\n                } }, projection)\n        ];\n    }\n}\n//# sourceMappingURL=assemble.js.map","import { Split } from '../split';\nexport class ProjectionComponent extends Split {\n    constructor(name, specifiedProjection, size, data) {\n        super(Object.assign({}, specifiedProjection), // all explicit properties of projection\n        { name } // name as initial implicit property\n        );\n        this.specifiedProjection = specifiedProjection;\n        this.size = size;\n        this.data = data;\n        this.merged = false;\n    }\n    /**\n     * Whether the projection parameters should fit provided data.\n     */\n    get isFit() {\n        return !!this.data;\n    }\n}\n//# sourceMappingURL=component.js.map","import { hasOwnProperty } from 'vega-util';\nimport { LATITUDE, LATITUDE2, LONGITUDE, LONGITUDE2, SHAPE } from '../../channel';\nimport { getFieldOrDatumDef } from '../../channeldef';\nimport { DataSourceType } from '../../data';\nimport { replaceExprRef } from '../../expr';\nimport { PROJECTION_PROPERTIES } from '../../projection';\nimport { GEOJSON } from '../../type';\nimport { deepEqual, duplicate, every } from '../../util';\nimport { isUnitModel } from '../model';\nimport { ProjectionComponent } from './component';\nexport function parseProjection(model) {\n    model.component.projection = isUnitModel(model) ? parseUnitProjection(model) : parseNonUnitProjections(model);\n}\nfunction parseUnitProjection(model) {\n    var _a;\n    if (model.hasProjection) {\n        const proj = replaceExprRef(model.specifiedProjection);\n        const fit = !(proj && (proj.scale != null || proj.translate != null));\n        const size = fit ? [model.getSizeSignalRef('width'), model.getSizeSignalRef('height')] : undefined;\n        const data = fit ? gatherFitData(model) : undefined;\n        const projComp = new ProjectionComponent(model.projectionName(true), Object.assign(Object.assign({}, ((_a = replaceExprRef(model.config.projection)) !== null && _a !== void 0 ? _a : {})), (proj !== null && proj !== void 0 ? proj : {})), size, data);\n        if (!projComp.get('type')) {\n            projComp.set('type', 'equalEarth', false);\n        }\n        return projComp;\n    }\n    return undefined;\n}\nfunction gatherFitData(model) {\n    const data = [];\n    const { encoding } = model;\n    for (const posssiblePair of [\n        [LONGITUDE, LATITUDE],\n        [LONGITUDE2, LATITUDE2]\n    ]) {\n        if (getFieldOrDatumDef(encoding[posssiblePair[0]]) || getFieldOrDatumDef(encoding[posssiblePair[1]])) {\n            data.push({\n                signal: model.getName(`geojson_${data.length}`)\n            });\n        }\n    }\n    if (model.channelHasField(SHAPE) && model.typedFieldDef(SHAPE).type === GEOJSON) {\n        data.push({\n            signal: model.getName(`geojson_${data.length}`)\n        });\n    }\n    if (data.length === 0) {\n        // main source is geojson, so we can just use that\n        data.push(model.requestDataName(DataSourceType.Main));\n    }\n    return data;\n}\nfunction mergeIfNoConflict(first, second) {\n    const allPropertiesShared = every(PROJECTION_PROPERTIES, prop => {\n        // neither has the property\n        if (!hasOwnProperty(first.explicit, prop) && !hasOwnProperty(second.explicit, prop)) {\n            return true;\n        }\n        // both have property and an equal value for property\n        if (hasOwnProperty(first.explicit, prop) &&\n            hasOwnProperty(second.explicit, prop) &&\n            // some properties might be signals or objects and require hashing for comparison\n            deepEqual(first.get(prop), second.get(prop))) {\n            return true;\n        }\n        return false;\n    });\n    const size = deepEqual(first.size, second.size);\n    if (size) {\n        if (allPropertiesShared) {\n            return first;\n        }\n        else if (deepEqual(first.explicit, {})) {\n            return second;\n        }\n        else if (deepEqual(second.explicit, {})) {\n            return first;\n        }\n    }\n    // if all properties don't match, let each unit spec have its own projection\n    return null;\n}\nfunction parseNonUnitProjections(model) {\n    if (model.children.length === 0) {\n        return undefined;\n    }\n    let nonUnitProjection;\n    // parse all children first\n    for (const child of model.children) {\n        parseProjection(child);\n    }\n    // analyze parsed projections, attempt to merge\n    const mergable = every(model.children, child => {\n        const projection = child.component.projection;\n        if (!projection) {\n            // child layer does not use a projection\n            return true;\n        }\n        else if (!nonUnitProjection) {\n            // cached 'projection' is null, cache this one\n            nonUnitProjection = projection;\n            return true;\n        }\n        else {\n            const merge = mergeIfNoConflict(nonUnitProjection, projection);\n            if (merge) {\n                nonUnitProjection = merge;\n            }\n            return !!merge;\n        }\n    });\n    // if cached one and all other children share the same projection,\n    if (nonUnitProjection && mergable) {\n        // so we can elevate it to the layer level\n        const name = model.projectionName(true);\n        const modelProjection = new ProjectionComponent(name, nonUnitProjection.specifiedProjection, nonUnitProjection.size, duplicate(nonUnitProjection.data));\n        // rename and assign all others as merged\n        for (const child of model.children) {\n            const projection = child.component.projection;\n            if (projection) {\n                if (projection.isFit) {\n                    modelProjection.data.push(...child.component.projection.data);\n                }\n                child.renameProjection(projection.get('name'), name);\n                projection.merged = true;\n            }\n        }\n        return modelProjection;\n    }\n    return undefined;\n}\n//# sourceMappingURL=parse.js.map","import { isXorY } from '../channel';\nimport * as log from '../log';\nimport { isConcatModel, isFacetModel, isLayerModel } from './model';\nexport function defaultScaleResolve(channel, model) {\n    if (isFacetModel(model)) {\n        return channel === 'theta' ? 'independent' : 'shared';\n    }\n    else if (isLayerModel(model)) {\n        return 'shared';\n    }\n    else if (isConcatModel(model)) {\n        return isXorY(channel) || channel === 'theta' || channel === 'radius' ? 'independent' : 'shared';\n    }\n    /* istanbul ignore next: should never reach here. */\n    throw new Error('invalid model type for resolve');\n}\nexport function parseGuideResolve(resolve, channel) {\n    const channelScaleResolve = resolve.scale[channel];\n    const guide = isXorY(channel) ? 'axis' : 'legend';\n    if (channelScaleResolve === 'independent') {\n        if (resolve[guide][channel] === 'shared') {\n            log.warn(log.message.independentScaleMeansIndependentGuide(channel));\n        }\n        return 'independent';\n    }\n    return resolve[guide][channel] || 'shared';\n}\n//# sourceMappingURL=resolve.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { isObject } from 'vega-util';\nimport { isXorY } from '../../channel';\nimport { keys } from '../../util';\nimport { isDataRefDomain, isVgRangeStep } from '../../vega.schema';\nimport { isConcatModel, isLayerModel } from '../model';\nimport { assembleSelectionScaleDomain } from '../selection/assemble';\nimport { assembleDomain } from './domain';\nexport function assembleScales(model) {\n    if (isLayerModel(model) || isConcatModel(model)) {\n        // For concat and layer, include scales of children too\n        return model.children.reduce((scales, child) => {\n            return scales.concat(assembleScales(child));\n        }, assembleScalesForModel(model));\n    }\n    else {\n        // For facet, child scales would not be included in the parent's scope.\n        // For unit, there is no child.\n        return assembleScalesForModel(model);\n    }\n}\nexport function assembleScalesForModel(model) {\n    return keys(model.component.scales).reduce((scales, channel) => {\n        const scaleComponent = model.component.scales[channel];\n        if (scaleComponent.merged) {\n            // Skipped merged scales\n            return scales;\n        }\n        const scale = scaleComponent.combine();\n        const { name, type, selectionExtent, domains: _d, range: _r, reverse } = scale, otherScaleProps = __rest(scale, [\"name\", \"type\", \"selectionExtent\", \"domains\", \"range\", \"reverse\"]);\n        const range = assembleScaleRange(scale.range, name, channel, model);\n        const domain = assembleDomain(model, channel);\n        const domainRaw = selectionExtent\n            ? assembleSelectionScaleDomain(model, selectionExtent, scaleComponent, domain)\n            : null;\n        scales.push(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({ name,\n            type }, (domain ? { domain } : {})), (domainRaw ? { domainRaw } : {})), { range }), (reverse !== undefined ? { reverse: reverse } : {})), otherScaleProps));\n        return scales;\n    }, []);\n}\nexport function assembleScaleRange(scaleRange, scaleName, channel, model) {\n    // add signals to x/y range\n    if (isXorY(channel)) {\n        if (isVgRangeStep(scaleRange)) {\n            // For width/height step, use a signal created in layout assemble instead of a constant step.\n            return {\n                step: { signal: `${scaleName}_step` }\n            };\n        }\n    }\n    else if (isObject(scaleRange) && isDataRefDomain(scaleRange)) {\n        return Object.assign(Object.assign({}, scaleRange), { data: model.lookupDataSource(scaleRange.data) });\n    }\n    return scaleRange;\n}\n//# sourceMappingURL=assemble.js.map","import { isArray } from 'vega-util';\nimport { some } from '../../util';\nimport { Split } from '../split';\nexport class ScaleComponent extends Split {\n    constructor(name, typeWithExplicit) {\n        super({}, // no initial explicit property\n        { name } // name as initial implicit property\n        );\n        this.merged = false;\n        this.setWithExplicit('type', typeWithExplicit);\n    }\n    /**\n     * Whether the scale definitely includes zero in the domain\n     */\n    domainDefinitelyIncludesZero() {\n        if (this.get('zero') !== false) {\n            return true;\n        }\n        return some(this.get('domains'), d => isArray(d) && d.length === 2 && d[0] <= 0 && d[1] >= 0);\n    }\n}\n//# sourceMappingURL=component.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { isObject, isString } from 'vega-util';\nimport { isAggregateOp, isArgmaxDef, isArgminDef, MULTIDOMAIN_SORT_OP_INDEX as UNIONDOMAIN_SORT_OP_INDEX, SHARED_DOMAIN_OPS } from '../../aggregate';\nimport { isBinning, isBinParams, isParameterExtent } from '../../bin';\nimport { getSecondaryRangeChannel, isScaleChannel } from '../../channel';\nimport { binRequiresRange, getFieldOrDatumDef, hasBandEnd, isDatumDef, isFieldDef, valueExpr, vgField } from '../../channeldef';\nimport { DataSourceType } from '../../data';\nimport * as log from '../../log';\nimport { hasDiscreteDomain, isDomainUnionWith, isParameterDomain } from '../../scale';\nimport { DEFAULT_SORT_OP, isSortArray, isSortByEncoding, isSortField } from '../../sort';\nimport { normalizeTimeUnit } from '../../timeunit';\nimport * as util from '../../util';\nimport { isDataRefDomain, isDataRefUnionedDomain, isFieldRefUnionDomain, isSignalRef } from '../../vega.schema';\nimport { getBinSignalName } from '../data/bin';\nimport { sortArrayIndexField } from '../data/calculate';\nimport { FACET_SCALE_PREFIX } from '../data/optimize';\nimport { isFacetModel, isUnitModel } from '../model';\nimport { SignalRefWrapper } from '../signal';\nimport { makeExplicit, makeImplicit, mergeValuesWithExplicit } from '../split';\nexport function parseScaleDomain(model) {\n    if (isUnitModel(model)) {\n        parseUnitScaleDomain(model);\n    }\n    else {\n        parseNonUnitScaleDomain(model);\n    }\n}\nfunction parseUnitScaleDomain(model) {\n    const localScaleComponents = model.component.scales;\n    for (const channel of util.keys(localScaleComponents)) {\n        const domains = parseDomainForChannel(model, channel);\n        const localScaleCmpt = localScaleComponents[channel];\n        localScaleCmpt.setWithExplicit('domains', domains);\n        parseSelectionDomain(model, channel);\n        if (model.component.data.isFaceted) {\n            // get resolve from closest facet parent as this decides whether we need to refer to cloned subtree or not\n            let facetParent = model;\n            while (!isFacetModel(facetParent) && facetParent.parent) {\n                facetParent = facetParent.parent;\n            }\n            const resolve = facetParent.component.resolve.scale[channel];\n            if (resolve === 'shared') {\n                for (const domain of domains.value) {\n                    // Replace the scale domain with data output from a cloned subtree after the facet.\n                    if (isDataRefDomain(domain)) {\n                        // use data from cloned subtree (which is the same as data but with a prefix added once)\n                        domain.data = FACET_SCALE_PREFIX + domain.data.replace(FACET_SCALE_PREFIX, '');\n                    }\n                }\n            }\n        }\n    }\n}\nfunction parseNonUnitScaleDomain(model) {\n    for (const child of model.children) {\n        parseScaleDomain(child);\n    }\n    const localScaleComponents = model.component.scales;\n    for (const channel of util.keys(localScaleComponents)) {\n        let domains;\n        let selectionExtent = null;\n        for (const child of model.children) {\n            const childComponent = child.component.scales[channel];\n            if (childComponent) {\n                if (domains === undefined) {\n                    domains = childComponent.getWithExplicit('domains');\n                }\n                else {\n                    domains = mergeValuesWithExplicit(domains, childComponent.getWithExplicit('domains'), 'domains', 'scale', domainsTieBreaker);\n                }\n                const se = childComponent.get('selectionExtent');\n                if (selectionExtent && se && selectionExtent.param !== se.param) {\n                    log.warn(log.message.NEEDS_SAME_SELECTION);\n                }\n                selectionExtent = se;\n            }\n        }\n        localScaleComponents[channel].setWithExplicit('domains', domains);\n        if (selectionExtent) {\n            localScaleComponents[channel].set('selectionExtent', selectionExtent, true);\n        }\n    }\n}\n/**\n * Remove unaggregated domain if it is not applicable\n * Add unaggregated domain if domain is not specified and config.scale.useUnaggregatedDomain is true.\n */\nfunction normalizeUnaggregatedDomain(domain, fieldDef, scaleType, scaleConfig) {\n    if (domain === 'unaggregated') {\n        const { valid, reason } = canUseUnaggregatedDomain(fieldDef, scaleType);\n        if (!valid) {\n            log.warn(reason);\n            return undefined;\n        }\n    }\n    else if (domain === undefined && scaleConfig.useUnaggregatedDomain) {\n        // Apply config if domain is not specified.\n        const { valid } = canUseUnaggregatedDomain(fieldDef, scaleType);\n        if (valid) {\n            return 'unaggregated';\n        }\n    }\n    return domain;\n}\nexport function parseDomainForChannel(model, channel) {\n    const scaleType = model.getScaleComponent(channel).get('type');\n    const { encoding } = model;\n    const domain = normalizeUnaggregatedDomain(model.scaleDomain(channel), model.typedFieldDef(channel), scaleType, model.config.scale);\n    if (domain !== model.scaleDomain(channel)) {\n        model.specifiedScales[channel] = Object.assign(Object.assign({}, model.specifiedScales[channel]), { domain });\n    }\n    // If channel is either X or Y then union them with X2 & Y2 if they exist\n    if (channel === 'x' && getFieldOrDatumDef(encoding.x2)) {\n        if (getFieldOrDatumDef(encoding.x)) {\n            return mergeValuesWithExplicit(parseSingleChannelDomain(scaleType, domain, model, 'x'), parseSingleChannelDomain(scaleType, domain, model, 'x2'), 'domain', 'scale', domainsTieBreaker);\n        }\n        else {\n            return parseSingleChannelDomain(scaleType, domain, model, 'x2');\n        }\n    }\n    else if (channel === 'y' && getFieldOrDatumDef(encoding.y2)) {\n        if (getFieldOrDatumDef(encoding.y)) {\n            return mergeValuesWithExplicit(parseSingleChannelDomain(scaleType, domain, model, 'y'), parseSingleChannelDomain(scaleType, domain, model, 'y2'), 'domain', 'scale', domainsTieBreaker);\n        }\n        else {\n            return parseSingleChannelDomain(scaleType, domain, model, 'y2');\n        }\n    }\n    return parseSingleChannelDomain(scaleType, domain, model, channel);\n}\nfunction mapDomainToDataSignal(domain, type, timeUnit) {\n    return domain.map(v => {\n        const data = valueExpr(v, { timeUnit, type });\n        return { signal: `{data: ${data}}` };\n    });\n}\nfunction convertDomainIfItIsDateTime(domain, type, timeUnit) {\n    var _a;\n    // explicit value\n    const normalizedTimeUnit = (_a = normalizeTimeUnit(timeUnit)) === null || _a === void 0 ? void 0 : _a.unit;\n    if (type === 'temporal' || normalizedTimeUnit) {\n        return mapDomainToDataSignal(domain, type, normalizedTimeUnit);\n    }\n    return [domain]; // Date time won't make sense\n}\nfunction parseSingleChannelDomain(scaleType, domain, model, channel) {\n    const { encoding } = model;\n    const fieldOrDatumDef = getFieldOrDatumDef(encoding[channel]);\n    const { type } = fieldOrDatumDef;\n    const timeUnit = fieldOrDatumDef['timeUnit'];\n    if (isDomainUnionWith(domain)) {\n        const defaultDomain = parseSingleChannelDomain(scaleType, undefined, model, channel);\n        const unionWith = convertDomainIfItIsDateTime(domain.unionWith, type, timeUnit);\n        return makeExplicit([...unionWith, ...defaultDomain.value]);\n    }\n    else if (isSignalRef(domain)) {\n        return makeExplicit([domain]);\n    }\n    else if (domain && domain !== 'unaggregated' && !isParameterDomain(domain)) {\n        return makeExplicit(convertDomainIfItIsDateTime(domain, type, timeUnit));\n    }\n    const stack = model.stack;\n    if (stack && channel === stack.fieldChannel) {\n        if (stack.offset === 'normalize') {\n            return makeImplicit([[0, 1]]);\n        }\n        const data = model.requestDataName(DataSourceType.Main);\n        return makeImplicit([\n            {\n                data,\n                field: model.vgField(channel, { suffix: 'start' })\n            },\n            {\n                data,\n                field: model.vgField(channel, { suffix: 'end' })\n            }\n        ]);\n    }\n    const sort = isScaleChannel(channel) && isFieldDef(fieldOrDatumDef) ? domainSort(model, channel, scaleType) : undefined;\n    if (isDatumDef(fieldOrDatumDef)) {\n        const d = convertDomainIfItIsDateTime([fieldOrDatumDef.datum], type, timeUnit);\n        return makeImplicit(d);\n    }\n    const fieldDef = fieldOrDatumDef; // now we can be sure it's a fieldDef\n    if (domain === 'unaggregated') {\n        const data = model.requestDataName(DataSourceType.Main);\n        const { field } = fieldOrDatumDef;\n        return makeImplicit([\n            {\n                data,\n                field: vgField({ field, aggregate: 'min' })\n            },\n            {\n                data,\n                field: vgField({ field, aggregate: 'max' })\n            }\n        ]);\n    }\n    else if (isBinning(fieldDef.bin)) {\n        if (hasDiscreteDomain(scaleType)) {\n            if (scaleType === 'bin-ordinal') {\n                // we can omit the domain as it is inferred from the `bins` property\n                return makeImplicit([]);\n            }\n            // ordinal bin scale takes domain from bin_range, ordered by bin start\n            // This is useful for both axis-based scale (x/y) and legend-based scale (other channels).\n            return makeImplicit([\n                {\n                    // If sort by aggregation of a specified sort field, we need to use RAW table,\n                    // so we can aggregate values for the scale independently from the main aggregation.\n                    data: util.isBoolean(sort)\n                        ? model.requestDataName(DataSourceType.Main)\n                        : model.requestDataName(DataSourceType.Raw),\n                    // Use range if we added it and the scale does not support computing a range as a signal.\n                    field: model.vgField(channel, binRequiresRange(fieldDef, channel) ? { binSuffix: 'range' } : {}),\n                    // we have to use a sort object if sort = true to make the sort correct by bin start\n                    sort: sort === true || !isObject(sort)\n                        ? {\n                            field: model.vgField(channel, {}),\n                            op: 'min' // min or max doesn't matter since we sort by the start of the bin range\n                        }\n                        : sort\n                }\n            ]);\n        }\n        else {\n            // continuous scales\n            const { bin } = fieldDef;\n            if (isBinning(bin)) {\n                const binSignal = getBinSignalName(model, fieldDef.field, bin);\n                return makeImplicit([\n                    new SignalRefWrapper(() => {\n                        const signal = model.getSignalName(binSignal);\n                        return `[${signal}.start, ${signal}.stop]`;\n                    })\n                ]);\n            }\n            else {\n                return makeImplicit([\n                    {\n                        data: model.requestDataName(DataSourceType.Main),\n                        field: model.vgField(channel, {})\n                    }\n                ]);\n            }\n        }\n    }\n    else if (fieldDef.timeUnit &&\n        util.contains(['time', 'utc'], scaleType) &&\n        hasBandEnd(fieldDef, isUnitModel(model) ? model.encoding[getSecondaryRangeChannel(channel)] : undefined, model.markDef, model.config)) {\n        const data = model.requestDataName(DataSourceType.Main);\n        return makeImplicit([\n            {\n                data,\n                field: model.vgField(channel)\n            },\n            {\n                data,\n                field: model.vgField(channel, { suffix: 'end' })\n            }\n        ]);\n    }\n    else if (sort) {\n        return makeImplicit([\n            {\n                // If sort by aggregation of a specified sort field, we need to use RAW table,\n                // so we can aggregate values for the scale independently from the main aggregation.\n                data: util.isBoolean(sort)\n                    ? model.requestDataName(DataSourceType.Main)\n                    : model.requestDataName(DataSourceType.Raw),\n                field: model.vgField(channel),\n                sort\n            }\n        ]);\n    }\n    else {\n        return makeImplicit([\n            {\n                data: model.requestDataName(DataSourceType.Main),\n                field: model.vgField(channel)\n            }\n        ]);\n    }\n}\nfunction normalizeSortField(sort, isStackedMeasure) {\n    const { op, field, order } = sort;\n    return Object.assign(Object.assign({ \n        // Apply default op\n        op: op !== null && op !== void 0 ? op : (isStackedMeasure ? 'sum' : DEFAULT_SORT_OP) }, (field ? { field: util.replacePathInField(field) } : {})), (order ? { order } : {}));\n}\nfunction parseSelectionDomain(model, channel) {\n    var _a;\n    const scale = model.component.scales[channel];\n    const spec = model.specifiedScales[channel].domain;\n    const bin = (_a = model.fieldDef(channel)) === null || _a === void 0 ? void 0 : _a.bin;\n    const domain = isParameterDomain(spec) && spec;\n    const extent = isBinParams(bin) && isParameterExtent(bin.extent) && bin.extent;\n    if (domain || extent) {\n        // As scale parsing occurs before selection parsing, we cannot set\n        // domainRaw directly. So instead, we store the selectionExtent on\n        // the scale component, and then add domainRaw during scale assembly.\n        scale.set('selectionExtent', domain !== null && domain !== void 0 ? domain : extent, true);\n    }\n}\nexport function domainSort(model, channel, scaleType) {\n    if (!hasDiscreteDomain(scaleType)) {\n        return undefined;\n    }\n    // save to cast as the only exception is the geojson type for shape, which would not generate a scale\n    const fieldDef = model.fieldDef(channel);\n    const sort = fieldDef.sort;\n    // if the sort is specified with array, use the derived sort index field\n    if (isSortArray(sort)) {\n        return {\n            op: 'min',\n            field: sortArrayIndexField(fieldDef, channel),\n            order: 'ascending'\n        };\n    }\n    const { stack } = model;\n    const stackDimensions = stack\n        ? new Set([...stack.groupbyFields, ...stack.stackBy.map(s => s.fieldDef.field)])\n        : undefined;\n    // Sorted based on an aggregate calculation over a specified sort field (only for ordinal scale)\n    if (isSortField(sort)) {\n        const isStackedMeasure = stack && !stackDimensions.has(sort.field);\n        return normalizeSortField(sort, isStackedMeasure);\n    }\n    else if (isSortByEncoding(sort)) {\n        const { encoding, order } = sort;\n        const fieldDefToSortBy = model.fieldDef(encoding);\n        const { aggregate, field } = fieldDefToSortBy;\n        const isStackedMeasure = stack && !stackDimensions.has(field);\n        if (isArgminDef(aggregate) || isArgmaxDef(aggregate)) {\n            return normalizeSortField({\n                field: vgField(fieldDefToSortBy),\n                order\n            }, isStackedMeasure);\n        }\n        else if (isAggregateOp(aggregate) || !aggregate) {\n            return normalizeSortField({\n                op: aggregate,\n                field,\n                order\n            }, isStackedMeasure);\n        }\n    }\n    else if (sort === 'descending') {\n        return {\n            op: 'min',\n            field: model.vgField(channel),\n            order: 'descending'\n        };\n    }\n    else if (util.contains(['ascending', undefined /* default =ascending*/], sort)) {\n        return true;\n    }\n    // sort == null\n    return undefined;\n}\n/**\n * Determine if a scale can use unaggregated domain.\n * @return {Boolean} Returns true if all of the following conditions apply:\n * 1. `scale.domain` is `unaggregated`\n * 2. Aggregation function is not `count` or `sum`\n * 3. The scale is quantitative or time scale.\n */\nexport function canUseUnaggregatedDomain(fieldDef, scaleType) {\n    const { aggregate, type } = fieldDef;\n    if (!aggregate) {\n        return {\n            valid: false,\n            reason: log.message.unaggregateDomainHasNoEffectForRawField(fieldDef)\n        };\n    }\n    if (isString(aggregate) && !SHARED_DOMAIN_OPS.has(aggregate)) {\n        return {\n            valid: false,\n            reason: log.message.unaggregateDomainWithNonSharedDomainOp(aggregate)\n        };\n    }\n    if (type === 'quantitative') {\n        if (scaleType === 'log') {\n            return {\n                valid: false,\n                reason: log.message.unaggregatedDomainWithLogScale(fieldDef)\n            };\n        }\n    }\n    return { valid: true };\n}\n/**\n * Tie breaker for mergeValuesWithExplicit for domains. We concat the specified values.\n */\nfunction domainsTieBreaker(v1, v2, property, propertyOf) {\n    if (v1.explicit && v2.explicit) {\n        log.warn(log.message.mergeConflictingDomainProperty(property, propertyOf, v1.value, v2.value));\n    }\n    // If equal score, concat the domains so that we union them later.\n    return { explicit: v1.explicit, value: [...v1.value, ...v2.value] };\n}\n/**\n * Converts an array of domains to a single Vega scale domain.\n */\nexport function mergeDomains(domains) {\n    const uniqueDomains = util.unique(domains.map(domain => {\n        // ignore sort property when computing the unique domains\n        if (isDataRefDomain(domain)) {\n            const { sort: _s } = domain, domainWithoutSort = __rest(domain, [\"sort\"]);\n            return domainWithoutSort;\n        }\n        return domain;\n    }), util.hash);\n    const sorts = util.unique(domains\n        .map(d => {\n        if (isDataRefDomain(d)) {\n            const s = d.sort;\n            if (s !== undefined && !util.isBoolean(s)) {\n                if ('op' in s && s.op === 'count') {\n                    // let's make sure that if op is count, we don't use a field\n                    delete s.field;\n                }\n                if (s.order === 'ascending') {\n                    // drop order: ascending as it is the default\n                    delete s.order;\n                }\n            }\n            return s;\n        }\n        return undefined;\n    })\n        .filter(s => s !== undefined), util.hash);\n    if (uniqueDomains.length === 0) {\n        return undefined;\n    }\n    else if (uniqueDomains.length === 1) {\n        const domain = domains[0];\n        if (isDataRefDomain(domain) && sorts.length > 0) {\n            let sort = sorts[0];\n            if (sorts.length > 1) {\n                log.warn(log.message.MORE_THAN_ONE_SORT);\n                sort = true;\n            }\n            else {\n                // Simplify domain sort by removing field and op when the field is the same as the domain field.\n                if (isObject(sort) && 'field' in sort) {\n                    const sortField = sort.field;\n                    if (domain.field === sortField) {\n                        sort = sort.order ? { order: sort.order } : true;\n                    }\n                }\n            }\n            return Object.assign(Object.assign({}, domain), { sort });\n        }\n        return domain;\n    }\n    // only keep sort properties that work with unioned domains\n    const unionDomainSorts = util.unique(sorts.map(s => {\n        if (util.isBoolean(s) || !('op' in s) || (isString(s.op) && s.op in UNIONDOMAIN_SORT_OP_INDEX)) {\n            return s;\n        }\n        log.warn(log.message.domainSortDropped(s));\n        return true;\n    }), util.hash);\n    let sort;\n    if (unionDomainSorts.length === 1) {\n        sort = unionDomainSorts[0];\n    }\n    else if (unionDomainSorts.length > 1) {\n        log.warn(log.message.MORE_THAN_ONE_SORT);\n        sort = true;\n    }\n    const allData = util.unique(domains.map(d => {\n        if (isDataRefDomain(d)) {\n            return d.data;\n        }\n        return null;\n    }), x => x);\n    if (allData.length === 1 && allData[0] !== null) {\n        // create a union domain of different fields with a single data source\n        const domain = Object.assign({ data: allData[0], fields: uniqueDomains.map(d => d.field) }, (sort ? { sort } : {}));\n        return domain;\n    }\n    return Object.assign({ fields: uniqueDomains }, (sort ? { sort } : {}));\n}\n/**\n * Return a field if a scale uses a single field.\n * Return `undefined` otherwise.\n */\nexport function getFieldFromDomain(domain) {\n    if (isDataRefDomain(domain) && isString(domain.field)) {\n        return domain.field;\n    }\n    else if (isDataRefUnionedDomain(domain)) {\n        let field;\n        for (const nonUnionDomain of domain.fields) {\n            if (isDataRefDomain(nonUnionDomain) && isString(nonUnionDomain.field)) {\n                if (!field) {\n                    field = nonUnionDomain.field;\n                }\n                else if (field !== nonUnionDomain.field) {\n                    log.warn(log.message.FACETED_INDEPENDENT_DIFFERENT_SOURCES);\n                    return field;\n                }\n            }\n        }\n        log.warn(log.message.FACETED_INDEPENDENT_SAME_FIELDS_DIFFERENT_SOURCES);\n        return field;\n    }\n    else if (isFieldRefUnionDomain(domain)) {\n        log.warn(log.message.FACETED_INDEPENDENT_SAME_SOURCE);\n        const field = domain.fields[0];\n        return isString(field) ? field : undefined;\n    }\n    return undefined;\n}\nexport function assembleDomain(model, channel) {\n    const scaleComponent = model.component.scales[channel];\n    const domains = scaleComponent.get('domains').map((domain) => {\n        // Correct references to data as the original domain's data was determined\n        // in parseScale, which happens before parseData. Thus the original data\n        // reference can be incorrect.\n        if (isDataRefDomain(domain)) {\n            domain.data = model.lookupDataSource(domain.data);\n        }\n        return domain;\n    });\n    // domains is an array that has to be merged into a single vega domain\n    return mergeDomains(domains);\n}\n//# sourceMappingURL=domain.js.map","import { getMainChannelFromOffsetChannel, isXorYOffset, SCALE_CHANNELS, SHAPE } from '../../channel';\nimport { getFieldOrDatumDef } from '../../channeldef';\nimport { channelHasNestedOffsetScale } from '../../encoding';\nimport * as log from '../../log';\nimport { GEOSHAPE } from '../../mark';\nimport { NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTIES, scaleCompatible, scaleTypePrecedence } from '../../scale';\nimport { GEOJSON } from '../../type';\nimport { keys } from '../../util';\nimport { isUnitModel } from '../model';\nimport { defaultScaleResolve } from '../resolve';\nimport { mergeValuesWithExplicit, tieBreakByComparing } from '../split';\nimport { ScaleComponent } from './component';\nimport { parseScaleDomain } from './domain';\nimport { parseScaleProperty, parseScaleRange } from './properties';\nimport { scaleType } from './type';\nexport function parseScales(model, { ignoreRange } = {}) {\n    parseScaleCore(model);\n    parseScaleDomain(model);\n    for (const prop of NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTIES) {\n        parseScaleProperty(model, prop);\n    }\n    if (!ignoreRange) {\n        // range depends on zero\n        parseScaleRange(model);\n    }\n}\nexport function parseScaleCore(model) {\n    if (isUnitModel(model)) {\n        model.component.scales = parseUnitScaleCore(model);\n    }\n    else {\n        model.component.scales = parseNonUnitScaleCore(model);\n    }\n}\n/**\n * Parse scales for all channels of a model.\n */\nfunction parseUnitScaleCore(model) {\n    const { encoding, mark, markDef } = model;\n    const scaleComponents = {};\n    for (const channel of SCALE_CHANNELS) {\n        const fieldOrDatumDef = getFieldOrDatumDef(encoding[channel]); // must be typed def to have scale\n        // Don't generate scale for shape of geoshape\n        if (fieldOrDatumDef && mark === GEOSHAPE && channel === SHAPE && fieldOrDatumDef.type === GEOJSON) {\n            continue;\n        }\n        let specifiedScale = fieldOrDatumDef && fieldOrDatumDef['scale'];\n        if (isXorYOffset(channel)) {\n            const mainChannel = getMainChannelFromOffsetChannel(channel);\n            if (!channelHasNestedOffsetScale(encoding, mainChannel)) {\n                // Don't generate scale when the offset encoding shouldn't yield a nested scale\n                if (specifiedScale) {\n                    log.warn(log.message.offsetEncodingScaleIgnored(channel));\n                }\n                continue;\n            }\n        }\n        if (fieldOrDatumDef && specifiedScale !== null && specifiedScale !== false) {\n            specifiedScale !== null && specifiedScale !== void 0 ? specifiedScale : (specifiedScale = {});\n            const hasNestedOffsetScale = channelHasNestedOffsetScale(encoding, channel);\n            const sType = scaleType(specifiedScale, channel, fieldOrDatumDef, markDef, hasNestedOffsetScale);\n            scaleComponents[channel] = new ScaleComponent(model.scaleName(`${channel}`, true), {\n                value: sType,\n                explicit: specifiedScale.type === sType\n            });\n        }\n    }\n    return scaleComponents;\n}\nconst scaleTypeTieBreaker = tieBreakByComparing((st1, st2) => scaleTypePrecedence(st1) - scaleTypePrecedence(st2));\nfunction parseNonUnitScaleCore(model) {\n    var _a;\n    var _b;\n    const scaleComponents = (model.component.scales = {});\n    const scaleTypeWithExplicitIndex = {};\n    const resolve = model.component.resolve;\n    // Parse each child scale and determine if a particular channel can be merged.\n    for (const child of model.children) {\n        parseScaleCore(child);\n        // Instead of always merging right away -- check if it is compatible to merge first!\n        for (const channel of keys(child.component.scales)) {\n            // if resolve is undefined, set default first\n            (_a = (_b = resolve.scale)[channel]) !== null && _a !== void 0 ? _a : (_b[channel] = defaultScaleResolve(channel, model));\n            if (resolve.scale[channel] === 'shared') {\n                const explicitScaleType = scaleTypeWithExplicitIndex[channel];\n                const childScaleType = child.component.scales[channel].getWithExplicit('type');\n                if (explicitScaleType) {\n                    if (scaleCompatible(explicitScaleType.value, childScaleType.value)) {\n                        // merge scale component if type are compatible\n                        scaleTypeWithExplicitIndex[channel] = mergeValuesWithExplicit(explicitScaleType, childScaleType, 'type', 'scale', scaleTypeTieBreaker);\n                    }\n                    else {\n                        // Otherwise, update conflicting channel to be independent\n                        resolve.scale[channel] = 'independent';\n                        // Remove from the index so they don't get merged\n                        delete scaleTypeWithExplicitIndex[channel];\n                    }\n                }\n                else {\n                    scaleTypeWithExplicitIndex[channel] = childScaleType;\n                }\n            }\n        }\n    }\n    // Merge each channel listed in the index\n    for (const channel of keys(scaleTypeWithExplicitIndex)) {\n        // Create new merged scale component\n        const name = model.scaleName(channel, true);\n        const typeWithExplicit = scaleTypeWithExplicitIndex[channel];\n        scaleComponents[channel] = new ScaleComponent(name, typeWithExplicit);\n        // rename each child and mark them as merged\n        for (const child of model.children) {\n            const childScale = child.component.scales[channel];\n            if (childScale) {\n                child.renameScale(childScale.get('name'), name);\n                childScale.merged = true;\n            }\n        }\n    }\n    return scaleComponents;\n}\n//# sourceMappingURL=parse.js.map","import { isArray } from 'vega-util';\nimport { isBinned, isBinning, isBinParams } from '../../bin';\nimport { COLOR, FILL, getSecondaryRangeChannel, isXorY, isXorYOffset, POLAR_POSITION_SCALE_CHANNELS, POSITION_SCALE_CHANNELS, STROKE } from '../../channel';\nimport { getFieldDef, getFieldOrDatumDef, isFieldDef, valueExpr } from '../../channeldef';\nimport { isDateTime } from '../../datetime';\nimport { channelHasNestedOffsetScale } from '../../encoding';\nimport * as log from '../../log';\nimport { channelScalePropertyIncompatability, hasContinuousDomain, isContinuousToContinuous, isContinuousToDiscrete, ScaleType, scaleTypeSupportProperty } from '../../scale';\nimport * as util from '../../util';\nimport { contains, getFirstDefined, keys } from '../../util';\nimport { isSignalRef } from '../../vega.schema';\nimport { getBinSignalName } from '../data/bin';\nimport { isUnitModel } from '../model';\nimport { SignalRefWrapper } from '../signal';\nimport { mergeValuesWithExplicit, tieBreakByComparing } from '../split';\nimport { parseUnitScaleRange } from './range';\nexport function parseScaleProperty(model, property) {\n    if (isUnitModel(model)) {\n        parseUnitScaleProperty(model, property);\n    }\n    else {\n        parseNonUnitScaleProperty(model, property);\n    }\n}\nfunction parseUnitScaleProperty(model, property) {\n    const localScaleComponents = model.component.scales;\n    const { config, encoding, markDef, specifiedScales } = model;\n    for (const channel of keys(localScaleComponents)) {\n        const specifiedScale = specifiedScales[channel];\n        const localScaleCmpt = localScaleComponents[channel];\n        const mergedScaleCmpt = model.getScaleComponent(channel);\n        const fieldOrDatumDef = getFieldOrDatumDef(encoding[channel]);\n        const specifiedValue = specifiedScale[property];\n        const scaleType = mergedScaleCmpt.get('type');\n        const scalePadding = mergedScaleCmpt.get('padding');\n        const scalePaddingInner = mergedScaleCmpt.get('paddingInner');\n        const supportedByScaleType = scaleTypeSupportProperty(scaleType, property);\n        const channelIncompatability = channelScalePropertyIncompatability(channel, property);\n        if (specifiedValue !== undefined) {\n            // If there is a specified value, check if it is compatible with scale type and channel\n            if (!supportedByScaleType) {\n                log.warn(log.message.scalePropertyNotWorkWithScaleType(scaleType, property, channel));\n            }\n            else if (channelIncompatability) {\n                // channel\n                log.warn(channelIncompatability);\n            }\n        }\n        if (supportedByScaleType && channelIncompatability === undefined) {\n            if (specifiedValue !== undefined) {\n                const timeUnit = fieldOrDatumDef['timeUnit'];\n                const type = fieldOrDatumDef.type;\n                switch (property) {\n                    // domainMax/Min to signal if the value is a datetime object\n                    case 'domainMax':\n                    case 'domainMin':\n                        if (isDateTime(specifiedScale[property]) || type === 'temporal' || timeUnit) {\n                            localScaleCmpt.set(property, { signal: valueExpr(specifiedScale[property], { type, timeUnit }) }, true);\n                        }\n                        else {\n                            localScaleCmpt.set(property, specifiedScale[property], true);\n                        }\n                        break;\n                    default:\n                        localScaleCmpt.copyKeyFromObject(property, specifiedScale);\n                }\n            }\n            else {\n                const value = property in scaleRules\n                    ? scaleRules[property]({\n                        model,\n                        channel,\n                        fieldOrDatumDef,\n                        scaleType,\n                        scalePadding,\n                        scalePaddingInner,\n                        domain: specifiedScale.domain,\n                        domainMin: specifiedScale.domainMin,\n                        domainMax: specifiedScale.domainMax,\n                        markDef,\n                        config,\n                        hasNestedOffsetScale: channelHasNestedOffsetScale(encoding, channel),\n                        hasSecondaryRangeChannel: !!encoding[getSecondaryRangeChannel(channel)]\n                    })\n                    : config.scale[property];\n                if (value !== undefined) {\n                    localScaleCmpt.set(property, value, false);\n                }\n            }\n        }\n    }\n}\nexport const scaleRules = {\n    bins: ({ model, fieldOrDatumDef }) => (isFieldDef(fieldOrDatumDef) ? bins(model, fieldOrDatumDef) : undefined),\n    interpolate: ({ channel, fieldOrDatumDef }) => interpolate(channel, fieldOrDatumDef.type),\n    nice: ({ scaleType, channel, domain, domainMin, domainMax, fieldOrDatumDef }) => nice(scaleType, channel, domain, domainMin, domainMax, fieldOrDatumDef),\n    padding: ({ channel, scaleType, fieldOrDatumDef, markDef, config }) => padding(channel, scaleType, config.scale, fieldOrDatumDef, markDef, config.bar),\n    paddingInner: ({ scalePadding, channel, markDef, scaleType, config, hasNestedOffsetScale }) => paddingInner(scalePadding, channel, markDef.type, scaleType, config.scale, hasNestedOffsetScale),\n    paddingOuter: ({ scalePadding, channel, scaleType, scalePaddingInner, config, hasNestedOffsetScale }) => paddingOuter(scalePadding, channel, scaleType, scalePaddingInner, config.scale, hasNestedOffsetScale),\n    reverse: ({ fieldOrDatumDef, scaleType, channel, config }) => {\n        const sort = isFieldDef(fieldOrDatumDef) ? fieldOrDatumDef.sort : undefined;\n        return reverse(scaleType, sort, channel, config.scale);\n    },\n    zero: ({ channel, fieldOrDatumDef, domain, markDef, scaleType, config, hasSecondaryRangeChannel }) => zero(channel, fieldOrDatumDef, domain, markDef, scaleType, config.scale, hasSecondaryRangeChannel)\n};\n// This method is here rather than in range.ts to avoid circular dependency.\nexport function parseScaleRange(model) {\n    if (isUnitModel(model)) {\n        parseUnitScaleRange(model);\n    }\n    else {\n        parseNonUnitScaleProperty(model, 'range');\n    }\n}\nexport function parseNonUnitScaleProperty(model, property) {\n    const localScaleComponents = model.component.scales;\n    for (const child of model.children) {\n        if (property === 'range') {\n            parseScaleRange(child);\n        }\n        else {\n            parseScaleProperty(child, property);\n        }\n    }\n    for (const channel of keys(localScaleComponents)) {\n        let valueWithExplicit;\n        for (const child of model.children) {\n            const childComponent = child.component.scales[channel];\n            if (childComponent) {\n                const childValueWithExplicit = childComponent.getWithExplicit(property);\n                valueWithExplicit = mergeValuesWithExplicit(valueWithExplicit, childValueWithExplicit, property, 'scale', tieBreakByComparing((v1, v2) => {\n                    switch (property) {\n                        case 'range':\n                            // For step, prefer larger step\n                            if (v1.step && v2.step) {\n                                return v1.step - v2.step;\n                            }\n                            return 0;\n                        // TODO: precedence rule for other properties\n                    }\n                    return 0;\n                }));\n            }\n        }\n        localScaleComponents[channel].setWithExplicit(property, valueWithExplicit);\n    }\n}\nexport function bins(model, fieldDef) {\n    const bin = fieldDef.bin;\n    if (isBinning(bin)) {\n        const binSignal = getBinSignalName(model, fieldDef.field, bin);\n        return new SignalRefWrapper(() => {\n            return model.getSignalName(binSignal);\n        });\n    }\n    else if (isBinned(bin) && isBinParams(bin) && bin.step !== undefined) {\n        // start and stop will be determined from the scale domain\n        return {\n            step: bin.step\n        };\n    }\n    return undefined;\n}\nexport function interpolate(channel, type) {\n    if (contains([COLOR, FILL, STROKE], channel) && type !== 'nominal') {\n        return 'hcl';\n    }\n    return undefined;\n}\nexport function nice(scaleType, channel, specifiedDomain, domainMin, domainMax, fieldOrDatumDef) {\n    var _a;\n    if (((_a = getFieldDef(fieldOrDatumDef)) === null || _a === void 0 ? void 0 : _a.bin) ||\n        isArray(specifiedDomain) ||\n        domainMax != null ||\n        domainMin != null ||\n        util.contains([ScaleType.TIME, ScaleType.UTC], scaleType)) {\n        return undefined;\n    }\n    return isXorY(channel) ? true : undefined;\n}\nexport function padding(channel, scaleType, scaleConfig, fieldOrDatumDef, markDef, barConfig) {\n    if (isXorY(channel)) {\n        if (isContinuousToContinuous(scaleType)) {\n            if (scaleConfig.continuousPadding !== undefined) {\n                return scaleConfig.continuousPadding;\n            }\n            const { type, orient } = markDef;\n            if (type === 'bar' && !(isFieldDef(fieldOrDatumDef) && (fieldOrDatumDef.bin || fieldOrDatumDef.timeUnit))) {\n                if ((orient === 'vertical' && channel === 'x') || (orient === 'horizontal' && channel === 'y')) {\n                    return barConfig.continuousBandSize;\n                }\n            }\n        }\n        if (scaleType === ScaleType.POINT) {\n            return scaleConfig.pointPadding;\n        }\n    }\n    return undefined;\n}\nexport function paddingInner(paddingValue, channel, mark, scaleType, scaleConfig, hasNestedOffsetScale = false) {\n    if (paddingValue !== undefined) {\n        // If user has already manually specified \"padding\", no need to add default paddingInner.\n        return undefined;\n    }\n    if (isXorY(channel)) {\n        // Padding is only set for X and Y by default.\n        // Basically it doesn't make sense to add padding for color and size.\n        // paddingOuter would only be called if it's a band scale, just return the default for bandScale.\n        const { bandPaddingInner, barBandPaddingInner, rectBandPaddingInner, bandWithNestedOffsetPaddingInner } = scaleConfig;\n        if (hasNestedOffsetScale) {\n            return bandWithNestedOffsetPaddingInner;\n        }\n        return getFirstDefined(bandPaddingInner, mark === 'bar' ? barBandPaddingInner : rectBandPaddingInner);\n    }\n    else if (isXorYOffset(channel)) {\n        if (scaleType === ScaleType.BAND) {\n            return scaleConfig.offsetBandPaddingInner;\n        }\n    }\n    return undefined;\n}\nexport function paddingOuter(paddingValue, channel, scaleType, paddingInnerValue, scaleConfig, hasNestedOffsetScale = false) {\n    if (paddingValue !== undefined) {\n        // If user has already manually specified \"padding\", no need to add default paddingOuter.\n        return undefined;\n    }\n    if (isXorY(channel)) {\n        const { bandPaddingOuter, bandWithNestedOffsetPaddingOuter } = scaleConfig;\n        if (hasNestedOffsetScale) {\n            return bandWithNestedOffsetPaddingOuter;\n        }\n        // Padding is only set for X and Y by default.\n        // Basically it doesn't make sense to add padding for color and size.\n        if (scaleType === ScaleType.BAND) {\n            return getFirstDefined(bandPaddingOuter, \n            /* By default, paddingOuter is paddingInner / 2. The reason is that\n              size (width/height) = step * (cardinality - paddingInner + 2 * paddingOuter).\n              and we want the width/height to be integer by default.\n              Note that step (by default) and cardinality are integers.) */\n            isSignalRef(paddingInnerValue) ? { signal: `${paddingInnerValue.signal}/2` } : paddingInnerValue / 2);\n        }\n    }\n    else if (isXorYOffset(channel)) {\n        if (scaleType === ScaleType.POINT) {\n            return 0.5; // so the point positions align with centers of band scales.\n        }\n        else if (scaleType === ScaleType.BAND) {\n            return scaleConfig.offsetBandPaddingOuter;\n        }\n    }\n    return undefined;\n}\nexport function reverse(scaleType, sort, channel, scaleConfig) {\n    if (channel === 'x' && scaleConfig.xReverse !== undefined) {\n        if (hasContinuousDomain(scaleType) && sort === 'descending') {\n            if (isSignalRef(scaleConfig.xReverse)) {\n                return { signal: `!${scaleConfig.xReverse.signal}` };\n            }\n            else {\n                return !scaleConfig.xReverse;\n            }\n        }\n        return scaleConfig.xReverse;\n    }\n    if (hasContinuousDomain(scaleType) && sort === 'descending') {\n        // For continuous domain scales, Vega does not support domain sort.\n        // Thus, we reverse range instead if sort is descending\n        return true;\n    }\n    return undefined;\n}\nexport function zero(channel, fieldDef, specifiedDomain, markDef, scaleType, scaleConfig, hasSecondaryRangeChannel) {\n    // If users explicitly provide a domain, we should not augment zero as that will be unexpected.\n    const hasCustomDomain = !!specifiedDomain && specifiedDomain !== 'unaggregated';\n    if (hasCustomDomain) {\n        if (hasContinuousDomain(scaleType)) {\n            if (isArray(specifiedDomain)) {\n                const first = specifiedDomain[0];\n                const last = specifiedDomain[specifiedDomain.length - 1];\n                if (first <= 0 && last >= 0) {\n                    // if the domain includes zero, make zero remains true\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n    // If there is no custom domain, return configZero value (=`true` as default) only for the following cases:\n    // 1) using quantitative field with size\n    // While this can be either ratio or interval fields, our assumption is that\n    // ratio are more common. However, if the scaleType is discretizing scale, we want to return\n    // false so that range doesn't start at zero\n    if (channel === 'size' && fieldDef.type === 'quantitative' && !isContinuousToDiscrete(scaleType)) {\n        return true;\n    }\n    // 2) non-binned, quantitative x-scale or y-scale\n    // (For binning, we should not include zero by default because binning are calculated without zero.)\n    // (For area/bar charts with ratio scale chart, we should always include zero.)\n    if (!(isFieldDef(fieldDef) && fieldDef.bin) &&\n        util.contains([...POSITION_SCALE_CHANNELS, ...POLAR_POSITION_SCALE_CHANNELS], channel)) {\n        const { orient, type } = markDef;\n        if (contains(['bar', 'area', 'line', 'trail'], type)) {\n            if ((orient === 'horizontal' && channel === 'y') || (orient === 'vertical' && channel === 'x')) {\n                return false;\n            }\n        }\n        if (contains(['bar', 'area'], type) && !hasSecondaryRangeChannel) {\n            return true;\n        }\n        return scaleConfig === null || scaleConfig === void 0 ? void 0 : scaleConfig.zero;\n    }\n    return false;\n}\n//# sourceMappingURL=properties.js.map","import { isArray, isNumber, isObject } from 'vega-util';\nimport { isBinning } from '../../bin';\nimport { ANGLE, COLOR, FILL, FILLOPACITY, getOffsetScaleChannel, getSizeChannel, isXorY, isXorYOffset, OPACITY, RADIUS, SCALE_CHANNELS, SHAPE, SIZE, STROKE, STROKEDASH, STROKEOPACITY, STROKEWIDTH, THETA, X, XOFFSET, Y, YOFFSET } from '../../channel';\nimport { getFieldOrDatumDef, isFieldOrDatumDef } from '../../channeldef';\nimport { getViewConfigDiscreteSize, getViewConfigDiscreteStep } from '../../config';\nimport { DataSourceType } from '../../data';\nimport { channelHasFieldOrDatum } from '../../encoding';\nimport * as log from '../../log';\nimport { channelScalePropertyIncompatability, hasContinuousDomain, hasDiscreteDomain, isContinuousToDiscrete, isExtendedScheme, scaleTypeSupportProperty } from '../../scale';\nimport { getStepFor, isStep } from '../../spec/base';\nimport { isDiscrete } from '../../type';\nimport * as util from '../../util';\nimport { isSignalRef } from '../../vega.schema';\nimport { exprFromSignalRefOrValue, signalOrStringValue } from '../common';\nimport { getBinSignalName } from '../data/bin';\nimport { SignalRefWrapper } from '../signal';\nimport { makeExplicit, makeImplicit } from '../split';\nexport const RANGE_PROPERTIES = ['range', 'scheme'];\nexport function parseUnitScaleRange(model) {\n    const localScaleComponents = model.component.scales;\n    // use SCALE_CHANNELS instead of scales[channel] to ensure that x, y come first!\n    for (const channel of SCALE_CHANNELS) {\n        const localScaleCmpt = localScaleComponents[channel];\n        if (!localScaleCmpt) {\n            continue;\n        }\n        const rangeWithExplicit = parseRangeForChannel(channel, model);\n        localScaleCmpt.setWithExplicit('range', rangeWithExplicit);\n    }\n}\nfunction getBinStepSignal(model, channel) {\n    const fieldDef = model.fieldDef(channel);\n    if (fieldDef === null || fieldDef === void 0 ? void 0 : fieldDef.bin) {\n        const { bin, field } = fieldDef;\n        const sizeType = getSizeChannel(channel);\n        const sizeSignal = model.getName(sizeType);\n        if (isObject(bin) && bin.binned && bin.step !== undefined) {\n            return new SignalRefWrapper(() => {\n                const scaleName = model.scaleName(channel);\n                const binCount = `(domain(\"${scaleName}\")[1] - domain(\"${scaleName}\")[0]) / ${bin.step}`;\n                return `${model.getSignalName(sizeSignal)} / (${binCount})`;\n            });\n        }\n        else if (isBinning(bin)) {\n            const binSignal = getBinSignalName(model, field, bin);\n            // TODO: extract this to be range step signal\n            return new SignalRefWrapper(() => {\n                const updatedName = model.getSignalName(binSignal);\n                const binCount = `(${updatedName}.stop - ${updatedName}.start) / ${updatedName}.step`;\n                return `${model.getSignalName(sizeSignal)} / (${binCount})`;\n            });\n        }\n    }\n    return undefined;\n}\n/**\n * Return mixins that includes one of the Vega range types (explicit range, range.step, range.scheme).\n */\nexport function parseRangeForChannel(channel, model) {\n    const specifiedScale = model.specifiedScales[channel];\n    const { size } = model;\n    const mergedScaleCmpt = model.getScaleComponent(channel);\n    const scaleType = mergedScaleCmpt.get('type');\n    // Check if any of the range properties is specified.\n    // If so, check if it is compatible and make sure that we only output one of the properties\n    for (const property of RANGE_PROPERTIES) {\n        if (specifiedScale[property] !== undefined) {\n            const supportedByScaleType = scaleTypeSupportProperty(scaleType, property);\n            const channelIncompatability = channelScalePropertyIncompatability(channel, property);\n            if (!supportedByScaleType) {\n                log.warn(log.message.scalePropertyNotWorkWithScaleType(scaleType, property, channel));\n            }\n            else if (channelIncompatability) {\n                // channel\n                log.warn(channelIncompatability);\n            }\n            else {\n                switch (property) {\n                    case 'range': {\n                        const range = specifiedScale.range;\n                        if (isArray(range)) {\n                            if (isXorY(channel)) {\n                                return makeExplicit(range.map(v => {\n                                    if (v === 'width' || v === 'height') {\n                                        // get signal for width/height\n                                        // Just like default range logic below, we use SignalRefWrapper to account for potential merges and renames.\n                                        const sizeSignal = model.getName(v);\n                                        const getSignalName = model.getSignalName.bind(model);\n                                        return SignalRefWrapper.fromName(getSignalName, sizeSignal);\n                                    }\n                                    return v;\n                                }));\n                            }\n                        }\n                        else if (isObject(range)) {\n                            return makeExplicit({\n                                data: model.requestDataName(DataSourceType.Main),\n                                field: range.field,\n                                sort: { op: 'min', field: model.vgField(channel) }\n                            });\n                        }\n                        return makeExplicit(range);\n                    }\n                    case 'scheme':\n                        return makeExplicit(parseScheme(specifiedScale[property]));\n                }\n            }\n        }\n    }\n    const sizeChannel = channel === X || channel === 'xOffset' ? 'width' : 'height';\n    const sizeValue = size[sizeChannel];\n    if (isStep(sizeValue)) {\n        if (isXorY(channel)) {\n            if (hasDiscreteDomain(scaleType)) {\n                const step = getPositionStep(sizeValue, model, channel);\n                // Need to be explicit so layer with step wins over layer without step\n                if (step) {\n                    return makeExplicit({ step });\n                }\n            }\n            else {\n                log.warn(log.message.stepDropped(sizeChannel));\n            }\n        }\n        else if (isXorYOffset(channel)) {\n            const positionChannel = channel === XOFFSET ? 'x' : 'y';\n            const positionScaleCmpt = model.getScaleComponent(positionChannel);\n            const positionScaleType = positionScaleCmpt.get('type');\n            if (positionScaleType === 'band') {\n                const step = getOffsetStep(sizeValue, scaleType);\n                if (step) {\n                    return makeExplicit(step);\n                }\n            }\n        }\n    }\n    const { rangeMin, rangeMax } = specifiedScale;\n    const d = defaultRange(channel, model);\n    if ((rangeMin !== undefined || rangeMax !== undefined) &&\n        // it's ok to check just rangeMin's compatibility since rangeMin/rangeMax are the same\n        scaleTypeSupportProperty(scaleType, 'rangeMin') &&\n        isArray(d) &&\n        d.length === 2) {\n        return makeExplicit([rangeMin !== null && rangeMin !== void 0 ? rangeMin : d[0], rangeMax !== null && rangeMax !== void 0 ? rangeMax : d[1]]);\n    }\n    return makeImplicit(d);\n}\nfunction parseScheme(scheme) {\n    if (isExtendedScheme(scheme)) {\n        return Object.assign({ scheme: scheme.name }, util.omit(scheme, ['name']));\n    }\n    return { scheme };\n}\nfunction defaultRange(channel, model) {\n    const { size, config, mark, encoding } = model;\n    const getSignalName = model.getSignalName.bind(model);\n    const { type } = getFieldOrDatumDef(encoding[channel]);\n    const mergedScaleCmpt = model.getScaleComponent(channel);\n    const scaleType = mergedScaleCmpt.get('type');\n    const { domain, domainMid } = model.specifiedScales[channel];\n    switch (channel) {\n        case X:\n        case Y: {\n            // If there is no explicit width/height for discrete x/y scales\n            if (util.contains(['point', 'band'], scaleType)) {\n                const positionSize = getDiscretePositionSize(channel, size, config.view);\n                if (isStep(positionSize)) {\n                    const step = getPositionStep(positionSize, model, channel);\n                    return { step };\n                }\n            }\n            // If step is null, use zero to width or height.\n            // Note that we use SignalRefWrapper to account for potential merges and renames.\n            const sizeType = getSizeChannel(channel);\n            const sizeSignal = model.getName(sizeType);\n            if (channel === Y && hasContinuousDomain(scaleType)) {\n                // For y continuous scale, we have to start from the height as the bottom part has the max value.\n                return [SignalRefWrapper.fromName(getSignalName, sizeSignal), 0];\n            }\n            else {\n                return [0, SignalRefWrapper.fromName(getSignalName, sizeSignal)];\n            }\n        }\n        case XOFFSET:\n        case YOFFSET:\n            return getOffsetRange(channel, model, scaleType);\n        case SIZE: {\n            // TODO: support custom rangeMin, rangeMax\n            const zero = model.component.scales[channel].get('zero');\n            const rangeMin = sizeRangeMin(mark, zero, config);\n            const rangeMax = sizeRangeMax(mark, size, model, config);\n            if (isContinuousToDiscrete(scaleType)) {\n                return interpolateRange(rangeMin, rangeMax, defaultContinuousToDiscreteCount(scaleType, config, domain, channel));\n            }\n            else {\n                return [rangeMin, rangeMax];\n            }\n        }\n        case THETA:\n            return [0, Math.PI * 2];\n        case ANGLE:\n            // TODO: add config.scale.min/maxAngleDegree (for point and text) and config.scale.min/maxAngleRadian (for arc) once we add arc marks.\n            // (It's weird to add just config.scale.min/maxAngleDegree for now)\n            return [0, 360];\n        case RADIUS: {\n            // max radius = half od min(width,height)\n            return [\n                0,\n                new SignalRefWrapper(() => {\n                    const w = model.getSignalName('width');\n                    const h = model.getSignalName('height');\n                    return `min(${w},${h})/2`;\n                })\n            ];\n        }\n        case STROKEWIDTH:\n            // TODO: support custom rangeMin, rangeMax\n            return [config.scale.minStrokeWidth, config.scale.maxStrokeWidth];\n        case STROKEDASH:\n            return [\n                // TODO: add this to Vega's config.range?\n                [1, 0],\n                [4, 2],\n                [2, 1],\n                [1, 1],\n                [1, 2, 4, 2]\n            ];\n        case SHAPE:\n            return 'symbol';\n        case COLOR:\n        case FILL:\n        case STROKE:\n            if (scaleType === 'ordinal') {\n                // Only nominal data uses ordinal scale by default\n                return type === 'nominal' ? 'category' : 'ordinal';\n            }\n            else {\n                if (domainMid !== undefined) {\n                    return 'diverging';\n                }\n                else {\n                    return mark === 'rect' || mark === 'geoshape' ? 'heatmap' : 'ramp';\n                }\n            }\n        case OPACITY:\n        case FILLOPACITY:\n        case STROKEOPACITY:\n            // TODO: support custom rangeMin, rangeMax\n            return [config.scale.minOpacity, config.scale.maxOpacity];\n    }\n}\nfunction getPositionStep(step, model, channel) {\n    var _a, _b, _c, _d, _e;\n    const { encoding } = model;\n    const mergedScaleCmpt = model.getScaleComponent(channel);\n    const offsetChannel = getOffsetScaleChannel(channel);\n    const offsetDef = encoding[offsetChannel];\n    const stepFor = getStepFor({ step, offsetIsDiscrete: isFieldOrDatumDef(offsetDef) && isDiscrete(offsetDef.type) });\n    if (stepFor === 'offset' && channelHasFieldOrDatum(encoding, offsetChannel)) {\n        const offsetScaleCmpt = model.getScaleComponent(offsetChannel);\n        const offsetScaleName = model.scaleName(offsetChannel);\n        let stepCount = `domain('${offsetScaleName}').length`;\n        if (offsetScaleCmpt.get('type') === 'band') {\n            const offsetPaddingInner = (_b = (_a = offsetScaleCmpt.get('paddingInner')) !== null && _a !== void 0 ? _a : offsetScaleCmpt.get('padding')) !== null && _b !== void 0 ? _b : 0;\n            const offsetPaddingOuter = (_d = (_c = offsetScaleCmpt.get('paddingOuter')) !== null && _c !== void 0 ? _c : offsetScaleCmpt.get('padding')) !== null && _d !== void 0 ? _d : 0;\n            stepCount = `bandspace(${stepCount}, ${offsetPaddingInner}, ${offsetPaddingOuter})`;\n        }\n        const paddingInner = (_e = mergedScaleCmpt.get('paddingInner')) !== null && _e !== void 0 ? _e : mergedScaleCmpt.get('padding');\n        return {\n            signal: `${step.step} * ${stepCount} / (1-${exprFromSignalRefOrValue(paddingInner)})`\n        };\n    }\n    else {\n        return step.step;\n    }\n}\nfunction getOffsetStep(step, offsetScaleType) {\n    const stepFor = getStepFor({ step, offsetIsDiscrete: hasDiscreteDomain(offsetScaleType) });\n    if (stepFor === 'offset') {\n        return { step: step.step };\n    }\n    return undefined;\n}\nfunction getOffsetRange(channel, model, offsetScaleType) {\n    const positionChannel = channel === XOFFSET ? 'x' : 'y';\n    const positionScaleCmpt = model.getScaleComponent(positionChannel);\n    const positionScaleType = positionScaleCmpt.get('type');\n    const positionScaleName = model.scaleName(positionChannel);\n    if (positionScaleType === 'band') {\n        const size = getDiscretePositionSize(positionChannel, model.size, model.config.view);\n        if (isStep(size)) {\n            // step is for offset\n            const step = getOffsetStep(size, offsetScaleType);\n            if (step) {\n                return step;\n            }\n        }\n        // otherwise use the position\n        return [0, { signal: `bandwidth('${positionScaleName}')` }];\n    }\n    else {\n        // continuous scale\n        return util.never(`Cannot use ${channel} scale if ${positionChannel} scale is not discrete.`);\n    }\n}\nfunction getDiscretePositionSize(channel, size, viewConfig) {\n    const sizeChannel = channel === X ? 'width' : 'height';\n    const sizeValue = size[sizeChannel];\n    if (sizeValue) {\n        return sizeValue;\n    }\n    return getViewConfigDiscreteSize(viewConfig, sizeChannel);\n}\nexport function defaultContinuousToDiscreteCount(scaleType, config, domain, channel) {\n    switch (scaleType) {\n        case 'quantile':\n            return config.scale.quantileCount;\n        case 'quantize':\n            return config.scale.quantizeCount;\n        case 'threshold':\n            if (domain !== undefined && isArray(domain)) {\n                return domain.length + 1;\n            }\n            else {\n                log.warn(log.message.domainRequiredForThresholdScale(channel));\n                // default threshold boundaries for threshold scale since domain has cardinality of 2\n                return 3;\n            }\n    }\n}\n/**\n * Returns the linear interpolation of the range according to the cardinality\n *\n * @param rangeMin start of the range\n * @param rangeMax end of the range\n * @param cardinality number of values in the output range\n */\nexport function interpolateRange(rangeMin, rangeMax, cardinality) {\n    // always return a signal since it's better to compute the sequence in Vega later\n    const f = () => {\n        const rMax = signalOrStringValue(rangeMax);\n        const rMin = signalOrStringValue(rangeMin);\n        const step = `(${rMax} - ${rMin}) / (${cardinality} - 1)`;\n        return `sequence(${rMin}, ${rMax} + ${step}, ${step})`;\n    };\n    if (isSignalRef(rangeMax)) {\n        return new SignalRefWrapper(f);\n    }\n    else {\n        return { signal: f() };\n    }\n}\nfunction sizeRangeMin(mark, zero, config) {\n    if (zero) {\n        if (isSignalRef(zero)) {\n            return { signal: `${zero.signal} ? 0 : ${sizeRangeMin(mark, false, config)}` };\n        }\n        else {\n            return 0;\n        }\n    }\n    switch (mark) {\n        case 'bar':\n        case 'tick':\n            return config.scale.minBandSize;\n        case 'line':\n        case 'trail':\n        case 'rule':\n            return config.scale.minStrokeWidth;\n        case 'text':\n            return config.scale.minFontSize;\n        case 'point':\n        case 'square':\n        case 'circle':\n            return config.scale.minSize;\n    }\n    /* istanbul ignore next: should never reach here */\n    // sizeRangeMin not implemented for the mark\n    throw new Error(log.message.incompatibleChannel('size', mark));\n}\nexport const MAX_SIZE_RANGE_STEP_RATIO = 0.95;\nfunction sizeRangeMax(mark, size, model, config) {\n    const xyStepSignals = {\n        x: getBinStepSignal(model, 'x'),\n        y: getBinStepSignal(model, 'y')\n    };\n    switch (mark) {\n        case 'bar':\n        case 'tick': {\n            if (config.scale.maxBandSize !== undefined) {\n                return config.scale.maxBandSize;\n            }\n            const min = minXYStep(size, xyStepSignals, config.view);\n            if (isNumber(min)) {\n                return min - 1;\n            }\n            else {\n                return new SignalRefWrapper(() => `${min.signal} - 1`);\n            }\n        }\n        case 'line':\n        case 'trail':\n        case 'rule':\n            return config.scale.maxStrokeWidth;\n        case 'text':\n            return config.scale.maxFontSize;\n        case 'point':\n        case 'square':\n        case 'circle': {\n            if (config.scale.maxSize) {\n                return config.scale.maxSize;\n            }\n            const pointStep = minXYStep(size, xyStepSignals, config.view);\n            if (isNumber(pointStep)) {\n                return Math.pow(MAX_SIZE_RANGE_STEP_RATIO * pointStep, 2);\n            }\n            else {\n                return new SignalRefWrapper(() => `pow(${MAX_SIZE_RANGE_STEP_RATIO} * ${pointStep.signal}, 2)`);\n            }\n        }\n    }\n    /* istanbul ignore next: should never reach here */\n    // sizeRangeMax not implemented for the mark\n    throw new Error(log.message.incompatibleChannel('size', mark));\n}\n/**\n * @returns {number} Range step of x or y or minimum between the two if both are ordinal scale.\n */\nfunction minXYStep(size, xyStepSignals, viewConfig) {\n    const widthStep = isStep(size.width) ? size.width.step : getViewConfigDiscreteStep(viewConfig, 'width');\n    const heightStep = isStep(size.height) ? size.height.step : getViewConfigDiscreteStep(viewConfig, 'height');\n    if (xyStepSignals.x || xyStepSignals.y) {\n        return new SignalRefWrapper(() => {\n            const exprs = [\n                xyStepSignals.x ? xyStepSignals.x.signal : widthStep,\n                xyStepSignals.y ? xyStepSignals.y.signal : heightStep\n            ];\n            return `min(${exprs.join(', ')})`;\n        });\n    }\n    return Math.min(widthStep, heightStep);\n}\n//# sourceMappingURL=range.js.map","import { isBinning } from '../../bin';\nimport { getSizeChannel, isColorChannel, isScaleChannel, isXorY, isXorYOffset, rangeType } from '../../channel';\nimport { isFieldDef, isPositionFieldOrDatumDef } from '../../channeldef';\nimport * as log from '../../log';\nimport { isRelativeBandSize } from '../../mark';\nimport { channelSupportScaleType, scaleTypeSupportDataType } from '../../scale';\nimport { normalizeTimeUnit } from '../../timeunit';\nimport * as util from '../../util';\nimport { POLAR_POSITION_SCALE_CHANNEL_INDEX } from './../../channel';\n/**\n * Determine if there is a specified scale type and if it is appropriate,\n * or determine default type if type is unspecified or inappropriate.\n */\n// NOTE: CompassQL uses this method.\nexport function scaleType(specifiedScale, channel, fieldDef, mark, hasNestedOffsetScale = false) {\n    const defaultScaleType = defaultType(channel, fieldDef, mark, hasNestedOffsetScale);\n    const { type } = specifiedScale;\n    if (!isScaleChannel(channel)) {\n        // There is no scale for these channels\n        return null;\n    }\n    if (type !== undefined) {\n        // Check if explicitly specified scale type is supported by the channel\n        if (!channelSupportScaleType(channel, type)) {\n            log.warn(log.message.scaleTypeNotWorkWithChannel(channel, type, defaultScaleType));\n            return defaultScaleType;\n        }\n        // Check if explicitly specified scale type is supported by the data type\n        if (isFieldDef(fieldDef) && !scaleTypeSupportDataType(type, fieldDef.type)) {\n            log.warn(log.message.scaleTypeNotWorkWithFieldDef(type, defaultScaleType));\n            return defaultScaleType;\n        }\n        return type;\n    }\n    return defaultScaleType;\n}\n/**\n * Determine appropriate default scale type.\n */\n// NOTE: Voyager uses this method.\nfunction defaultType(channel, fieldDef, mark, hasNestedOffsetScale) {\n    var _a;\n    switch (fieldDef.type) {\n        case 'nominal':\n        case 'ordinal': {\n            if (isColorChannel(channel) || rangeType(channel) === 'discrete') {\n                if (channel === 'shape' && fieldDef.type === 'ordinal') {\n                    log.warn(log.message.discreteChannelCannotEncode(channel, 'ordinal'));\n                }\n                return 'ordinal';\n            }\n            if (isXorY(channel) || isXorYOffset(channel)) {\n                if (util.contains(['rect', 'bar', 'image', 'rule'], mark.type)) {\n                    // The rect/bar mark should fit into a band.\n                    // For rule, using band scale to make rule align with axis ticks better https://github.com/vega/vega-lite/issues/3429\n                    return 'band';\n                }\n                if (hasNestedOffsetScale) {\n                    // If there is a nested offset scale, then there is a \"band\" for the span of the nested scale.\n                    return 'band';\n                }\n            }\n            else if (mark.type === 'arc' && channel in POLAR_POSITION_SCALE_CHANNEL_INDEX) {\n                return 'band';\n            }\n            const dimensionSize = mark[getSizeChannel(channel)];\n            if (isRelativeBandSize(dimensionSize)) {\n                return 'band';\n            }\n            if (isPositionFieldOrDatumDef(fieldDef) && ((_a = fieldDef.axis) === null || _a === void 0 ? void 0 : _a.tickBand)) {\n                return 'band';\n            }\n            // Otherwise, use ordinal point scale so we can easily get center positions of the marks.\n            return 'point';\n        }\n        case 'temporal':\n            if (isColorChannel(channel)) {\n                return 'time';\n            }\n            else if (rangeType(channel) === 'discrete') {\n                log.warn(log.message.discreteChannelCannotEncode(channel, 'temporal'));\n                // TODO: consider using quantize (equivalent to binning) once we have it\n                return 'ordinal';\n            }\n            else if (isFieldDef(fieldDef) && fieldDef.timeUnit && normalizeTimeUnit(fieldDef.timeUnit).utc) {\n                return 'utc';\n            }\n            return 'time';\n        case 'quantitative':\n            if (isColorChannel(channel)) {\n                if (isFieldDef(fieldDef) && isBinning(fieldDef.bin)) {\n                    return 'bin-ordinal';\n                }\n                return 'linear';\n            }\n            else if (rangeType(channel) === 'discrete') {\n                log.warn(log.message.discreteChannelCannotEncode(channel, 'quantitative'));\n                // TODO: consider using quantize (equivalent to binning) once we have it\n                return 'ordinal';\n            }\n            return 'linear';\n        case 'geojson':\n            return undefined;\n    }\n    /* istanbul ignore next: should never reach this */\n    throw new Error(log.message.invalidFieldType(fieldDef.type));\n}\n//# sourceMappingURL=type.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { parseSelector } from 'vega-event-selector';\nimport { identity, isArray, stringValue } from 'vega-util';\nimport { MODIFY, STORE, unitName, VL_SELECTION_RESOLVE, TUPLE, selectionCompilers } from '.';\nimport { dateTimeToExpr, isDateTime, dateTimeToTimestamp } from '../../datetime';\nimport { hasContinuousDomain } from '../../scale';\nimport { SELECTION_ID } from '../../selection';\nimport { keys, stringify, vals } from '../../util';\nimport { isUnitModel } from '../model';\nimport { parseSelectionExtent } from './parse';\nexport function assembleInit(init, isExpr = true, wrap = identity) {\n    if (isArray(init)) {\n        const assembled = init.map(v => assembleInit(v, isExpr, wrap));\n        return isExpr ? `[${assembled.join(', ')}]` : assembled;\n    }\n    else if (isDateTime(init)) {\n        if (isExpr) {\n            return wrap(dateTimeToExpr(init));\n        }\n        else {\n            return wrap(dateTimeToTimestamp(init));\n        }\n    }\n    return isExpr ? wrap(stringify(init)) : init;\n}\nexport function assembleUnitSelectionSignals(model, signals) {\n    var _a;\n    for (const selCmpt of vals((_a = model.component.selection) !== null && _a !== void 0 ? _a : {})) {\n        const name = selCmpt.name;\n        let modifyExpr = `${name}${TUPLE}, ${selCmpt.resolve === 'global' ? 'true' : `{unit: ${unitName(model)}}`}`;\n        for (const c of selectionCompilers) {\n            if (!c.defined(selCmpt))\n                continue;\n            if (c.signals)\n                signals = c.signals(model, selCmpt, signals);\n            if (c.modifyExpr)\n                modifyExpr = c.modifyExpr(model, selCmpt, modifyExpr);\n        }\n        signals.push({\n            name: name + MODIFY,\n            on: [\n                {\n                    events: { signal: selCmpt.name + TUPLE },\n                    update: `modify(${stringValue(selCmpt.name + STORE)}, ${modifyExpr})`\n                }\n            ]\n        });\n    }\n    return cleanupEmptyOnArray(signals);\n}\nexport function assembleFacetSignals(model, signals) {\n    if (model.component.selection && keys(model.component.selection).length) {\n        const name = stringValue(model.getName('cell'));\n        signals.unshift({\n            name: 'facet',\n            value: {},\n            on: [\n                {\n                    events: parseSelector('mousemove', 'scope'),\n                    update: `isTuple(facet) ? facet : group(${name}).datum`\n                }\n            ]\n        });\n    }\n    return cleanupEmptyOnArray(signals);\n}\nexport function assembleTopLevelSignals(model, signals) {\n    var _a;\n    let hasSelections = false;\n    for (const selCmpt of vals((_a = model.component.selection) !== null && _a !== void 0 ? _a : {})) {\n        const name = selCmpt.name;\n        const store = stringValue(name + STORE);\n        const hasSg = signals.filter(s => s.name === name);\n        if (hasSg.length === 0) {\n            const resolve = selCmpt.resolve === 'global' ? 'union' : selCmpt.resolve;\n            const isPoint = selCmpt.type === 'point' ? ', true, true)' : ')';\n            signals.push({\n                name: selCmpt.name,\n                update: `${VL_SELECTION_RESOLVE}(${store}, ${stringValue(resolve)}${isPoint}`\n            });\n        }\n        hasSelections = true;\n        for (const c of selectionCompilers) {\n            if (c.defined(selCmpt) && c.topLevelSignals) {\n                signals = c.topLevelSignals(model, selCmpt, signals);\n            }\n        }\n    }\n    if (hasSelections) {\n        const hasUnit = signals.filter(s => s.name === 'unit');\n        if (hasUnit.length === 0) {\n            signals.unshift({\n                name: 'unit',\n                value: {},\n                on: [{ events: 'mousemove', update: 'isTuple(group()) ? group() : unit' }]\n            });\n        }\n    }\n    return cleanupEmptyOnArray(signals);\n}\nexport function assembleUnitSelectionData(model, data) {\n    var _a;\n    const dataCopy = [...data];\n    const unit = unitName(model, { escape: false });\n    for (const selCmpt of vals((_a = model.component.selection) !== null && _a !== void 0 ? _a : {})) {\n        const store = { name: selCmpt.name + STORE };\n        if (selCmpt.project.hasSelectionId) {\n            store.transform = [{ type: 'collect', sort: { field: SELECTION_ID } }];\n        }\n        if (selCmpt.init) {\n            const fields = selCmpt.project.items.map(proj => {\n                const { signals } = proj, rest = __rest(proj, [\"signals\"]);\n                return rest;\n            });\n            store.values = selCmpt.project.hasSelectionId\n                ? selCmpt.init.map(i => ({ unit, [SELECTION_ID]: assembleInit(i, false)[0] }))\n                : selCmpt.init.map(i => ({ unit, fields, values: assembleInit(i, false) }));\n        }\n        const contains = dataCopy.filter(d => d.name === selCmpt.name + STORE);\n        if (!contains.length) {\n            dataCopy.push(store);\n        }\n    }\n    return dataCopy;\n}\nexport function assembleUnitSelectionMarks(model, marks) {\n    var _a;\n    for (const selCmpt of vals((_a = model.component.selection) !== null && _a !== void 0 ? _a : {})) {\n        for (const c of selectionCompilers) {\n            if (c.defined(selCmpt) && c.marks) {\n                marks = c.marks(model, selCmpt, marks);\n            }\n        }\n    }\n    return marks;\n}\nexport function assembleLayerSelectionMarks(model, marks) {\n    for (const child of model.children) {\n        if (isUnitModel(child)) {\n            marks = assembleUnitSelectionMarks(child, marks);\n        }\n    }\n    return marks;\n}\nexport function assembleSelectionScaleDomain(model, extent, scaleCmpt, domain) {\n    const parsedExtent = parseSelectionExtent(model, extent.param, extent);\n    return {\n        signal: hasContinuousDomain(scaleCmpt.get('type')) && isArray(domain) && domain[0] > domain[1]\n            ? `isValid(${parsedExtent}) && reverse(${parsedExtent})`\n            : parsedExtent\n    };\n}\nfunction cleanupEmptyOnArray(signals) {\n    return signals.map(s => {\n        if (s.on && !s.on.length)\n            delete s.on;\n        return s;\n    });\n}\n//# sourceMappingURL=assemble.js.map","import { parseSelector } from 'vega-event-selector';\nimport { isString } from 'vega-util';\nimport { TUPLE } from '.';\nimport { varName } from '../../util';\nimport inputBindings from './inputs';\nimport toggle, { TOGGLE } from './toggle';\nconst clear = {\n    defined: selCmpt => {\n        return selCmpt.clear !== undefined && selCmpt.clear !== false;\n    },\n    parse: (model, selCmpt) => {\n        if (selCmpt.clear) {\n            selCmpt.clear = isString(selCmpt.clear) ? parseSelector(selCmpt.clear, 'view') : selCmpt.clear;\n        }\n    },\n    topLevelSignals: (model, selCmpt, signals) => {\n        if (inputBindings.defined(selCmpt)) {\n            for (const proj of selCmpt.project.items) {\n                const idx = signals.findIndex(n => n.name === varName(`${selCmpt.name}_${proj.field}`));\n                if (idx !== -1) {\n                    signals[idx].on.push({ events: selCmpt.clear, update: 'null' });\n                }\n            }\n        }\n        return signals;\n    },\n    signals: (model, selCmpt, signals) => {\n        function addClear(idx, update) {\n            if (idx !== -1 && signals[idx].on) {\n                signals[idx].on.push({ events: selCmpt.clear, update });\n            }\n        }\n        // Be as minimalist as possible when adding clear triggers to minimize dataflow execution.\n        if (selCmpt.type === 'interval') {\n            for (const proj of selCmpt.project.items) {\n                const vIdx = signals.findIndex(n => n.name === proj.signals.visual);\n                addClear(vIdx, '[0, 0]');\n                if (vIdx === -1) {\n                    const dIdx = signals.findIndex(n => n.name === proj.signals.data);\n                    addClear(dIdx, 'null');\n                }\n            }\n        }\n        else {\n            let tIdx = signals.findIndex(n => n.name === selCmpt.name + TUPLE);\n            addClear(tIdx, 'null');\n            if (toggle.defined(selCmpt)) {\n                tIdx = signals.findIndex(n => n.name === selCmpt.name + TOGGLE);\n                addClear(tIdx, 'false');\n            }\n        }\n        return signals;\n    }\n};\nexport default clear;\n//# sourceMappingURL=clear.js.map","import { isString } from 'vega';\nimport { stringValue } from 'vega-util';\nimport { FACET_CHANNELS } from '../../channel';\nimport { vals } from '../../util';\nimport { isFacetModel } from '../model';\nimport interval from './interval';\nimport point from './point';\nimport clear from './clear';\nimport inputs from './inputs';\nimport nearest from './nearest';\nimport project from './project';\nimport scales from './scales';\nimport legends from './legends';\nimport toggle from './toggle';\nimport translate from './translate';\nimport zoom from './zoom';\nexport const STORE = '_store';\nexport const TUPLE = '_tuple';\nexport const MODIFY = '_modify';\nexport const SELECTION_DOMAIN = '_selection_domain_';\nexport const VL_SELECTION_RESOLVE = 'vlSelectionResolve';\n// Order matters for parsing and assembly.\nexport const selectionCompilers = [\n    point,\n    interval,\n    project,\n    toggle,\n    // Bindings may disable direct manipulation.\n    inputs,\n    scales,\n    legends,\n    clear,\n    translate,\n    zoom,\n    nearest\n];\nfunction getFacetModel(model) {\n    let parent = model.parent;\n    while (parent) {\n        if (isFacetModel(parent))\n            break;\n        parent = parent.parent;\n    }\n    return parent;\n}\nexport function unitName(model, { escape } = { escape: true }) {\n    let name = escape ? stringValue(model.name) : model.name;\n    const facetModel = getFacetModel(model);\n    if (facetModel) {\n        const { facet } = facetModel;\n        for (const channel of FACET_CHANNELS) {\n            if (facet[channel]) {\n                name += ` + '__facet_${channel}_' + (facet[${stringValue(facetModel.vgField(channel))}])`;\n            }\n        }\n    }\n    return name;\n}\nexport function requiresSelectionId(model) {\n    var _a;\n    return vals((_a = model.component.selection) !== null && _a !== void 0 ? _a : {}).reduce((identifier, selCmpt) => {\n        return identifier || selCmpt.project.hasSelectionId;\n    }, false);\n}\n// Binding a point selection to query widgets or legends disables default direct manipulation interaction.\n// A user can choose to re-enable it by explicitly specifying triggering input events.\nexport function disableDirectManipulation(selCmpt, selDef) {\n    if (isString(selDef.select) || !selDef.select.on)\n        delete selCmpt.events;\n    if (isString(selDef.select) || !selDef.select.clear)\n        delete selCmpt.clear;\n    if (isString(selDef.select) || !selDef.select.toggle)\n        delete selCmpt.toggle;\n}\n//# sourceMappingURL=index.js.map","import { stringValue } from 'vega-util';\nimport { disableDirectManipulation, TUPLE } from '.';\nimport { varName } from '../../util';\nimport { assembleInit } from './assemble';\nimport nearest from './nearest';\nimport { TUPLE_FIELDS } from './project';\nimport { isLegendBinding } from '../../selection';\nconst inputBindings = {\n    defined: selCmpt => {\n        return (selCmpt.type === 'point' &&\n            selCmpt.resolve === 'global' &&\n            selCmpt.bind &&\n            selCmpt.bind !== 'scales' &&\n            !isLegendBinding(selCmpt.bind));\n    },\n    parse: (model, selCmpt, selDef) => disableDirectManipulation(selCmpt, selDef),\n    topLevelSignals: (model, selCmpt, signals) => {\n        const name = selCmpt.name;\n        const proj = selCmpt.project;\n        const bind = selCmpt.bind;\n        const init = selCmpt.init && selCmpt.init[0]; // Can only exist on single selections (one initial value).\n        const datum = nearest.defined(selCmpt) ? '(item().isVoronoi ? datum.datum : datum)' : 'datum';\n        proj.items.forEach((p, i) => {\n            var _a, _b;\n            const sgname = varName(`${name}_${p.field}`);\n            const hasSignal = signals.filter(s => s.name === sgname);\n            if (!hasSignal.length) {\n                signals.unshift(Object.assign(Object.assign({ name: sgname }, (init ? { init: assembleInit(init[i]) } : { value: null })), { on: selCmpt.events\n                        ? [\n                            {\n                                events: selCmpt.events,\n                                update: `datum && item().mark.marktype !== 'group' ? ${datum}[${stringValue(p.field)}] : null`\n                            }\n                        ]\n                        : [], bind: (_b = (_a = bind[p.field]) !== null && _a !== void 0 ? _a : bind[p.channel]) !== null && _b !== void 0 ? _b : bind }));\n            }\n        });\n        return signals;\n    },\n    signals: (model, selCmpt, signals) => {\n        const name = selCmpt.name;\n        const proj = selCmpt.project;\n        const signal = signals.filter(s => s.name === name + TUPLE)[0];\n        const fields = name + TUPLE_FIELDS;\n        const values = proj.items.map(p => varName(`${name}_${p.field}`));\n        const valid = values.map(v => `${v} !== null`).join(' && ');\n        if (values.length) {\n            signal.update = `${valid} ? {fields: ${fields}, values: [${values.join(', ')}]} : null`;\n        }\n        delete signal.value;\n        delete signal.on;\n        return signals;\n    }\n};\nexport default inputBindings;\n//# sourceMappingURL=inputs.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { array, stringValue } from 'vega-util';\nimport { STORE, TUPLE, unitName } from '.';\nimport { X, Y } from '../../channel';\nimport { warn } from '../../log';\nimport { hasContinuousDomain } from '../../scale';\nimport { keys } from '../../util';\nimport { assembleInit } from './assemble';\nimport { TUPLE_FIELDS } from './project';\nimport scales from './scales';\nexport const BRUSH = '_brush';\nexport const SCALE_TRIGGER = '_scale_trigger';\nconst interval = {\n    defined: selCmpt => selCmpt.type === 'interval',\n    signals: (model, selCmpt, signals) => {\n        const name = selCmpt.name;\n        const fieldsSg = name + TUPLE_FIELDS;\n        const hasScales = scales.defined(selCmpt);\n        const init = selCmpt.init ? selCmpt.init[0] : null;\n        const dataSignals = [];\n        const scaleTriggers = [];\n        if (selCmpt.translate && !hasScales) {\n            const filterExpr = `!event.item || event.item.mark.name !== ${stringValue(name + BRUSH)}`;\n            events(selCmpt, (on, evt) => {\n                var _a;\n                var _b;\n                const filters = array(((_a = (_b = evt.between[0]).filter) !== null && _a !== void 0 ? _a : (_b.filter = [])));\n                if (!filters.includes(filterExpr)) {\n                    filters.push(filterExpr);\n                }\n                return on;\n            });\n        }\n        selCmpt.project.items.forEach((proj, i) => {\n            const channel = proj.channel;\n            if (channel !== X && channel !== Y) {\n                warn('Interval selections only support x and y encoding channels.');\n                return;\n            }\n            const val = init ? init[i] : null;\n            const cs = channelSignals(model, selCmpt, proj, val);\n            const dname = proj.signals.data;\n            const vname = proj.signals.visual;\n            const scaleName = stringValue(model.scaleName(channel));\n            const scaleType = model.getScaleComponent(channel).get('type');\n            const toNum = hasContinuousDomain(scaleType) ? '+' : '';\n            signals.push(...cs);\n            dataSignals.push(dname);\n            scaleTriggers.push({\n                scaleName: model.scaleName(channel),\n                expr: `(!isArray(${dname}) || ` +\n                    `(${toNum}invert(${scaleName}, ${vname})[0] === ${toNum}${dname}[0] && ` +\n                    `${toNum}invert(${scaleName}, ${vname})[1] === ${toNum}${dname}[1]))`\n            });\n        });\n        // Proxy scale reactions to ensure that an infinite loop doesn't occur\n        // when an interval selection filter touches the scale.\n        if (!hasScales && scaleTriggers.length) {\n            signals.push({\n                name: name + SCALE_TRIGGER,\n                value: {},\n                on: [\n                    {\n                        events: scaleTriggers.map(t => ({ scale: t.scaleName })),\n                        update: `${scaleTriggers.map(t => t.expr).join(' && ')} ? ${name + SCALE_TRIGGER} : {}`\n                    }\n                ]\n            });\n        }\n        // Only add an interval to the store if it has valid data extents. Data extents\n        // are set to null if pixel extents are equal to account for intervals over\n        // ordinal/nominal domains which, when inverted, will still produce a valid datum.\n        const update = `unit: ${unitName(model)}, fields: ${fieldsSg}, values`;\n        return signals.concat(Object.assign(Object.assign({ name: name + TUPLE }, (init ? { init: `{${update}: ${assembleInit(init)}}` } : {})), (dataSignals.length\n            ? {\n                on: [\n                    {\n                        events: [{ signal: dataSignals.join(' || ') }],\n                        update: `${dataSignals.join(' && ')} ? {${update}: [${dataSignals}]} : null`\n                    }\n                ]\n            }\n            : {})));\n    },\n    marks: (model, selCmpt, marks) => {\n        const name = selCmpt.name;\n        const { x, y } = selCmpt.project.hasChannel;\n        const xvname = x === null || x === void 0 ? void 0 : x.signals.visual;\n        const yvname = y === null || y === void 0 ? void 0 : y.signals.visual;\n        const store = `data(${stringValue(selCmpt.name + STORE)})`;\n        // Do not add a brush if we're binding to scales\n        // or we don't have a valid interval projection\n        if (scales.defined(selCmpt) || (!x && !y)) {\n            return marks;\n        }\n        const update = {\n            x: x !== undefined ? { signal: `${xvname}[0]` } : { value: 0 },\n            y: y !== undefined ? { signal: `${yvname}[0]` } : { value: 0 },\n            x2: x !== undefined ? { signal: `${xvname}[1]` } : { field: { group: 'width' } },\n            y2: y !== undefined ? { signal: `${yvname}[1]` } : { field: { group: 'height' } }\n        };\n        // If the selection is resolved to global, only a single interval is in\n        // the store. Wrap brush mark's encodings with a production rule to test\n        // this based on the `unit` property. Hide the brush mark if it corresponds\n        // to a unit different from the one in the store.\n        if (selCmpt.resolve === 'global') {\n            for (const key of keys(update)) {\n                update[key] = [\n                    Object.assign({ test: `${store}.length && ${store}[0].unit === ${unitName(model)}` }, update[key]),\n                    { value: 0 }\n                ];\n            }\n        }\n        // Two brush marks ensure that fill colors and other aesthetic choices do\n        // not interefere with the core marks, but that the brushed region can still\n        // be interacted with (e.g., dragging it around).\n        const _a = selCmpt.mark, { fill, fillOpacity, cursor } = _a, stroke = __rest(_a, [\"fill\", \"fillOpacity\", \"cursor\"]);\n        const vgStroke = keys(stroke).reduce((def, k) => {\n            def[k] = [\n                {\n                    test: [x !== undefined && `${xvname}[0] !== ${xvname}[1]`, y !== undefined && `${yvname}[0] !== ${yvname}[1]`]\n                        .filter(t => t)\n                        .join(' && '),\n                    value: stroke[k]\n                },\n                { value: null }\n            ];\n            return def;\n        }, {});\n        return [\n            {\n                name: `${name + BRUSH}_bg`,\n                type: 'rect',\n                clip: true,\n                encode: {\n                    enter: {\n                        fill: { value: fill },\n                        fillOpacity: { value: fillOpacity }\n                    },\n                    update\n                }\n            },\n            ...marks,\n            {\n                name: name + BRUSH,\n                type: 'rect',\n                clip: true,\n                encode: {\n                    enter: Object.assign(Object.assign({}, (cursor ? { cursor: { value: cursor } } : {})), { fill: { value: 'transparent' } }),\n                    update: Object.assign(Object.assign({}, update), vgStroke)\n                }\n            }\n        ];\n    }\n};\nexport default interval;\n/**\n * Returns the visual and data signals for an interval selection.\n */\nfunction channelSignals(model, selCmpt, proj, init) {\n    const channel = proj.channel;\n    const vname = proj.signals.visual;\n    const dname = proj.signals.data;\n    const hasScales = scales.defined(selCmpt);\n    const scaleName = stringValue(model.scaleName(channel));\n    const scale = model.getScaleComponent(channel);\n    const scaleType = scale ? scale.get('type') : undefined;\n    const scaled = (str) => `scale(${scaleName}, ${str})`;\n    const size = model.getSizeSignalRef(channel === X ? 'width' : 'height').signal;\n    const coord = `${channel}(unit)`;\n    const on = events(selCmpt, (def, evt) => {\n        return [\n            ...def,\n            { events: evt.between[0], update: `[${coord}, ${coord}]` },\n            { events: evt, update: `[${vname}[0], clamp(${coord}, 0, ${size})]` } // Brush End\n        ];\n    });\n    // React to pan/zooms of continuous scales. Non-continuous scales\n    // (band, point) cannot be pan/zoomed and any other changes\n    // to their domains (e.g., filtering) should clear the brushes.\n    on.push({\n        events: { signal: selCmpt.name + SCALE_TRIGGER },\n        update: hasContinuousDomain(scaleType) ? `[${scaled(`${dname}[0]`)}, ${scaled(`${dname}[1]`)}]` : `[0, 0]`\n    });\n    return hasScales\n        ? [{ name: dname, on: [] }]\n        : [\n            Object.assign(Object.assign({ name: vname }, (init ? { init: assembleInit(init, true, scaled) } : { value: [] })), { on }),\n            Object.assign(Object.assign({ name: dname }, (init ? { init: assembleInit(init) } : {})), { on: [\n                    {\n                        events: { signal: vname },\n                        update: `${vname}[0] === ${vname}[1] ? null : invert(${scaleName}, ${vname})`\n                    }\n                ] })\n        ];\n}\nfunction events(selCmpt, cb) {\n    return selCmpt.events.reduce((on, evt) => {\n        if (!evt.between) {\n            warn(`${evt} is not an ordered event stream for interval selections.`);\n            return on;\n        }\n        return cb(on, evt);\n    }, []);\n}\n//# sourceMappingURL=interval.js.map","import { isObject } from 'vega';\nimport { parseSelector } from 'vega-event-selector';\nimport { array, isString } from 'vega-util';\nimport { disableDirectManipulation, TUPLE } from '.';\nimport * as log from '../../log';\nimport { isLegendBinding, isLegendStreamBinding, SELECTION_ID } from '../../selection';\nimport { duplicate, vals, varName } from '../../util';\nimport { TUPLE_FIELDS } from './project';\nimport { TOGGLE } from './toggle';\nconst legendBindings = {\n    defined: selCmpt => {\n        const spec = selCmpt.resolve === 'global' && selCmpt.bind && isLegendBinding(selCmpt.bind);\n        const projLen = selCmpt.project.items.length === 1 && selCmpt.project.items[0].field !== SELECTION_ID;\n        if (spec && !projLen) {\n            log.warn(log.message.LEGEND_BINDINGS_MUST_HAVE_PROJECTION);\n        }\n        return spec && projLen;\n    },\n    parse: (model, selCmpt, selDef) => {\n        var _a;\n        // Allow legend items to be toggleable by default even though direct manipulation is disabled.\n        const selDef_ = duplicate(selDef);\n        selDef_.select = isString(selDef_.select)\n            ? { type: selDef_.select, toggle: selCmpt.toggle }\n            : Object.assign(Object.assign({}, selDef_.select), { toggle: selCmpt.toggle });\n        disableDirectManipulation(selCmpt, selDef_);\n        if (isObject(selDef.select) && (selDef.select.on || selDef.select.clear)) {\n            const legendFilter = 'event.item && indexof(event.item.mark.role, \"legend\") < 0';\n            for (const evt of selCmpt.events) {\n                evt.filter = array((_a = evt.filter) !== null && _a !== void 0 ? _a : []);\n                if (!evt.filter.includes(legendFilter)) {\n                    evt.filter.push(legendFilter);\n                }\n            }\n        }\n        const evt = isLegendStreamBinding(selCmpt.bind) ? selCmpt.bind.legend : 'click';\n        const stream = isString(evt) ? parseSelector(evt, 'view') : array(evt);\n        selCmpt.bind = { legend: { merge: stream } };\n    },\n    topLevelSignals: (model, selCmpt, signals) => {\n        const selName = selCmpt.name;\n        const stream = isLegendStreamBinding(selCmpt.bind) && selCmpt.bind.legend;\n        const markName = (name) => (s) => {\n            const ds = duplicate(s);\n            ds.markname = name;\n            return ds;\n        };\n        for (const proj of selCmpt.project.items) {\n            if (!proj.hasLegend)\n                continue;\n            const prefix = `${varName(proj.field)}_legend`;\n            const sgName = `${selName}_${prefix}`;\n            const hasSignal = signals.filter(s => s.name === sgName);\n            if (hasSignal.length === 0) {\n                const events = stream.merge\n                    .map(markName(`${prefix}_symbols`))\n                    .concat(stream.merge.map(markName(`${prefix}_labels`)))\n                    .concat(stream.merge.map(markName(`${prefix}_entries`)));\n                signals.unshift(Object.assign(Object.assign({ name: sgName }, (!selCmpt.init ? { value: null } : {})), { on: [\n                        // Legend entries do not store values, so we need to walk the scenegraph to the symbol datum.\n                        { events, update: 'datum.value || item().items[0].items[0].datum.value', force: true },\n                        { events: stream.merge, update: `!event.item || !datum ? null : ${sgName}`, force: true }\n                    ] }));\n            }\n        }\n        return signals;\n    },\n    signals: (model, selCmpt, signals) => {\n        const name = selCmpt.name;\n        const proj = selCmpt.project;\n        const tuple = signals.find(s => s.name === name + TUPLE);\n        const fields = name + TUPLE_FIELDS;\n        const values = proj.items.filter(p => p.hasLegend).map(p => varName(`${name}_${varName(p.field)}_legend`));\n        const valid = values.map(v => `${v} !== null`).join(' && ');\n        const update = `${valid} ? {fields: ${fields}, values: [${values.join(', ')}]} : null`;\n        if (selCmpt.events && values.length > 0) {\n            tuple.on.push({\n                events: values.map(signal => ({ signal })),\n                update\n            });\n        }\n        else if (values.length > 0) {\n            tuple.update = update;\n            delete tuple.value;\n            delete tuple.on;\n        }\n        const toggle = signals.find(s => s.name === name + TOGGLE);\n        const events = isLegendStreamBinding(selCmpt.bind) && selCmpt.bind.legend;\n        if (toggle) {\n            if (!selCmpt.events)\n                toggle.on[0].events = events;\n            else\n                toggle.on.push(Object.assign(Object.assign({}, toggle.on[0]), { events }));\n        }\n        return signals;\n    }\n};\nexport default legendBindings;\nexport function parseInteractiveLegend(model, channel, legendCmpt) {\n    var _a, _b, _c, _d;\n    const field = (_a = model.fieldDef(channel)) === null || _a === void 0 ? void 0 : _a.field;\n    for (const selCmpt of vals((_b = model.component.selection) !== null && _b !== void 0 ? _b : {})) {\n        const proj = (_c = selCmpt.project.hasField[field]) !== null && _c !== void 0 ? _c : selCmpt.project.hasChannel[channel];\n        if (proj && legendBindings.defined(selCmpt)) {\n            const legendSelections = (_d = legendCmpt.get('selections')) !== null && _d !== void 0 ? _d : [];\n            legendSelections.push(selCmpt.name);\n            legendCmpt.set('selections', legendSelections, false);\n            proj.hasLegend = true;\n        }\n    }\n}\n//# sourceMappingURL=legends.js.map","import * as log from '../../log';\nimport { isPathMark } from '../../mark';\nimport { tooltip } from '../mark/encode';\nconst VORONOI = 'voronoi';\nconst nearest = {\n    defined: selCmpt => {\n        return selCmpt.type === 'point' && selCmpt.nearest;\n    },\n    parse: (model, selCmpt) => {\n        // Scope selection events to the voronoi mark to prevent capturing\n        // events that occur on the group mark (https://github.com/vega/vega/issues/2112).\n        if (selCmpt.events) {\n            for (const s of selCmpt.events) {\n                s.markname = model.getName(VORONOI);\n            }\n        }\n    },\n    marks: (model, selCmpt, marks) => {\n        const { x, y } = selCmpt.project.hasChannel;\n        const markType = model.mark;\n        if (isPathMark(markType)) {\n            log.warn(log.message.nearestNotSupportForContinuous(markType));\n            return marks;\n        }\n        const cellDef = {\n            name: model.getName(VORONOI),\n            type: 'path',\n            interactive: true,\n            from: { data: model.getName('marks') },\n            encode: {\n                update: Object.assign({ fill: { value: 'transparent' }, strokeWidth: { value: 0.35 }, stroke: { value: 'transparent' }, isVoronoi: { value: true } }, tooltip(model, { reactiveGeom: true }))\n            },\n            transform: [\n                {\n                    type: 'voronoi',\n                    x: { expr: x || !y ? 'datum.datum.x || 0' : '0' },\n                    y: { expr: y || !x ? 'datum.datum.y || 0' : '0' },\n                    size: [model.getSizeSignalRef('width'), model.getSizeSignalRef('height')]\n                }\n            ]\n        };\n        let index = 0;\n        let exists = false;\n        marks.forEach((mark, i) => {\n            var _a;\n            const name = (_a = mark.name) !== null && _a !== void 0 ? _a : '';\n            if (name === model.component.mark[0].name) {\n                index = i;\n            }\n            else if (name.indexOf(VORONOI) >= 0) {\n                exists = true;\n            }\n        });\n        if (!exists) {\n            marks.splice(index + 1, 0, cellDef);\n        }\n        return marks;\n    }\n};\nexport default nearest;\n//# sourceMappingURL=nearest.js.map","import { parseSelector } from 'vega-event-selector';\nimport { array, isObject, isString, stringValue } from 'vega-util';\nimport { selectionCompilers, STORE } from '.';\nimport { warn } from '../../log';\nimport { duplicate, entries, replacePathInField, varName } from '../../util';\nimport { OutputNode } from '../data/dataflow';\nimport { FilterNode } from '../data/filter';\nimport { DataSourceType } from '../../data';\nexport function parseUnitSelection(model, selDefs) {\n    var _a;\n    const selCmpts = {};\n    const selectionConfig = model.config.selection;\n    if (!selDefs || !selDefs.length)\n        return selCmpts;\n    for (const def of selDefs) {\n        const name = varName(def.name);\n        const selDef = def.select;\n        const type = isString(selDef) ? selDef : selDef.type;\n        const defaults = isObject(selDef) ? duplicate(selDef) : { type };\n        // Set default values from config if a property hasn't been specified,\n        // or if it is true. E.g., \"translate\": true should use the default\n        // event handlers for translate. However, true may be a valid value for\n        // a property (e.g., \"nearest\": true).\n        const cfg = selectionConfig[type];\n        for (const key in cfg) {\n            // Project transform applies its defaults.\n            if (key === 'fields' || key === 'encodings') {\n                continue;\n            }\n            if (key === 'mark') {\n                defaults[key] = Object.assign(Object.assign({}, cfg[key]), defaults[key]);\n            }\n            if (defaults[key] === undefined || defaults[key] === true) {\n                defaults[key] = (_a = cfg[key]) !== null && _a !== void 0 ? _a : defaults[key];\n            }\n        }\n        const selCmpt = (selCmpts[name] = Object.assign(Object.assign({}, defaults), { name,\n            type, init: def.value, bind: def.bind, events: isString(defaults.on) ? parseSelector(defaults.on, 'scope') : array(duplicate(defaults.on)) }));\n        for (const c of selectionCompilers) {\n            if (c.defined(selCmpt) && c.parse) {\n                c.parse(model, selCmpt, def);\n            }\n        }\n    }\n    return selCmpts;\n}\nexport function parseSelectionPredicate(model, pred, dfnode, datum = 'datum') {\n    const name = isString(pred) ? pred : pred.param;\n    const vname = varName(name);\n    const store = stringValue(vname + STORE);\n    let selCmpt;\n    try {\n        selCmpt = model.getSelectionComponent(vname, name);\n    }\n    catch (e) {\n        // If a selection isn't found, treat as a variable parameter and coerce to boolean.\n        return `!!${vname}`;\n    }\n    if (selCmpt.project.timeUnit) {\n        const child = dfnode !== null && dfnode !== void 0 ? dfnode : model.component.data.raw;\n        const tunode = selCmpt.project.timeUnit.clone();\n        if (child.parent) {\n            tunode.insertAsParentOf(child);\n        }\n        else {\n            child.parent = tunode;\n        }\n    }\n    const fn = selCmpt.project.hasSelectionId ? 'vlSelectionIdTest(' : 'vlSelectionTest(';\n    const resolve = selCmpt.resolve === 'global' ? ')' : `, ${stringValue(selCmpt.resolve)})`;\n    const test = `${fn}${store}, ${datum}${resolve}`;\n    const length = `length(data(${store}))`;\n    return pred.empty === false ? `${length} && ${test}` : `!${length} || ${test}`;\n}\nexport function parseSelectionExtent(model, name, extent) {\n    const vname = varName(name);\n    const encoding = extent['encoding'];\n    let field = extent['field'];\n    let selCmpt;\n    try {\n        selCmpt = model.getSelectionComponent(vname, name);\n    }\n    catch (e) {\n        // If a selection isn't found, treat it as a variable parameter.\n        return vname;\n    }\n    if (!encoding && !field) {\n        field = selCmpt.project.items[0].field;\n        if (selCmpt.project.items.length > 1) {\n            warn('A \"field\" or \"encoding\" must be specified when using a selection as a scale domain. ' +\n                `Using \"field\": ${stringValue(field)}.`);\n        }\n    }\n    else if (encoding && !field) {\n        const encodings = selCmpt.project.items.filter(p => p.channel === encoding);\n        if (!encodings.length || encodings.length > 1) {\n            field = selCmpt.project.items[0].field;\n            warn((!encodings.length ? 'No ' : 'Multiple ') +\n                `matching ${stringValue(encoding)} encoding found for selection ${stringValue(extent.param)}. ` +\n                `Using \"field\": ${stringValue(field)}.`);\n        }\n        else {\n            field = encodings[0].field;\n        }\n    }\n    return `${selCmpt.name}[${stringValue(replacePathInField(field))}]`;\n}\nexport function materializeSelections(model, main) {\n    var _a;\n    for (const [selection, selCmpt] of entries((_a = model.component.selection) !== null && _a !== void 0 ? _a : {})) {\n        const lookupName = model.getName(`lookup_${selection}`);\n        model.component.data.outputNodes[lookupName] = selCmpt.materialized = new OutputNode(new FilterNode(main, model, { param: selection }), lookupName, DataSourceType.Lookup, model.component.data.outputNodeRefCounts);\n    }\n}\n//# sourceMappingURL=parse.js.map","import { stringValue } from 'vega-util';\nimport { TUPLE, unitName } from '.';\nimport { SELECTION_ID } from '../../selection';\nimport { vals } from '../../util';\nimport { BRUSH } from './interval';\nimport { TUPLE_FIELDS } from './project';\nconst point = {\n    defined: selCmpt => selCmpt.type === 'point',\n    signals: (model, selCmpt, signals) => {\n        var _a;\n        const name = selCmpt.name;\n        const fieldsSg = name + TUPLE_FIELDS;\n        const project = selCmpt.project;\n        const datum = '(item().isVoronoi ? datum.datum : datum)';\n        // Only add a discrete selection to the store if a datum is present _and_\n        // the interaction isn't occurring on a group mark. This guards against\n        // polluting interactive state with invalid values in faceted displays\n        // as the group marks are also data-driven. We force the update to account\n        // for constant null states but varying toggles (e.g., shift-click in\n        // whitespace followed by a click in whitespace; the store should only\n        // be cleared on the second click).\n        const brushes = vals((_a = model.component.selection) !== null && _a !== void 0 ? _a : {})\n            .reduce((acc, cmpt) => {\n            return cmpt.type === 'interval' ? acc.concat(cmpt.name + BRUSH) : acc;\n        }, [])\n            .map(b => `indexof(item().mark.name, '${b}') < 0`)\n            .join(' && ');\n        const test = `datum && item().mark.marktype !== 'group' && indexof(item().mark.role, 'legend') < 0${brushes ? ` && ${brushes}` : ''}`;\n        let update = `unit: ${unitName(model)}, `;\n        if (selCmpt.project.hasSelectionId) {\n            update += `${SELECTION_ID}: ${datum}[${stringValue(SELECTION_ID)}]`;\n        }\n        else {\n            const values = project.items\n                .map(p => {\n                const fieldDef = model.fieldDef(p.channel);\n                // Binned fields should capture extents, for a range test against the raw field.\n                return (fieldDef === null || fieldDef === void 0 ? void 0 : fieldDef.bin)\n                    ? `[${datum}[${stringValue(model.vgField(p.channel, {}))}], ` +\n                        `${datum}[${stringValue(model.vgField(p.channel, { binSuffix: 'end' }))}]]`\n                    : `${datum}[${stringValue(p.field)}]`;\n            })\n                .join(', ');\n            update += `fields: ${fieldsSg}, values: [${values}]`;\n        }\n        const events = selCmpt.events;\n        return signals.concat([\n            {\n                name: name + TUPLE,\n                on: events\n                    ? [\n                        {\n                            events,\n                            update: `${test} ? {${update}} : null`,\n                            force: true\n                        }\n                    ]\n                    : []\n            }\n        ]);\n    }\n};\nexport default point;\n//# sourceMappingURL=point.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { array, isObject } from 'vega-util';\nimport { isSingleDefUnitChannel } from '../../channel';\nimport * as log from '../../log';\nimport { hasContinuousDomain } from '../../scale';\nimport { SELECTION_ID } from '../../selection';\nimport { hash, keys, replacePathInField, varName, isEmpty } from '../../util';\nimport { TimeUnitNode } from '../data/timeunit';\nexport const TUPLE_FIELDS = '_tuple_fields';\nexport class SelectionProjectionComponent {\n    constructor(...items) {\n        this.items = items;\n        this.hasChannel = {};\n        this.hasField = {};\n        this.hasSelectionId = false;\n    }\n}\nconst project = {\n    defined: () => {\n        return true; // This transform handles its own defaults, so always run parse.\n    },\n    parse: (model, selCmpt, selDef) => {\n        var _a;\n        const name = selCmpt.name;\n        const proj = ((_a = selCmpt.project) !== null && _a !== void 0 ? _a : (selCmpt.project = new SelectionProjectionComponent()));\n        const parsed = {};\n        const timeUnits = {};\n        const signals = new Set();\n        const signalName = (p, range) => {\n            const suffix = range === 'visual' ? p.channel : p.field;\n            let sg = varName(`${name}_${suffix}`);\n            for (let counter = 1; signals.has(sg); counter++) {\n                sg = varName(`${name}_${suffix}_${counter}`);\n            }\n            signals.add(sg);\n            return { [range]: sg };\n        };\n        const type = selCmpt.type;\n        const cfg = model.config.selection[type];\n        const init = selDef.value !== undefined\n            ? array(selDef.value)\n            : null;\n        // If no explicit projection (either fields or encodings) is specified, set some defaults.\n        // If an initial value is set, try to infer projections.\n        let { fields, encodings } = (isObject(selDef.select) ? selDef.select : {});\n        if (!fields && !encodings && init) {\n            for (const initVal of init) {\n                // initVal may be a scalar value to smoothen varParam -> pointSelection gradient.\n                if (!isObject(initVal)) {\n                    continue;\n                }\n                for (const key of keys(initVal)) {\n                    if (isSingleDefUnitChannel(key)) {\n                        (encodings || (encodings = [])).push(key);\n                    }\n                    else {\n                        if (type === 'interval') {\n                            log.warn(log.message.INTERVAL_INITIALIZED_WITH_X_Y);\n                            encodings = cfg.encodings;\n                        }\n                        else {\n                            (fields || (fields = [])).push(key);\n                        }\n                    }\n                }\n            }\n        }\n        // If no initial value is specified, use the default configuration.\n        // We break this out as a separate if block (instead of an else condition)\n        // to account for unprojected point selections that have scalar initial values\n        if (!fields && !encodings) {\n            encodings = cfg.encodings;\n            if ('fields' in cfg) {\n                fields = cfg.fields;\n            }\n        }\n        for (const channel of encodings !== null && encodings !== void 0 ? encodings : []) {\n            const fieldDef = model.fieldDef(channel);\n            if (fieldDef) {\n                let field = fieldDef.field;\n                if (fieldDef.aggregate) {\n                    log.warn(log.message.cannotProjectAggregate(channel, fieldDef.aggregate));\n                    continue;\n                }\n                else if (!field) {\n                    log.warn(log.message.cannotProjectOnChannelWithoutField(channel));\n                    continue;\n                }\n                if (fieldDef.timeUnit) {\n                    field = model.vgField(channel);\n                    // Construct TimeUnitComponents which will be combined into a\n                    // TimeUnitNode. This node may need to be inserted into the\n                    // dataflow if the selection is used across views that do not\n                    // have these time units defined.\n                    const component = {\n                        timeUnit: fieldDef.timeUnit,\n                        as: field,\n                        field: fieldDef.field\n                    };\n                    timeUnits[hash(component)] = component;\n                }\n                // Prevent duplicate projections on the same field.\n                // TODO: what if the same field is bound to multiple channels (e.g., SPLOM diag).\n                if (!parsed[field]) {\n                    // Determine whether the tuple will store enumerated or ranged values.\n                    // Interval selections store ranges for continuous scales, and enumerations otherwise.\n                    // Single/multi selections store ranges for binned fields, and enumerations otherwise.\n                    let tplType = 'E';\n                    if (type === 'interval') {\n                        const scaleType = model.getScaleComponent(channel).get('type');\n                        if (hasContinuousDomain(scaleType)) {\n                            tplType = 'R';\n                        }\n                    }\n                    else if (fieldDef.bin) {\n                        tplType = 'R-RE';\n                    }\n                    const p = { field, channel, type: tplType };\n                    p.signals = Object.assign(Object.assign({}, signalName(p, 'data')), signalName(p, 'visual'));\n                    proj.items.push((parsed[field] = p));\n                    proj.hasField[field] = proj.hasChannel[channel] = parsed[field];\n                    proj.hasSelectionId = proj.hasSelectionId || field === SELECTION_ID;\n                }\n            }\n            else {\n                log.warn(log.message.cannotProjectOnChannelWithoutField(channel));\n            }\n        }\n        for (const field of fields !== null && fields !== void 0 ? fields : []) {\n            if (proj.hasField[field])\n                continue;\n            const p = { type: 'E', field };\n            p.signals = Object.assign({}, signalName(p, 'data'));\n            proj.items.push(p);\n            proj.hasField[field] = p;\n            proj.hasSelectionId = proj.hasSelectionId || field === SELECTION_ID;\n        }\n        if (init) {\n            selCmpt.init = init.map((v) => {\n                // Selections can be initialized either with a full object that maps projections to values\n                // or scalar values to smoothen the abstraction gradient from variable params to point selections.\n                return proj.items.map(p => (isObject(v) ? (v[p.channel] !== undefined ? v[p.channel] : v[p.field]) : v));\n            });\n        }\n        if (!isEmpty(timeUnits)) {\n            proj.timeUnit = new TimeUnitNode(null, timeUnits);\n        }\n    },\n    signals: (model, selCmpt, allSignals) => {\n        const name = selCmpt.name + TUPLE_FIELDS;\n        const hasSignal = allSignals.filter(s => s.name === name);\n        return hasSignal.length > 0 || selCmpt.project.hasSelectionId\n            ? allSignals\n            : allSignals.concat({\n                name,\n                value: selCmpt.project.items.map(proj => {\n                    const { signals, hasLegend } = proj, rest = __rest(proj, [\"signals\", \"hasLegend\"]);\n                    rest.field = replacePathInField(rest.field);\n                    return rest;\n                })\n            });\n    }\n};\nexport default project;\n//# sourceMappingURL=project.js.map","import { stringValue } from 'vega-util';\nimport { VL_SELECTION_RESOLVE } from '.';\nimport { isScaleChannel } from '../../channel';\nimport * as log from '../../log';\nimport { hasContinuousDomain } from '../../scale';\nimport { isLayerModel } from '../model';\nimport { replacePathInField } from '../../util';\nconst scaleBindings = {\n    defined: selCmpt => {\n        return selCmpt.type === 'interval' && selCmpt.resolve === 'global' && selCmpt.bind && selCmpt.bind === 'scales';\n    },\n    parse: (model, selCmpt) => {\n        const bound = (selCmpt.scales = []);\n        for (const proj of selCmpt.project.items) {\n            const channel = proj.channel;\n            if (!isScaleChannel(channel)) {\n                continue;\n            }\n            const scale = model.getScaleComponent(channel);\n            const scaleType = scale ? scale.get('type') : undefined;\n            if (!scale || !hasContinuousDomain(scaleType)) {\n                log.warn(log.message.SCALE_BINDINGS_CONTINUOUS);\n                continue;\n            }\n            scale.set('selectionExtent', { param: selCmpt.name, field: proj.field }, true);\n            bound.push(proj);\n        }\n    },\n    topLevelSignals: (model, selCmpt, signals) => {\n        const bound = selCmpt.scales.filter(proj => signals.filter(s => s.name === proj.signals.data).length === 0);\n        // Top-level signals are only needed for multiview displays and if this\n        // view's top-level signals haven't already been generated.\n        if (!model.parent || isTopLevelLayer(model) || bound.length === 0) {\n            return signals;\n        }\n        // vlSelectionResolve does not account for the behavior of bound scales in\n        // multiview displays. Each unit view adds a tuple to the store, but the\n        // state of the selection is the unit selection most recently updated. This\n        // state is captured by the top-level signals that we insert and \"push\n        // outer\" to from within the units. We need to reassemble this state into\n        // the top-level named signal, except no single selCmpt has a global view.\n        const namedSg = signals.filter(s => s.name === selCmpt.name)[0];\n        let update = namedSg.update;\n        if (update.indexOf(VL_SELECTION_RESOLVE) >= 0) {\n            namedSg.update = `{${bound\n                .map(proj => `${stringValue(replacePathInField(proj.field))}: ${proj.signals.data}`)\n                .join(', ')}}`;\n        }\n        else {\n            for (const proj of bound) {\n                const mapping = `${stringValue(replacePathInField(proj.field))}: ${proj.signals.data}`;\n                if (!update.includes(mapping)) {\n                    update = `${update.substring(0, update.length - 1)}, ${mapping}}`;\n                }\n            }\n            namedSg.update = update;\n        }\n        return signals.concat(bound.map(proj => ({ name: proj.signals.data })));\n    },\n    signals: (model, selCmpt, signals) => {\n        // Nested signals need only push to top-level signals with multiview displays.\n        if (model.parent && !isTopLevelLayer(model)) {\n            for (const proj of selCmpt.scales) {\n                const signal = signals.filter(s => s.name === proj.signals.data)[0];\n                signal.push = 'outer';\n                delete signal.value;\n                delete signal.update;\n            }\n        }\n        return signals;\n    }\n};\nexport default scaleBindings;\nexport function domain(model, channel) {\n    const scale = stringValue(model.scaleName(channel));\n    return `domain(${scale})`;\n}\nfunction isTopLevelLayer(model) {\n    var _a;\n    return model.parent && isLayerModel(model.parent) && ((_a = !model.parent.parent) !== null && _a !== void 0 ? _a : isTopLevelLayer(model.parent.parent));\n}\n//# sourceMappingURL=scales.js.map","import { TUPLE, unitName } from '.';\nexport const TOGGLE = '_toggle';\nconst toggle = {\n    defined: selCmpt => {\n        return selCmpt.type === 'point' && !!selCmpt.toggle;\n    },\n    signals: (model, selCmpt, signals) => {\n        return signals.concat({\n            name: selCmpt.name + TOGGLE,\n            value: false,\n            on: [{ events: selCmpt.events, update: selCmpt.toggle }]\n        });\n    },\n    modifyExpr: (model, selCmpt) => {\n        const tpl = selCmpt.name + TUPLE;\n        const signal = selCmpt.name + TOGGLE;\n        return (`${signal} ? null : ${tpl}, ` +\n            (selCmpt.resolve === 'global' ? `${signal} ? null : true, ` : `${signal} ? null : {unit: ${unitName(model)}}, `) +\n            `${signal} ? ${tpl} : null`);\n    }\n};\nexport default toggle;\n//# sourceMappingURL=toggle.js.map","import { parseSelector } from 'vega-event-selector';\nimport { X, Y } from '../../channel';\nimport { BRUSH as INTERVAL_BRUSH } from './interval';\nimport scalesCompiler, { domain } from './scales';\nconst ANCHOR = '_translate_anchor';\nconst DELTA = '_translate_delta';\nconst translate = {\n    defined: selCmpt => {\n        return selCmpt.type === 'interval' && selCmpt.translate;\n    },\n    signals: (model, selCmpt, signals) => {\n        const name = selCmpt.name;\n        const hasScales = scalesCompiler.defined(selCmpt);\n        const anchor = name + ANCHOR;\n        const { x, y } = selCmpt.project.hasChannel;\n        let events = parseSelector(selCmpt.translate, 'scope');\n        if (!hasScales) {\n            events = events.map(e => ((e.between[0].markname = name + INTERVAL_BRUSH), e));\n        }\n        signals.push({\n            name: anchor,\n            value: {},\n            on: [\n                {\n                    events: events.map(e => e.between[0]),\n                    update: '{x: x(unit), y: y(unit)' +\n                        (x !== undefined ? `, extent_x: ${hasScales ? domain(model, X) : `slice(${x.signals.visual})`}` : '') +\n                        (y !== undefined ? `, extent_y: ${hasScales ? domain(model, Y) : `slice(${y.signals.visual})`}` : '') +\n                        '}'\n                }\n            ]\n        }, {\n            name: name + DELTA,\n            value: {},\n            on: [\n                {\n                    events,\n                    update: `{x: ${anchor}.x - x(unit), y: ${anchor}.y - y(unit)}`\n                }\n            ]\n        });\n        if (x !== undefined) {\n            onDelta(model, selCmpt, x, 'width', signals);\n        }\n        if (y !== undefined) {\n            onDelta(model, selCmpt, y, 'height', signals);\n        }\n        return signals;\n    }\n};\nexport default translate;\nfunction onDelta(model, selCmpt, proj, size, signals) {\n    var _a, _b;\n    const name = selCmpt.name;\n    const anchor = name + ANCHOR;\n    const delta = name + DELTA;\n    const channel = proj.channel;\n    const hasScales = scalesCompiler.defined(selCmpt);\n    const signal = signals.filter(s => s.name === proj.signals[hasScales ? 'data' : 'visual'])[0];\n    const sizeSg = model.getSizeSignalRef(size).signal;\n    const scaleCmpt = model.getScaleComponent(channel);\n    const scaleType = scaleCmpt.get('type');\n    const reversed = scaleCmpt.get('reverse'); // scale parsing sets this flag for fieldDef.sort\n    const sign = !hasScales ? '' : channel === X ? (reversed ? '' : '-') : reversed ? '-' : '';\n    const extent = `${anchor}.extent_${channel}`;\n    const offset = `${sign}${delta}.${channel} / ${hasScales ? `${sizeSg}` : `span(${extent})`}`;\n    const panFn = !hasScales\n        ? 'panLinear'\n        : scaleType === 'log'\n            ? 'panLog'\n            : scaleType === 'symlog'\n                ? 'panSymlog'\n                : scaleType === 'pow'\n                    ? 'panPow'\n                    : 'panLinear';\n    const arg = !hasScales\n        ? ''\n        : scaleType === 'pow'\n            ? `, ${(_a = scaleCmpt.get('exponent')) !== null && _a !== void 0 ? _a : 1}`\n            : scaleType === 'symlog'\n                ? `, ${(_b = scaleCmpt.get('constant')) !== null && _b !== void 0 ? _b : 1}`\n                : '';\n    const update = `${panFn}(${extent}, ${offset}${arg})`;\n    signal.on.push({\n        events: { signal: delta },\n        update: hasScales ? update : `clampRange(${update}, 0, ${sizeSg})`\n    });\n}\n//# sourceMappingURL=translate.js.map","import { parseSelector } from 'vega-event-selector';\nimport { stringValue } from 'vega-util';\nimport { X, Y } from '../../channel';\nimport { BRUSH as INTERVAL_BRUSH } from './interval';\nimport { default as scalesCompiler, domain } from './scales';\nconst ANCHOR = '_zoom_anchor';\nconst DELTA = '_zoom_delta';\nconst zoom = {\n    defined: selCmpt => {\n        return selCmpt.type === 'interval' && selCmpt.zoom;\n    },\n    signals: (model, selCmpt, signals) => {\n        const name = selCmpt.name;\n        const hasScales = scalesCompiler.defined(selCmpt);\n        const delta = name + DELTA;\n        const { x, y } = selCmpt.project.hasChannel;\n        const sx = stringValue(model.scaleName(X));\n        const sy = stringValue(model.scaleName(Y));\n        let events = parseSelector(selCmpt.zoom, 'scope');\n        if (!hasScales) {\n            events = events.map(e => ((e.markname = name + INTERVAL_BRUSH), e));\n        }\n        signals.push({\n            name: name + ANCHOR,\n            on: [\n                {\n                    events,\n                    update: !hasScales\n                        ? `{x: x(unit), y: y(unit)}`\n                        : '{' +\n                            [sx ? `x: invert(${sx}, x(unit))` : '', sy ? `y: invert(${sy}, y(unit))` : '']\n                                .filter(expr => !!expr)\n                                .join(', ') +\n                            '}'\n                }\n            ]\n        }, {\n            name: delta,\n            on: [\n                {\n                    events,\n                    force: true,\n                    update: 'pow(1.001, event.deltaY * pow(16, event.deltaMode))'\n                }\n            ]\n        });\n        if (x !== undefined) {\n            onDelta(model, selCmpt, x, 'width', signals);\n        }\n        if (y !== undefined) {\n            onDelta(model, selCmpt, y, 'height', signals);\n        }\n        return signals;\n    }\n};\nexport default zoom;\nfunction onDelta(model, selCmpt, proj, size, signals) {\n    var _a, _b;\n    const name = selCmpt.name;\n    const channel = proj.channel;\n    const hasScales = scalesCompiler.defined(selCmpt);\n    const signal = signals.filter(s => s.name === proj.signals[hasScales ? 'data' : 'visual'])[0];\n    const sizeSg = model.getSizeSignalRef(size).signal;\n    const scaleCmpt = model.getScaleComponent(channel);\n    const scaleType = scaleCmpt.get('type');\n    const base = hasScales ? domain(model, channel) : signal.name;\n    const delta = name + DELTA;\n    const anchor = `${name}${ANCHOR}.${channel}`;\n    const zoomFn = !hasScales\n        ? 'zoomLinear'\n        : scaleType === 'log'\n            ? 'zoomLog'\n            : scaleType === 'symlog'\n                ? 'zoomSymlog'\n                : scaleType === 'pow'\n                    ? 'zoomPow'\n                    : 'zoomLinear';\n    const arg = !hasScales\n        ? ''\n        : scaleType === 'pow'\n            ? `, ${(_a = scaleCmpt.get('exponent')) !== null && _a !== void 0 ? _a : 1}`\n            : scaleType === 'symlog'\n                ? `, ${(_b = scaleCmpt.get('constant')) !== null && _b !== void 0 ? _b : 1}`\n                : '';\n    const update = `${zoomFn}(${base}, ${anchor}, ${delta}${arg})`;\n    signal.on.push({\n        events: { signal: delta },\n        update: hasScales ? update : `clampRange(${update}, 0, ${sizeSg})`\n    });\n}\n//# sourceMappingURL=zoom.js.map","/**\n * A class that behaves like a SignalRef but lazily generates the signal.\n * The provided generator function should use `Model.getSignalName` to use the correct signal name.\n */\nexport class SignalRefWrapper {\n    constructor(exprGenerator) {\n        Object.defineProperty(this, 'signal', {\n            enumerable: true,\n            get: exprGenerator\n        });\n    }\n    static fromName(rename, signalName) {\n        return new SignalRefWrapper(() => rename(signalName));\n    }\n}\n//# sourceMappingURL=signal.js.map","import * as log from '../log';\nimport { deepEqual, duplicate, getFirstDefined, keys } from '../util';\n/**\n * Generic class for storing properties that are explicitly specified\n * and implicitly determined by the compiler.\n * This is important for scale/axis/legend merging as\n * we want to prioritize properties that users explicitly specified.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport class Split {\n    constructor(explicit = {}, implicit = {}) {\n        this.explicit = explicit;\n        this.implicit = implicit;\n    }\n    clone() {\n        return new Split(duplicate(this.explicit), duplicate(this.implicit));\n    }\n    combine() {\n        return Object.assign(Object.assign({}, this.explicit), this.implicit);\n    }\n    get(key) {\n        // Explicit has higher precedence\n        return getFirstDefined(this.explicit[key], this.implicit[key]);\n    }\n    getWithExplicit(key) {\n        // Explicit has higher precedence\n        if (this.explicit[key] !== undefined) {\n            return { explicit: true, value: this.explicit[key] };\n        }\n        else if (this.implicit[key] !== undefined) {\n            return { explicit: false, value: this.implicit[key] };\n        }\n        return { explicit: false, value: undefined };\n    }\n    setWithExplicit(key, { value, explicit }) {\n        if (value !== undefined) {\n            this.set(key, value, explicit);\n        }\n    }\n    set(key, value, explicit) {\n        delete this[explicit ? 'implicit' : 'explicit'][key];\n        this[explicit ? 'explicit' : 'implicit'][key] = value;\n        return this;\n    }\n    copyKeyFromSplit(key, { explicit, implicit }) {\n        // Explicit has higher precedence\n        if (explicit[key] !== undefined) {\n            this.set(key, explicit[key], true);\n        }\n        else if (implicit[key] !== undefined) {\n            this.set(key, implicit[key], false);\n        }\n    }\n    copyKeyFromObject(key, s) {\n        // Explicit has higher precedence\n        if (s[key] !== undefined) {\n            this.set(key, s[key], true);\n        }\n    }\n    /**\n     * Merge split object into this split object. Properties from the other split\n     * overwrite properties from this split.\n     */\n    copyAll(other) {\n        for (const key of keys(other.combine())) {\n            const val = other.getWithExplicit(key);\n            this.setWithExplicit(key, val);\n        }\n    }\n}\nexport function makeExplicit(value) {\n    return {\n        explicit: true,\n        value\n    };\n}\nexport function makeImplicit(value) {\n    return {\n        explicit: false,\n        value\n    };\n}\nexport function tieBreakByComparing(compare) {\n    return (v1, v2, property, propertyOf) => {\n        const diff = compare(v1.value, v2.value);\n        if (diff > 0) {\n            return v1;\n        }\n        else if (diff < 0) {\n            return v2;\n        }\n        return defaultTieBreaker(v1, v2, property, propertyOf);\n    };\n}\nexport function defaultTieBreaker(v1, v2, property, propertyOf) {\n    if (v1.explicit && v2.explicit) {\n        log.warn(log.message.mergeConflictingProperty(property, propertyOf, v1.value, v2.value));\n    }\n    // If equal score, prefer v1.\n    return v1;\n}\nexport function mergeValuesWithExplicit(v1, v2, property, propertyOf, tieBreaker = defaultTieBreaker) {\n    if (v1 === undefined || v1.value === undefined) {\n        // For first run\n        return v2;\n    }\n    if (v1.explicit && !v2.explicit) {\n        return v1;\n    }\n    else if (v2.explicit && !v1.explicit) {\n        return v2;\n    }\n    else if (deepEqual(v1.value, v2.value)) {\n        return v1;\n    }\n    else {\n        return tieBreaker(v1, v2, property, propertyOf);\n    }\n}\n//# sourceMappingURL=split.js.map","import { isArray } from 'vega-util';\nimport { isConditionalAxisValue } from '../axis';\nimport { GEOPOSITION_CHANNELS, NONPOSITION_SCALE_CHANNELS, POSITION_SCALE_CHANNELS, SCALE_CHANNELS, supportLegend, X, Y } from '../channel';\nimport { getFieldDef, getFieldOrDatumDef, isFieldOrDatumDef, isTypedFieldDef } from '../channeldef';\nimport { isGraticuleGenerator } from '../data';\nimport * as vlEncoding from '../encoding';\nimport { initEncoding } from '../encoding';\nimport { replaceExprRef } from '../expr';\nimport { GEOSHAPE, isMarkDef } from '../mark';\nimport { isSelectionParameter } from '../selection';\nimport { isFrameMixins } from '../spec/base';\nimport { stack } from '../stack';\nimport { keys } from '../util';\nimport { assembleAxisSignals } from './axis/assemble';\nimport { parseUnitAxes } from './axis/parse';\nimport { signalOrValueRefWithCondition, signalRefOrValue } from './common';\nimport { parseData } from './data/parse';\nimport { assembleLayoutSignals } from './layoutsize/assemble';\nimport { initLayoutSize } from './layoutsize/init';\nimport { parseUnitLayoutSize } from './layoutsize/parse';\nimport { defaultFilled, initMarkdef } from './mark/init';\nimport { parseMarkGroups } from './mark/mark';\nimport { isLayerModel, ModelWithField } from './model';\nimport { assembleTopLevelSignals, assembleUnitSelectionData, assembleUnitSelectionMarks, assembleUnitSelectionSignals } from './selection/assemble';\nimport { parseUnitSelection } from './selection/parse';\n/**\n * Internal model of Vega-Lite specification for the compiler.\n */\nexport class UnitModel extends ModelWithField {\n    constructor(spec, parent, parentGivenName, parentGivenSize = {}, config) {\n        var _a;\n        super(spec, 'unit', parent, parentGivenName, config, undefined, isFrameMixins(spec) ? spec.view : undefined);\n        this.specifiedScales = {};\n        this.specifiedAxes = {};\n        this.specifiedLegends = {};\n        this.specifiedProjection = {};\n        this.selection = [];\n        this.children = [];\n        const markDef = isMarkDef(spec.mark) ? Object.assign({}, spec.mark) : { type: spec.mark };\n        const mark = markDef.type;\n        // Need to init filled before other mark properties because encoding depends on filled but other mark properties depend on types inside encoding\n        if (markDef.filled === undefined) {\n            markDef.filled = defaultFilled(markDef, config, {\n                graticule: spec.data && isGraticuleGenerator(spec.data)\n            });\n        }\n        const encoding = (this.encoding = initEncoding(spec.encoding || {}, mark, markDef.filled, config));\n        this.markDef = initMarkdef(markDef, encoding, config);\n        this.size = initLayoutSize({\n            encoding,\n            size: isFrameMixins(spec)\n                ? Object.assign(Object.assign(Object.assign({}, parentGivenSize), (spec.width ? { width: spec.width } : {})), (spec.height ? { height: spec.height } : {})) : parentGivenSize\n        });\n        // calculate stack properties\n        this.stack = stack(mark, encoding);\n        this.specifiedScales = this.initScales(mark, encoding);\n        this.specifiedAxes = this.initAxes(encoding);\n        this.specifiedLegends = this.initLegends(encoding);\n        this.specifiedProjection = spec.projection;\n        // Selections will be initialized upon parse.\n        this.selection = ((_a = spec.params) !== null && _a !== void 0 ? _a : []).filter(p => isSelectionParameter(p));\n    }\n    get hasProjection() {\n        const { encoding } = this;\n        const isGeoShapeMark = this.mark === GEOSHAPE;\n        const hasGeoPosition = encoding && GEOPOSITION_CHANNELS.some(channel => isFieldOrDatumDef(encoding[channel]));\n        return isGeoShapeMark || hasGeoPosition;\n    }\n    /**\n     * Return specified Vega-Lite scale domain for a particular channel\n     * @param channel\n     */\n    scaleDomain(channel) {\n        const scale = this.specifiedScales[channel];\n        return scale ? scale.domain : undefined;\n    }\n    axis(channel) {\n        return this.specifiedAxes[channel];\n    }\n    legend(channel) {\n        return this.specifiedLegends[channel];\n    }\n    initScales(mark, encoding) {\n        return SCALE_CHANNELS.reduce((scales, channel) => {\n            var _a;\n            const fieldOrDatumDef = getFieldOrDatumDef(encoding[channel]);\n            if (fieldOrDatumDef) {\n                scales[channel] = this.initScale((_a = fieldOrDatumDef.scale) !== null && _a !== void 0 ? _a : {});\n            }\n            return scales;\n        }, {});\n    }\n    initScale(scale) {\n        const { domain, range } = scale;\n        // TODO: we could simplify this function if we had a recursive replace function\n        const scaleInternal = replaceExprRef(scale);\n        if (isArray(domain)) {\n            scaleInternal.domain = domain.map(signalRefOrValue);\n        }\n        if (isArray(range)) {\n            scaleInternal.range = range.map(signalRefOrValue);\n        }\n        return scaleInternal;\n    }\n    initAxes(encoding) {\n        return POSITION_SCALE_CHANNELS.reduce((_axis, channel) => {\n            // Position Axis\n            // TODO: handle ConditionFieldDef\n            const channelDef = encoding[channel];\n            if (isFieldOrDatumDef(channelDef) ||\n                (channel === X && isFieldOrDatumDef(encoding.x2)) ||\n                (channel === Y && isFieldOrDatumDef(encoding.y2))) {\n                const axisSpec = isFieldOrDatumDef(channelDef) ? channelDef.axis : undefined;\n                _axis[channel] = axisSpec\n                    ? this.initAxis(Object.assign({}, axisSpec)) // convert truthy value to object\n                    : axisSpec;\n            }\n            return _axis;\n        }, {});\n    }\n    initAxis(axis) {\n        const props = keys(axis);\n        const axisInternal = {};\n        for (const prop of props) {\n            const val = axis[prop];\n            axisInternal[prop] = isConditionalAxisValue(val)\n                ? signalOrValueRefWithCondition(val)\n                : signalRefOrValue(val);\n        }\n        return axisInternal;\n    }\n    initLegends(encoding) {\n        return NONPOSITION_SCALE_CHANNELS.reduce((_legend, channel) => {\n            const fieldOrDatumDef = getFieldOrDatumDef(encoding[channel]);\n            if (fieldOrDatumDef && supportLegend(channel)) {\n                const legend = fieldOrDatumDef.legend;\n                _legend[channel] = legend\n                    ? replaceExprRef(legend) // convert truthy value to object\n                    : legend;\n            }\n            return _legend;\n        }, {});\n    }\n    parseData() {\n        this.component.data = parseData(this);\n    }\n    parseLayoutSize() {\n        parseUnitLayoutSize(this);\n    }\n    parseSelections() {\n        this.component.selection = parseUnitSelection(this, this.selection);\n    }\n    parseMarkGroup() {\n        this.component.mark = parseMarkGroups(this);\n    }\n    parseAxesAndHeaders() {\n        this.component.axes = parseUnitAxes(this);\n    }\n    assembleSelectionTopLevelSignals(signals) {\n        return assembleTopLevelSignals(this, signals);\n    }\n    assembleSignals() {\n        return [...assembleAxisSignals(this), ...assembleUnitSelectionSignals(this, [])];\n    }\n    assembleSelectionData(data) {\n        return assembleUnitSelectionData(this, data);\n    }\n    assembleLayout() {\n        return null;\n    }\n    assembleLayoutSignals() {\n        return assembleLayoutSignals(this);\n    }\n    assembleMarks() {\n        var _a;\n        let marks = (_a = this.component.mark) !== null && _a !== void 0 ? _a : [];\n        // If this unit is part of a layer, selections should augment\n        // all in concert rather than each unit individually. This\n        // ensures correct interleaving of clipping and brushed marks.\n        if (!this.parent || !isLayerModel(this.parent)) {\n            marks = assembleUnitSelectionMarks(this, marks);\n        }\n        return marks.map(this.correctDataNames);\n    }\n    assembleGroupStyle() {\n        const { style } = this.view || {};\n        if (style !== undefined) {\n            return style;\n        }\n        if (this.encoding.x || this.encoding.y) {\n            return 'cell';\n        }\n        else {\n            return undefined;\n        }\n    }\n    getMapping() {\n        return this.encoding;\n    }\n    get mark() {\n        return this.markDef.type;\n    }\n    channelHasField(channel) {\n        return vlEncoding.channelHasField(this.encoding, channel);\n    }\n    fieldDef(channel) {\n        const channelDef = this.encoding[channel];\n        return getFieldDef(channelDef);\n    }\n    typedFieldDef(channel) {\n        const fieldDef = this.fieldDef(channel);\n        if (isTypedFieldDef(fieldDef)) {\n            return fieldDef;\n        }\n        return null;\n    }\n}\n//# sourceMappingURL=unit.js.map","import { getMarkType } from '../mark';\nimport { isUnitSpec } from '../spec/unit';\nexport class CompositeMarkNormalizer {\n    constructor(name, run) {\n        this.name = name;\n        this.run = run;\n    }\n    hasMatchingType(spec) {\n        if (isUnitSpec(spec)) {\n            return getMarkType(spec.mark) === this.name;\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=base.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { isNumber, isObject } from 'vega-util';\nimport { getMarkPropOrConfig } from '../compile/common';\nimport { extractTransformsFromEncoding, normalizeEncoding } from '../encoding';\nimport * as log from '../log';\nimport { isMarkDef } from '../mark';\nimport { isEmpty, omit } from '../util';\nimport { CompositeMarkNormalizer } from './base';\nimport { compositeMarkContinuousAxis, compositeMarkOrient, filterTooltipWithAggregatedField, getCompositeMarkTooltip, getTitle, makeCompositeAggregatePartFactory, partLayerMixins } from './common';\nexport const BOXPLOT = 'boxplot';\nexport const BOXPLOT_PARTS = ['box', 'median', 'outliers', 'rule', 'ticks'];\nexport const boxPlotNormalizer = new CompositeMarkNormalizer(BOXPLOT, normalizeBoxPlot);\nexport function getBoxPlotType(extent) {\n    if (isNumber(extent)) {\n        return 'tukey';\n    }\n    // Ham: If we ever want to, we could add another extent syntax `{kIQR: number}` for the original [Q1-k*IQR, Q3+k*IQR] whisker and call this boxPlotType = `kIQR`. However, I'm not exposing this for now.\n    return extent;\n}\nexport function normalizeBoxPlot(spec, { config }) {\n    var _a, _b;\n    // Need to initEncoding first so we can infer type\n    spec = Object.assign(Object.assign({}, spec), { encoding: normalizeEncoding(spec.encoding, config) });\n    const { mark, encoding: _encoding, params, projection: _p } = spec, outerSpec = __rest(spec, [\"mark\", \"encoding\", \"params\", \"projection\"]);\n    const markDef = isMarkDef(mark) ? mark : { type: mark };\n    // TODO(https://github.com/vega/vega-lite/issues/3702): add selection support\n    if (params) {\n        log.warn(log.message.selectionNotSupported('boxplot'));\n    }\n    const extent = (_a = markDef.extent) !== null && _a !== void 0 ? _a : config.boxplot.extent;\n    const sizeValue = getMarkPropOrConfig('size', markDef, // TODO: https://github.com/vega/vega-lite/issues/6245\n    config);\n    const invalid = markDef.invalid;\n    const boxPlotType = getBoxPlotType(extent);\n    const { bins, timeUnits, transform, continuousAxisChannelDef, continuousAxis, groupby, aggregate, encodingWithoutContinuousAxis, ticksOrient, boxOrient, customTooltipWithoutAggregatedField } = boxParams(spec, extent, config);\n    const { color, size } = encodingWithoutContinuousAxis, encodingWithoutSizeColorAndContinuousAxis = __rest(encodingWithoutContinuousAxis, [\"color\", \"size\"]);\n    const makeBoxPlotPart = (sharedEncoding) => {\n        return makeCompositeAggregatePartFactory(markDef, continuousAxis, continuousAxisChannelDef, sharedEncoding, config.boxplot);\n    };\n    const makeBoxPlotExtent = makeBoxPlotPart(encodingWithoutSizeColorAndContinuousAxis);\n    const makeBoxPlotBox = makeBoxPlotPart(encodingWithoutContinuousAxis);\n    const makeBoxPlotMidTick = makeBoxPlotPart(Object.assign(Object.assign({}, encodingWithoutSizeColorAndContinuousAxis), (size ? { size } : {})));\n    const fiveSummaryTooltipEncoding = getCompositeMarkTooltip([\n        { fieldPrefix: boxPlotType === 'min-max' ? 'upper_whisker_' : 'max_', titlePrefix: 'Max' },\n        { fieldPrefix: 'upper_box_', titlePrefix: 'Q3' },\n        { fieldPrefix: 'mid_box_', titlePrefix: 'Median' },\n        { fieldPrefix: 'lower_box_', titlePrefix: 'Q1' },\n        { fieldPrefix: boxPlotType === 'min-max' ? 'lower_whisker_' : 'min_', titlePrefix: 'Min' }\n    ], continuousAxisChannelDef, encodingWithoutContinuousAxis);\n    // ## Whisker Layers\n    const endTick = { type: 'tick', color: 'black', opacity: 1, orient: ticksOrient, invalid, aria: false };\n    const whiskerTooltipEncoding = boxPlotType === 'min-max'\n        ? fiveSummaryTooltipEncoding // for min-max, show five-summary tooltip for whisker\n        : // for tukey / k-IQR, just show upper/lower-whisker\n            getCompositeMarkTooltip([\n                { fieldPrefix: 'upper_whisker_', titlePrefix: 'Upper Whisker' },\n                { fieldPrefix: 'lower_whisker_', titlePrefix: 'Lower Whisker' }\n            ], continuousAxisChannelDef, encodingWithoutContinuousAxis);\n    const whiskerLayers = [\n        ...makeBoxPlotExtent({\n            partName: 'rule',\n            mark: { type: 'rule', invalid, aria: false },\n            positionPrefix: 'lower_whisker',\n            endPositionPrefix: 'lower_box',\n            extraEncoding: whiskerTooltipEncoding\n        }),\n        ...makeBoxPlotExtent({\n            partName: 'rule',\n            mark: { type: 'rule', invalid, aria: false },\n            positionPrefix: 'upper_box',\n            endPositionPrefix: 'upper_whisker',\n            extraEncoding: whiskerTooltipEncoding\n        }),\n        ...makeBoxPlotExtent({\n            partName: 'ticks',\n            mark: endTick,\n            positionPrefix: 'lower_whisker',\n            extraEncoding: whiskerTooltipEncoding\n        }),\n        ...makeBoxPlotExtent({\n            partName: 'ticks',\n            mark: endTick,\n            positionPrefix: 'upper_whisker',\n            extraEncoding: whiskerTooltipEncoding\n        })\n    ];\n    // ## Box Layers\n    // TODO: support hiding certain mark parts\n    const boxLayers = [\n        ...(boxPlotType !== 'tukey' ? whiskerLayers : []),\n        ...makeBoxPlotBox({\n            partName: 'box',\n            mark: Object.assign(Object.assign({ type: 'bar' }, (sizeValue ? { size: sizeValue } : {})), { orient: boxOrient, invalid, ariaRoleDescription: 'box' }),\n            positionPrefix: 'lower_box',\n            endPositionPrefix: 'upper_box',\n            extraEncoding: fiveSummaryTooltipEncoding\n        }),\n        ...makeBoxPlotMidTick({\n            partName: 'median',\n            mark: Object.assign(Object.assign(Object.assign({ type: 'tick', invalid }, (isObject(config.boxplot.median) && config.boxplot.median.color ? { color: config.boxplot.median.color } : {})), (sizeValue ? { size: sizeValue } : {})), { orient: ticksOrient, aria: false }),\n            positionPrefix: 'mid_box',\n            extraEncoding: fiveSummaryTooltipEncoding\n        })\n    ];\n    if (boxPlotType === 'min-max') {\n        return Object.assign(Object.assign({}, outerSpec), { transform: ((_b = outerSpec.transform) !== null && _b !== void 0 ? _b : []).concat(transform), layer: boxLayers });\n    }\n    // Tukey Box Plot\n    const lowerBoxExpr = `datum[\"lower_box_${continuousAxisChannelDef.field}\"]`;\n    const upperBoxExpr = `datum[\"upper_box_${continuousAxisChannelDef.field}\"]`;\n    const iqrExpr = `(${upperBoxExpr} - ${lowerBoxExpr})`;\n    const lowerWhiskerExpr = `${lowerBoxExpr} - ${extent} * ${iqrExpr}`;\n    const upperWhiskerExpr = `${upperBoxExpr} + ${extent} * ${iqrExpr}`;\n    const fieldExpr = `datum[\"${continuousAxisChannelDef.field}\"]`;\n    const joinaggregateTransform = {\n        joinaggregate: boxParamsQuartiles(continuousAxisChannelDef.field),\n        groupby\n    };\n    const filteredWhiskerSpec = {\n        transform: [\n            {\n                filter: `(${lowerWhiskerExpr} <= ${fieldExpr}) && (${fieldExpr} <= ${upperWhiskerExpr})`\n            },\n            {\n                aggregate: [\n                    {\n                        op: 'min',\n                        field: continuousAxisChannelDef.field,\n                        as: `lower_whisker_${continuousAxisChannelDef.field}`\n                    },\n                    {\n                        op: 'max',\n                        field: continuousAxisChannelDef.field,\n                        as: `upper_whisker_${continuousAxisChannelDef.field}`\n                    },\n                    // preserve lower_box / upper_box\n                    {\n                        op: 'min',\n                        field: `lower_box_${continuousAxisChannelDef.field}`,\n                        as: `lower_box_${continuousAxisChannelDef.field}`\n                    },\n                    {\n                        op: 'max',\n                        field: `upper_box_${continuousAxisChannelDef.field}`,\n                        as: `upper_box_${continuousAxisChannelDef.field}`\n                    },\n                    ...aggregate\n                ],\n                groupby\n            }\n        ],\n        layer: whiskerLayers\n    };\n    const { tooltip } = encodingWithoutSizeColorAndContinuousAxis, encodingWithoutSizeColorContinuousAxisAndTooltip = __rest(encodingWithoutSizeColorAndContinuousAxis, [\"tooltip\"]);\n    const { scale, axis } = continuousAxisChannelDef;\n    const title = getTitle(continuousAxisChannelDef);\n    const axisWithoutTitle = omit(axis, ['title']);\n    const outlierLayersMixins = partLayerMixins(markDef, 'outliers', config.boxplot, {\n        transform: [{ filter: `(${fieldExpr} < ${lowerWhiskerExpr}) || (${fieldExpr} > ${upperWhiskerExpr})` }],\n        mark: 'point',\n        encoding: Object.assign(Object.assign(Object.assign({ [continuousAxis]: Object.assign(Object.assign(Object.assign({ field: continuousAxisChannelDef.field, type: continuousAxisChannelDef.type }, (title !== undefined ? { title } : {})), (scale !== undefined ? { scale } : {})), (isEmpty(axisWithoutTitle) ? {} : { axis: axisWithoutTitle })) }, encodingWithoutSizeColorContinuousAxisAndTooltip), (color ? { color } : {})), (customTooltipWithoutAggregatedField ? { tooltip: customTooltipWithoutAggregatedField } : {}))\n    })[0];\n    let filteredLayersMixins;\n    const filteredLayersMixinsTransforms = [...bins, ...timeUnits, joinaggregateTransform];\n    if (outlierLayersMixins) {\n        filteredLayersMixins = {\n            transform: filteredLayersMixinsTransforms,\n            layer: [outlierLayersMixins, filteredWhiskerSpec]\n        };\n    }\n    else {\n        filteredLayersMixins = filteredWhiskerSpec;\n        filteredLayersMixins.transform.unshift(...filteredLayersMixinsTransforms);\n    }\n    return Object.assign(Object.assign({}, outerSpec), { layer: [\n            filteredLayersMixins,\n            {\n                // boxplot\n                transform,\n                layer: boxLayers\n            }\n        ] });\n}\nfunction boxParamsQuartiles(continousAxisField) {\n    return [\n        {\n            op: 'q1',\n            field: continousAxisField,\n            as: `lower_box_${continousAxisField}`\n        },\n        {\n            op: 'q3',\n            field: continousAxisField,\n            as: `upper_box_${continousAxisField}`\n        }\n    ];\n}\nfunction boxParams(spec, extent, config) {\n    const orient = compositeMarkOrient(spec, BOXPLOT);\n    const { continuousAxisChannelDef, continuousAxis } = compositeMarkContinuousAxis(spec, orient, BOXPLOT);\n    const continuousFieldName = continuousAxisChannelDef.field;\n    const boxPlotType = getBoxPlotType(extent);\n    const boxplotSpecificAggregate = [\n        ...boxParamsQuartiles(continuousFieldName),\n        {\n            op: 'median',\n            field: continuousFieldName,\n            as: `mid_box_${continuousFieldName}`\n        },\n        {\n            op: 'min',\n            field: continuousFieldName,\n            as: (boxPlotType === 'min-max' ? 'lower_whisker_' : 'min_') + continuousFieldName\n        },\n        {\n            op: 'max',\n            field: continuousFieldName,\n            as: (boxPlotType === 'min-max' ? 'upper_whisker_' : 'max_') + continuousFieldName\n        }\n    ];\n    const postAggregateCalculates = boxPlotType === 'min-max' || boxPlotType === 'tukey'\n        ? []\n        : [\n            // This is for the  original k-IQR, which we do not expose\n            {\n                calculate: `datum[\"upper_box_${continuousFieldName}\"] - datum[\"lower_box_${continuousFieldName}\"]`,\n                as: `iqr_${continuousFieldName}`\n            },\n            {\n                calculate: `min(datum[\"upper_box_${continuousFieldName}\"] + datum[\"iqr_${continuousFieldName}\"] * ${extent}, datum[\"max_${continuousFieldName}\"])`,\n                as: `upper_whisker_${continuousFieldName}`\n            },\n            {\n                calculate: `max(datum[\"lower_box_${continuousFieldName}\"] - datum[\"iqr_${continuousFieldName}\"] * ${extent}, datum[\"min_${continuousFieldName}\"])`,\n                as: `lower_whisker_${continuousFieldName}`\n            }\n        ];\n    const _a = spec.encoding, _b = continuousAxis, oldContinuousAxisChannelDef = _a[_b], oldEncodingWithoutContinuousAxis = __rest(_a, [typeof _b === \"symbol\" ? _b : _b + \"\"]);\n    const { customTooltipWithoutAggregatedField, filteredEncoding } = filterTooltipWithAggregatedField(oldEncodingWithoutContinuousAxis);\n    const { bins, timeUnits, aggregate, groupby, encoding: encodingWithoutContinuousAxis } = extractTransformsFromEncoding(filteredEncoding, config);\n    const ticksOrient = orient === 'vertical' ? 'horizontal' : 'vertical';\n    const boxOrient = orient;\n    const transform = [\n        ...bins,\n        ...timeUnits,\n        {\n            aggregate: [...aggregate, ...boxplotSpecificAggregate],\n            groupby\n        },\n        ...postAggregateCalculates\n    ];\n    return {\n        bins,\n        timeUnits,\n        transform,\n        groupby,\n        aggregate,\n        continuousAxisChannelDef,\n        continuousAxis,\n        encodingWithoutContinuousAxis,\n        ticksOrient,\n        boxOrient,\n        customTooltipWithoutAggregatedField\n    };\n}\n//# sourceMappingURL=boxplot.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { isArray, isBoolean, isString } from 'vega-util';\nimport { isContinuousFieldOrDatumDef, isFieldDef, isFieldOrDatumDefForTimeFormat } from '../channeldef';\nimport { fieldDefs } from '../encoding';\nimport * as log from '../log';\nimport { isMarkDef } from '../mark';\nimport { getFirstDefined, hash, unique } from '../util';\nimport { isSignalRef } from '../vega.schema';\nimport { toStringFieldDef } from './../channeldef';\nexport function filterTooltipWithAggregatedField(oldEncoding) {\n    const { tooltip } = oldEncoding, filteredEncoding = __rest(oldEncoding, [\"tooltip\"]);\n    if (!tooltip) {\n        return { filteredEncoding };\n    }\n    let customTooltipWithAggregatedField;\n    let customTooltipWithoutAggregatedField;\n    if (isArray(tooltip)) {\n        for (const t of tooltip) {\n            if (t.aggregate) {\n                if (!customTooltipWithAggregatedField) {\n                    customTooltipWithAggregatedField = [];\n                }\n                customTooltipWithAggregatedField.push(t);\n            }\n            else {\n                if (!customTooltipWithoutAggregatedField) {\n                    customTooltipWithoutAggregatedField = [];\n                }\n                customTooltipWithoutAggregatedField.push(t);\n            }\n        }\n        if (customTooltipWithAggregatedField) {\n            filteredEncoding.tooltip = customTooltipWithAggregatedField;\n        }\n    }\n    else {\n        if (tooltip['aggregate']) {\n            filteredEncoding.tooltip = tooltip;\n        }\n        else {\n            customTooltipWithoutAggregatedField = tooltip;\n        }\n    }\n    if (isArray(customTooltipWithoutAggregatedField) && customTooltipWithoutAggregatedField.length === 1) {\n        customTooltipWithoutAggregatedField = customTooltipWithoutAggregatedField[0];\n    }\n    return { customTooltipWithoutAggregatedField, filteredEncoding };\n}\nexport function getCompositeMarkTooltip(tooltipSummary, continuousAxisChannelDef, encodingWithoutContinuousAxis, withFieldName = true) {\n    if ('tooltip' in encodingWithoutContinuousAxis) {\n        return { tooltip: encodingWithoutContinuousAxis.tooltip };\n    }\n    const fiveSummaryTooltip = tooltipSummary.map(({ fieldPrefix, titlePrefix }) => {\n        const mainTitle = withFieldName ? ` of ${getTitle(continuousAxisChannelDef)}` : '';\n        return {\n            field: fieldPrefix + continuousAxisChannelDef.field,\n            type: continuousAxisChannelDef.type,\n            title: isSignalRef(titlePrefix) ? { signal: `${titlePrefix}\"${escape(mainTitle)}\"` } : titlePrefix + mainTitle\n        };\n    });\n    const tooltipFieldDefs = fieldDefs(encodingWithoutContinuousAxis).map(toStringFieldDef);\n    return {\n        tooltip: [\n            ...fiveSummaryTooltip,\n            // need to cast because TextFieldDef supports fewer types of bin\n            ...unique(tooltipFieldDefs, hash)\n        ]\n    };\n}\nexport function getTitle(continuousAxisChannelDef) {\n    const { title, field } = continuousAxisChannelDef;\n    return getFirstDefined(title, field);\n}\nexport function makeCompositeAggregatePartFactory(compositeMarkDef, continuousAxis, continuousAxisChannelDef, sharedEncoding, compositeMarkConfig) {\n    const { scale, axis } = continuousAxisChannelDef;\n    return ({ partName, mark, positionPrefix, endPositionPrefix = undefined, extraEncoding = {} }) => {\n        const title = getTitle(continuousAxisChannelDef);\n        return partLayerMixins(compositeMarkDef, partName, compositeMarkConfig, {\n            mark,\n            encoding: Object.assign(Object.assign(Object.assign({ [continuousAxis]: Object.assign(Object.assign(Object.assign({ field: `${positionPrefix}_${continuousAxisChannelDef.field}`, type: continuousAxisChannelDef.type }, (title !== undefined ? { title } : {})), (scale !== undefined ? { scale } : {})), (axis !== undefined ? { axis } : {})) }, (isString(endPositionPrefix)\n                ? {\n                    [`${continuousAxis}2`]: {\n                        field: `${endPositionPrefix}_${continuousAxisChannelDef.field}`\n                    }\n                }\n                : {})), sharedEncoding), extraEncoding)\n        });\n    };\n}\nexport function partLayerMixins(markDef, part, compositeMarkConfig, partBaseSpec) {\n    const { clip, color, opacity } = markDef;\n    const mark = markDef.type;\n    if (markDef[part] || (markDef[part] === undefined && compositeMarkConfig[part])) {\n        return [\n            Object.assign(Object.assign({}, partBaseSpec), { mark: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, compositeMarkConfig[part]), (clip ? { clip } : {})), (color ? { color } : {})), (opacity ? { opacity } : {})), (isMarkDef(partBaseSpec.mark) ? partBaseSpec.mark : { type: partBaseSpec.mark })), { style: `${mark}-${String(part)}` }), (isBoolean(markDef[part]) ? {} : markDef[part])) })\n        ];\n    }\n    return [];\n}\nexport function compositeMarkContinuousAxis(spec, orient, compositeMark) {\n    const { encoding } = spec;\n    const continuousAxis = orient === 'vertical' ? 'y' : 'x';\n    const continuousAxisChannelDef = encoding[continuousAxis]; // Safe to cast because if x is not continuous fielddef, the orient would not be horizontal.\n    const continuousAxisChannelDef2 = encoding[`${continuousAxis}2`];\n    const continuousAxisChannelDefError = encoding[`${continuousAxis}Error`];\n    const continuousAxisChannelDefError2 = encoding[`${continuousAxis}Error2`];\n    return {\n        continuousAxisChannelDef: filterAggregateFromChannelDef(continuousAxisChannelDef, compositeMark),\n        continuousAxisChannelDef2: filterAggregateFromChannelDef(continuousAxisChannelDef2, compositeMark),\n        continuousAxisChannelDefError: filterAggregateFromChannelDef(continuousAxisChannelDefError, compositeMark),\n        continuousAxisChannelDefError2: filterAggregateFromChannelDef(continuousAxisChannelDefError2, compositeMark),\n        continuousAxis\n    };\n}\nfunction filterAggregateFromChannelDef(continuousAxisChannelDef, compositeMark) {\n    if (continuousAxisChannelDef === null || continuousAxisChannelDef === void 0 ? void 0 : continuousAxisChannelDef.aggregate) {\n        const { aggregate } = continuousAxisChannelDef, continuousAxisWithoutAggregate = __rest(continuousAxisChannelDef, [\"aggregate\"]);\n        if (aggregate !== compositeMark) {\n            log.warn(log.message.errorBarContinuousAxisHasCustomizedAggregate(aggregate, compositeMark));\n        }\n        return continuousAxisWithoutAggregate;\n    }\n    else {\n        return continuousAxisChannelDef;\n    }\n}\nexport function compositeMarkOrient(spec, compositeMark) {\n    const { mark, encoding } = spec;\n    const { x, y } = encoding;\n    if (isMarkDef(mark) && mark.orient) {\n        return mark.orient;\n    }\n    if (isContinuousFieldOrDatumDef(x)) {\n        // x is continuous\n        if (isContinuousFieldOrDatumDef(y)) {\n            // both x and y are continuous\n            const xAggregate = isFieldDef(x) && x.aggregate;\n            const yAggregate = isFieldDef(y) && y.aggregate;\n            if (!xAggregate && yAggregate === compositeMark) {\n                return 'vertical';\n            }\n            else if (!yAggregate && xAggregate === compositeMark) {\n                return 'horizontal';\n            }\n            else if (xAggregate === compositeMark && yAggregate === compositeMark) {\n                throw new Error('Both x and y cannot have aggregate');\n            }\n            else {\n                if (isFieldOrDatumDefForTimeFormat(y) && !isFieldOrDatumDefForTimeFormat(x)) {\n                    // y is temporal but x is not\n                    return 'horizontal';\n                }\n                // default orientation for two continuous\n                return 'vertical';\n            }\n        }\n        return 'horizontal';\n    }\n    else if (isContinuousFieldOrDatumDef(y)) {\n        // y is continuous but x is not\n        return 'vertical';\n    }\n    else {\n        // Neither x nor y is continuous.\n        throw new Error(`Need a valid continuous axis for ${compositeMark}s`);\n    }\n}\n//# sourceMappingURL=common.js.map","import { normalizeEncoding } from '../encoding';\nimport * as log from '../log';\nimport { CompositeMarkNormalizer } from './base';\nimport { makeCompositeAggregatePartFactory } from './common';\nimport { errorBarParams } from './errorbar';\nexport const ERRORBAND = 'errorband';\nexport const ERRORBAND_PARTS = ['band', 'borders'];\nexport const errorBandNormalizer = new CompositeMarkNormalizer(ERRORBAND, normalizeErrorBand);\nexport function normalizeErrorBand(spec, { config }) {\n    // Need to initEncoding first so we can infer type\n    spec = Object.assign(Object.assign({}, spec), { encoding: normalizeEncoding(spec.encoding, config) });\n    const { transform, continuousAxisChannelDef, continuousAxis, encodingWithoutContinuousAxis, markDef, outerSpec, tooltipEncoding } = errorBarParams(spec, ERRORBAND, config);\n    const errorBandDef = markDef;\n    const makeErrorBandPart = makeCompositeAggregatePartFactory(errorBandDef, continuousAxis, continuousAxisChannelDef, encodingWithoutContinuousAxis, config.errorband);\n    const is2D = spec.encoding.x !== undefined && spec.encoding.y !== undefined;\n    let bandMark = { type: is2D ? 'area' : 'rect' };\n    let bordersMark = { type: is2D ? 'line' : 'rule' };\n    const interpolate = Object.assign(Object.assign({}, (errorBandDef.interpolate ? { interpolate: errorBandDef.interpolate } : {})), (errorBandDef.tension && errorBandDef.interpolate ? { tension: errorBandDef.tension } : {}));\n    if (is2D) {\n        bandMark = Object.assign(Object.assign(Object.assign({}, bandMark), interpolate), { ariaRoleDescription: 'errorband' });\n        bordersMark = Object.assign(Object.assign(Object.assign({}, bordersMark), interpolate), { aria: false });\n    }\n    else if (errorBandDef.interpolate) {\n        log.warn(log.message.errorBand1DNotSupport('interpolate'));\n    }\n    else if (errorBandDef.tension) {\n        log.warn(log.message.errorBand1DNotSupport('tension'));\n    }\n    return Object.assign(Object.assign({}, outerSpec), { transform, layer: [\n            ...makeErrorBandPart({\n                partName: 'band',\n                mark: bandMark,\n                positionPrefix: 'lower',\n                endPositionPrefix: 'upper',\n                extraEncoding: tooltipEncoding\n            }),\n            ...makeErrorBandPart({\n                partName: 'borders',\n                mark: bordersMark,\n                positionPrefix: 'lower',\n                extraEncoding: tooltipEncoding\n            }),\n            ...makeErrorBandPart({\n                partName: 'borders',\n                mark: bordersMark,\n                positionPrefix: 'upper',\n                extraEncoding: tooltipEncoding\n            })\n        ] });\n}\n//# sourceMappingURL=errorband.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { isContinuousFieldOrDatumDef, isFieldOrDatumDef, title } from '../channeldef';\nimport { extractTransformsFromEncoding, normalizeEncoding } from '../encoding';\nimport * as log from '../log';\nimport { isMarkDef } from '../mark';\nimport { replaceAll, titleCase } from '../util';\nimport { CompositeMarkNormalizer } from './base';\nimport { compositeMarkContinuousAxis, compositeMarkOrient, getCompositeMarkTooltip, makeCompositeAggregatePartFactory } from './common';\nexport const ERRORBAR = 'errorbar';\nexport const ERRORBAR_PARTS = ['ticks', 'rule'];\nexport const errorBarNormalizer = new CompositeMarkNormalizer(ERRORBAR, normalizeErrorBar);\nexport function normalizeErrorBar(spec, { config }) {\n    // Need to initEncoding first so we can infer type\n    spec = Object.assign(Object.assign({}, spec), { encoding: normalizeEncoding(spec.encoding, config) });\n    const { transform, continuousAxisChannelDef, continuousAxis, encodingWithoutContinuousAxis, ticksOrient, markDef, outerSpec, tooltipEncoding } = errorBarParams(spec, ERRORBAR, config);\n    delete encodingWithoutContinuousAxis['size'];\n    const makeErrorBarPart = makeCompositeAggregatePartFactory(markDef, continuousAxis, continuousAxisChannelDef, encodingWithoutContinuousAxis, config.errorbar);\n    const thickness = markDef.thickness;\n    const size = markDef.size;\n    const tick = Object.assign(Object.assign({ type: 'tick', orient: ticksOrient, aria: false }, (thickness !== undefined ? { thickness } : {})), (size !== undefined ? { size } : {}));\n    const layer = [\n        ...makeErrorBarPart({\n            partName: 'ticks',\n            mark: tick,\n            positionPrefix: 'lower',\n            extraEncoding: tooltipEncoding\n        }),\n        ...makeErrorBarPart({\n            partName: 'ticks',\n            mark: tick,\n            positionPrefix: 'upper',\n            extraEncoding: tooltipEncoding\n        }),\n        ...makeErrorBarPart({\n            partName: 'rule',\n            mark: Object.assign({ type: 'rule', ariaRoleDescription: 'errorbar' }, (thickness !== undefined ? { size: thickness } : {})),\n            positionPrefix: 'lower',\n            endPositionPrefix: 'upper',\n            extraEncoding: tooltipEncoding\n        })\n    ];\n    return Object.assign(Object.assign(Object.assign({}, outerSpec), { transform }), (layer.length > 1 ? { layer } : Object.assign({}, layer[0])));\n}\nfunction errorBarOrientAndInputType(spec, compositeMark) {\n    const { encoding } = spec;\n    if (errorBarIsInputTypeRaw(encoding)) {\n        return {\n            orient: compositeMarkOrient(spec, compositeMark),\n            inputType: 'raw'\n        };\n    }\n    const isTypeAggregatedUpperLower = errorBarIsInputTypeAggregatedUpperLower(encoding);\n    const isTypeAggregatedError = errorBarIsInputTypeAggregatedError(encoding);\n    const x = encoding.x;\n    const y = encoding.y;\n    if (isTypeAggregatedUpperLower) {\n        // type is aggregated-upper-lower\n        if (isTypeAggregatedError) {\n            throw new Error(`${compositeMark} cannot be both type aggregated-upper-lower and aggregated-error`);\n        }\n        const x2 = encoding.x2;\n        const y2 = encoding.y2;\n        if (isFieldOrDatumDef(x2) && isFieldOrDatumDef(y2)) {\n            // having both x, x2 and y, y2\n            throw new Error(`${compositeMark} cannot have both x2 and y2`);\n        }\n        else if (isFieldOrDatumDef(x2)) {\n            if (isContinuousFieldOrDatumDef(x)) {\n                // having x, x2 quantitative and field y, y2 are not specified\n                return { orient: 'horizontal', inputType: 'aggregated-upper-lower' };\n            }\n            else {\n                // having x, x2 that are not both quantitative\n                throw new Error(`Both x and x2 have to be quantitative in ${compositeMark}`);\n            }\n        }\n        else if (isFieldOrDatumDef(y2)) {\n            // y2 is a FieldDef\n            if (isContinuousFieldOrDatumDef(y)) {\n                // having y, y2 quantitative and field x, x2 are not specified\n                return { orient: 'vertical', inputType: 'aggregated-upper-lower' };\n            }\n            else {\n                // having y, y2 that are not both quantitative\n                throw new Error(`Both y and y2 have to be quantitative in ${compositeMark}`);\n            }\n        }\n        throw new Error('No ranged axis');\n    }\n    else {\n        // type is aggregated-error\n        const xError = encoding.xError;\n        const xError2 = encoding.xError2;\n        const yError = encoding.yError;\n        const yError2 = encoding.yError2;\n        if (isFieldOrDatumDef(xError2) && !isFieldOrDatumDef(xError)) {\n            // having xError2 without xError\n            throw new Error(`${compositeMark} cannot have xError2 without xError`);\n        }\n        if (isFieldOrDatumDef(yError2) && !isFieldOrDatumDef(yError)) {\n            // having yError2 without yError\n            throw new Error(`${compositeMark} cannot have yError2 without yError`);\n        }\n        if (isFieldOrDatumDef(xError) && isFieldOrDatumDef(yError)) {\n            // having both xError and yError\n            throw new Error(`${compositeMark} cannot have both xError and yError with both are quantiative`);\n        }\n        else if (isFieldOrDatumDef(xError)) {\n            if (isContinuousFieldOrDatumDef(x)) {\n                // having x and xError that are all quantitative\n                return { orient: 'horizontal', inputType: 'aggregated-error' };\n            }\n            else {\n                // having x, xError, and xError2 that are not all quantitative\n                throw new Error('All x, xError, and xError2 (if exist) have to be quantitative');\n            }\n        }\n        else if (isFieldOrDatumDef(yError)) {\n            if (isContinuousFieldOrDatumDef(y)) {\n                // having y and yError that are all quantitative\n                return { orient: 'vertical', inputType: 'aggregated-error' };\n            }\n            else {\n                // having y, yError, and yError2 that are not all quantitative\n                throw new Error('All y, yError, and yError2 (if exist) have to be quantitative');\n            }\n        }\n        throw new Error('No ranged axis');\n    }\n}\nfunction errorBarIsInputTypeRaw(encoding) {\n    return ((isFieldOrDatumDef(encoding.x) || isFieldOrDatumDef(encoding.y)) &&\n        !isFieldOrDatumDef(encoding.x2) &&\n        !isFieldOrDatumDef(encoding.y2) &&\n        !isFieldOrDatumDef(encoding.xError) &&\n        !isFieldOrDatumDef(encoding.xError2) &&\n        !isFieldOrDatumDef(encoding.yError) &&\n        !isFieldOrDatumDef(encoding.yError2));\n}\nfunction errorBarIsInputTypeAggregatedUpperLower(encoding) {\n    return isFieldOrDatumDef(encoding.x2) || isFieldOrDatumDef(encoding.y2);\n}\nfunction errorBarIsInputTypeAggregatedError(encoding) {\n    return (isFieldOrDatumDef(encoding.xError) ||\n        isFieldOrDatumDef(encoding.xError2) ||\n        isFieldOrDatumDef(encoding.yError) ||\n        isFieldOrDatumDef(encoding.yError2));\n}\nexport function errorBarParams(spec, compositeMark, config) {\n    var _a;\n    // TODO: use selection\n    const { mark, encoding, params, projection: _p } = spec, outerSpec = __rest(spec, [\"mark\", \"encoding\", \"params\", \"projection\"]);\n    const markDef = isMarkDef(mark) ? mark : { type: mark };\n    // TODO(https://github.com/vega/vega-lite/issues/3702): add selection support\n    if (params) {\n        log.warn(log.message.selectionNotSupported(compositeMark));\n    }\n    const { orient, inputType } = errorBarOrientAndInputType(spec, compositeMark);\n    const { continuousAxisChannelDef, continuousAxisChannelDef2, continuousAxisChannelDefError, continuousAxisChannelDefError2, continuousAxis } = compositeMarkContinuousAxis(spec, orient, compositeMark);\n    const { errorBarSpecificAggregate, postAggregateCalculates, tooltipSummary, tooltipTitleWithFieldName } = errorBarAggregationAndCalculation(markDef, continuousAxisChannelDef, continuousAxisChannelDef2, continuousAxisChannelDefError, continuousAxisChannelDefError2, inputType, compositeMark, config);\n    const _b = encoding, _c = continuousAxis, oldContinuousAxisChannelDef = _b[_c], _d = continuousAxis === 'x' ? 'x2' : 'y2', oldContinuousAxisChannelDef2 = _b[_d], _e = continuousAxis === 'x' ? 'xError' : 'yError', oldContinuousAxisChannelDefError = _b[_e], _f = continuousAxis === 'x' ? 'xError2' : 'yError2', oldContinuousAxisChannelDefError2 = _b[_f], oldEncodingWithoutContinuousAxis = __rest(_b, [typeof _c === \"symbol\" ? _c : _c + \"\", typeof _d === \"symbol\" ? _d : _d + \"\", typeof _e === \"symbol\" ? _e : _e + \"\", typeof _f === \"symbol\" ? _f : _f + \"\"]);\n    const { bins, timeUnits, aggregate: oldAggregate, groupby: oldGroupBy, encoding: encodingWithoutContinuousAxis } = extractTransformsFromEncoding(oldEncodingWithoutContinuousAxis, config);\n    const aggregate = [...oldAggregate, ...errorBarSpecificAggregate];\n    const groupby = inputType !== 'raw' ? [] : oldGroupBy;\n    const tooltipEncoding = getCompositeMarkTooltip(tooltipSummary, continuousAxisChannelDef, encodingWithoutContinuousAxis, tooltipTitleWithFieldName);\n    return {\n        transform: [\n            ...((_a = outerSpec.transform) !== null && _a !== void 0 ? _a : []),\n            ...bins,\n            ...timeUnits,\n            ...(aggregate.length === 0 ? [] : [{ aggregate, groupby }]),\n            ...postAggregateCalculates\n        ],\n        groupby,\n        continuousAxisChannelDef,\n        continuousAxis,\n        encodingWithoutContinuousAxis,\n        ticksOrient: orient === 'vertical' ? 'horizontal' : 'vertical',\n        markDef,\n        outerSpec,\n        tooltipEncoding\n    };\n}\nfunction errorBarAggregationAndCalculation(markDef, continuousAxisChannelDef, continuousAxisChannelDef2, continuousAxisChannelDefError, continuousAxisChannelDefError2, inputType, compositeMark, config) {\n    let errorBarSpecificAggregate = [];\n    let postAggregateCalculates = [];\n    const continuousFieldName = continuousAxisChannelDef.field;\n    let tooltipSummary;\n    let tooltipTitleWithFieldName = false;\n    if (inputType === 'raw') {\n        const center = markDef.center\n            ? markDef.center\n            : markDef.extent\n                ? markDef.extent === 'iqr'\n                    ? 'median'\n                    : 'mean'\n                : config.errorbar.center;\n        const extent = markDef.extent ? markDef.extent : center === 'mean' ? 'stderr' : 'iqr';\n        if ((center === 'median') !== (extent === 'iqr')) {\n            log.warn(log.message.errorBarCenterIsUsedWithWrongExtent(center, extent, compositeMark));\n        }\n        if (extent === 'stderr' || extent === 'stdev') {\n            errorBarSpecificAggregate = [\n                { op: extent, field: continuousFieldName, as: `extent_${continuousFieldName}` },\n                { op: center, field: continuousFieldName, as: `center_${continuousFieldName}` }\n            ];\n            postAggregateCalculates = [\n                {\n                    calculate: `datum[\"center_${continuousFieldName}\"] + datum[\"extent_${continuousFieldName}\"]`,\n                    as: `upper_${continuousFieldName}`\n                },\n                {\n                    calculate: `datum[\"center_${continuousFieldName}\"] - datum[\"extent_${continuousFieldName}\"]`,\n                    as: `lower_${continuousFieldName}`\n                }\n            ];\n            tooltipSummary = [\n                { fieldPrefix: 'center_', titlePrefix: titleCase(center) },\n                { fieldPrefix: 'upper_', titlePrefix: getTitlePrefix(center, extent, '+') },\n                { fieldPrefix: 'lower_', titlePrefix: getTitlePrefix(center, extent, '-') }\n            ];\n            tooltipTitleWithFieldName = true;\n        }\n        else {\n            let centerOp;\n            let lowerExtentOp;\n            let upperExtentOp;\n            if (extent === 'ci') {\n                centerOp = 'mean';\n                lowerExtentOp = 'ci0';\n                upperExtentOp = 'ci1';\n            }\n            else {\n                centerOp = 'median';\n                lowerExtentOp = 'q1';\n                upperExtentOp = 'q3';\n            }\n            errorBarSpecificAggregate = [\n                { op: lowerExtentOp, field: continuousFieldName, as: `lower_${continuousFieldName}` },\n                { op: upperExtentOp, field: continuousFieldName, as: `upper_${continuousFieldName}` },\n                { op: centerOp, field: continuousFieldName, as: `center_${continuousFieldName}` }\n            ];\n            tooltipSummary = [\n                {\n                    fieldPrefix: 'upper_',\n                    titlePrefix: title({ field: continuousFieldName, aggregate: upperExtentOp, type: 'quantitative' }, config, {\n                        allowDisabling: false\n                    })\n                },\n                {\n                    fieldPrefix: 'lower_',\n                    titlePrefix: title({ field: continuousFieldName, aggregate: lowerExtentOp, type: 'quantitative' }, config, {\n                        allowDisabling: false\n                    })\n                },\n                {\n                    fieldPrefix: 'center_',\n                    titlePrefix: title({ field: continuousFieldName, aggregate: centerOp, type: 'quantitative' }, config, {\n                        allowDisabling: false\n                    })\n                }\n            ];\n        }\n    }\n    else {\n        if (markDef.center || markDef.extent) {\n            log.warn(log.message.errorBarCenterAndExtentAreNotNeeded(markDef.center, markDef.extent));\n        }\n        if (inputType === 'aggregated-upper-lower') {\n            tooltipSummary = [];\n            postAggregateCalculates = [\n                { calculate: `datum[\"${continuousAxisChannelDef2.field}\"]`, as: `upper_${continuousFieldName}` },\n                { calculate: `datum[\"${continuousFieldName}\"]`, as: `lower_${continuousFieldName}` }\n            ];\n        }\n        else if (inputType === 'aggregated-error') {\n            tooltipSummary = [{ fieldPrefix: '', titlePrefix: continuousFieldName }];\n            postAggregateCalculates = [\n                {\n                    calculate: `datum[\"${continuousFieldName}\"] + datum[\"${continuousAxisChannelDefError.field}\"]`,\n                    as: `upper_${continuousFieldName}`\n                }\n            ];\n            if (continuousAxisChannelDefError2) {\n                postAggregateCalculates.push({\n                    calculate: `datum[\"${continuousFieldName}\"] + datum[\"${continuousAxisChannelDefError2.field}\"]`,\n                    as: `lower_${continuousFieldName}`\n                });\n            }\n            else {\n                postAggregateCalculates.push({\n                    calculate: `datum[\"${continuousFieldName}\"] - datum[\"${continuousAxisChannelDefError.field}\"]`,\n                    as: `lower_${continuousFieldName}`\n                });\n            }\n        }\n        for (const postAggregateCalculate of postAggregateCalculates) {\n            tooltipSummary.push({\n                fieldPrefix: postAggregateCalculate.as.substring(0, 6),\n                titlePrefix: replaceAll(replaceAll(postAggregateCalculate.calculate, 'datum[\"', ''), '\"]', '')\n            });\n        }\n    }\n    return { postAggregateCalculates, errorBarSpecificAggregate, tooltipSummary, tooltipTitleWithFieldName };\n}\nfunction getTitlePrefix(center, extent, operation) {\n    return `${titleCase(center)} ${operation} ${extent}`;\n}\n//# sourceMappingURL=errorbar.js.map","import { keys } from '../util';\nimport { CompositeMarkNormalizer } from './base';\nimport { BOXPLOT, BOXPLOT_PARTS, normalizeBoxPlot } from './boxplot';\nimport { ERRORBAND, ERRORBAND_PARTS, normalizeErrorBand } from './errorband';\nimport { ERRORBAR, ERRORBAR_PARTS, normalizeErrorBar } from './errorbar';\n/**\n * Registry index for all composite mark's normalizer\n */\nconst compositeMarkRegistry = {};\nexport function add(mark, run, parts) {\n    const normalizer = new CompositeMarkNormalizer(mark, run);\n    compositeMarkRegistry[mark] = { normalizer, parts };\n}\nexport function remove(mark) {\n    delete compositeMarkRegistry[mark];\n}\nexport function getAllCompositeMarks() {\n    return keys(compositeMarkRegistry);\n}\nadd(BOXPLOT, normalizeBoxPlot, BOXPLOT_PARTS);\nadd(ERRORBAR, normalizeErrorBar, ERRORBAR_PARTS);\nadd(ERRORBAND, normalizeErrorBand, ERRORBAND_PARTS);\n//# sourceMappingURL=index.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { writeConfig } from 'vega';\nimport { isObject, mergeConfig } from 'vega-util';\nimport { AXIS_CONFIGS, isConditionalAxisValue } from './axis';\nimport { signalOrValueRefWithCondition, signalRefOrValue } from './compile/common';\nimport { getAllCompositeMarks } from './compositemark';\nimport { replaceExprRef } from './expr';\nimport { VL_ONLY_LEGEND_CONFIG } from './guide';\nimport { HEADER_CONFIGS } from './header';\nimport { defaultLegendConfig } from './legend';\nimport * as mark from './mark';\nimport { MARK_CONFIGS, PRIMITIVE_MARKS, VL_ONLY_MARK_CONFIG_PROPERTIES, VL_ONLY_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX } from './mark';\nimport { assembleParameterSignals } from './parameter';\nimport { defaultScaleConfig } from './scale';\nimport { defaultConfig as defaultSelectionConfig } from './selection';\nimport { DEFAULT_SPACING, isStep } from './spec/base';\nimport { extractTitleConfig } from './title';\nimport { duplicate, getFirstDefined, isEmpty, keys, omit } from './util';\nexport function getViewConfigContinuousSize(viewConfig, channel) {\n    var _a;\n    return (_a = viewConfig[channel]) !== null && _a !== void 0 ? _a : viewConfig[channel === 'width' ? 'continuousWidth' : 'continuousHeight']; // get width/height for backwards compatibility\n}\nexport function getViewConfigDiscreteStep(viewConfig, channel) {\n    const size = getViewConfigDiscreteSize(viewConfig, channel);\n    return isStep(size) ? size.step : DEFAULT_STEP;\n}\nexport function getViewConfigDiscreteSize(viewConfig, channel) {\n    var _a;\n    const size = (_a = viewConfig[channel]) !== null && _a !== void 0 ? _a : viewConfig[channel === 'width' ? 'discreteWidth' : 'discreteHeight']; // get width/height for backwards compatibility\n    return getFirstDefined(size, { step: viewConfig.step });\n}\nexport const DEFAULT_STEP = 20;\nexport const defaultViewConfig = {\n    continuousWidth: 200,\n    continuousHeight: 200,\n    step: DEFAULT_STEP\n};\nexport function isVgScheme(rangeScheme) {\n    return rangeScheme && !!rangeScheme['scheme'];\n}\nexport const defaultConfig = {\n    background: 'white',\n    padding: 5,\n    timeFormat: '%b %d, %Y',\n    countTitle: 'Count of Records',\n    view: defaultViewConfig,\n    mark: mark.defaultMarkConfig,\n    arc: {},\n    area: {},\n    bar: mark.defaultBarConfig,\n    circle: {},\n    geoshape: {},\n    image: {},\n    line: {},\n    point: {},\n    rect: mark.defaultRectConfig,\n    rule: { color: 'black' },\n    square: {},\n    text: { color: 'black' },\n    tick: mark.defaultTickConfig,\n    trail: {},\n    boxplot: {\n        size: 14,\n        extent: 1.5,\n        box: {},\n        median: { color: 'white' },\n        outliers: {},\n        rule: {},\n        ticks: null\n    },\n    errorbar: {\n        center: 'mean',\n        rule: true,\n        ticks: false\n    },\n    errorband: {\n        band: {\n            opacity: 0.3\n        },\n        borders: false\n    },\n    scale: defaultScaleConfig,\n    projection: {},\n    legend: defaultLegendConfig,\n    header: { titlePadding: 10, labelPadding: 10 },\n    headerColumn: {},\n    headerRow: {},\n    headerFacet: {},\n    selection: defaultSelectionConfig,\n    style: {},\n    title: {},\n    facet: { spacing: DEFAULT_SPACING },\n    concat: { spacing: DEFAULT_SPACING },\n    normalizedNumberFormat: '.0%'\n};\n// Tableau10 color palette, copied from `vegaScale.scheme('tableau10')`\nconst tab10 = [\n    '#4c78a8',\n    '#f58518',\n    '#e45756',\n    '#72b7b2',\n    '#54a24b',\n    '#eeca3b',\n    '#b279a2',\n    '#ff9da6',\n    '#9d755d',\n    '#bab0ac'\n];\nexport const DEFAULT_FONT_SIZE = {\n    text: 11,\n    guideLabel: 10,\n    guideTitle: 11,\n    groupTitle: 13,\n    groupSubtitle: 12\n};\nexport const DEFAULT_COLOR = {\n    blue: tab10[0],\n    orange: tab10[1],\n    red: tab10[2],\n    teal: tab10[3],\n    green: tab10[4],\n    yellow: tab10[5],\n    purple: tab10[6],\n    pink: tab10[7],\n    brown: tab10[8],\n    gray0: '#000',\n    gray1: '#111',\n    gray2: '#222',\n    gray3: '#333',\n    gray4: '#444',\n    gray5: '#555',\n    gray6: '#666',\n    gray7: '#777',\n    gray8: '#888',\n    gray9: '#999',\n    gray10: '#aaa',\n    gray11: '#bbb',\n    gray12: '#ccc',\n    gray13: '#ddd',\n    gray14: '#eee',\n    gray15: '#fff'\n};\nexport function colorSignalConfig(color = {}) {\n    return {\n        signals: [\n            {\n                name: 'color',\n                value: isObject(color) ? Object.assign(Object.assign({}, DEFAULT_COLOR), color) : DEFAULT_COLOR\n            }\n        ],\n        mark: { color: { signal: 'color.blue' } },\n        rule: { color: { signal: 'color.gray0' } },\n        text: {\n            color: { signal: 'color.gray0' }\n        },\n        style: {\n            'guide-label': {\n                fill: { signal: 'color.gray0' }\n            },\n            'guide-title': {\n                fill: { signal: 'color.gray0' }\n            },\n            'group-title': {\n                fill: { signal: 'color.gray0' }\n            },\n            'group-subtitle': {\n                fill: { signal: 'color.gray0' }\n            },\n            cell: {\n                stroke: { signal: 'color.gray8' }\n            }\n        },\n        axis: {\n            domainColor: { signal: 'color.gray13' },\n            gridColor: { signal: 'color.gray8' },\n            tickColor: { signal: 'color.gray13' }\n        },\n        range: {\n            category: [\n                { signal: 'color.blue' },\n                { signal: 'color.orange' },\n                { signal: 'color.red' },\n                { signal: 'color.teal' },\n                { signal: 'color.green' },\n                { signal: 'color.yellow' },\n                { signal: 'color.purple' },\n                { signal: 'color.pink' },\n                { signal: 'color.brown' },\n                { signal: 'color.grey8' }\n            ]\n        }\n    };\n}\nexport function fontSizeSignalConfig(fontSize) {\n    return {\n        signals: [\n            {\n                name: 'fontSize',\n                value: isObject(fontSize) ? Object.assign(Object.assign({}, DEFAULT_FONT_SIZE), fontSize) : DEFAULT_FONT_SIZE\n            }\n        ],\n        text: {\n            fontSize: { signal: 'fontSize.text' }\n        },\n        style: {\n            'guide-label': {\n                fontSize: { signal: 'fontSize.guideLabel' }\n            },\n            'guide-title': {\n                fontSize: { signal: 'fontSize.guideTitle' }\n            },\n            'group-title': {\n                fontSize: { signal: 'fontSize.groupTitle' }\n            },\n            'group-subtitle': {\n                fontSize: { signal: 'fontSize.groupSubtitle' }\n            }\n        }\n    };\n}\nexport function fontConfig(font) {\n    return {\n        text: { font },\n        style: {\n            'guide-label': { font },\n            'guide-title': { font },\n            'group-title': { font },\n            'group-subtitle': { font }\n        }\n    };\n}\nfunction getAxisConfigInternal(axisConfig) {\n    const props = keys(axisConfig || {});\n    const axisConfigInternal = {};\n    for (const prop of props) {\n        const val = axisConfig[prop];\n        axisConfigInternal[prop] = isConditionalAxisValue(val)\n            ? signalOrValueRefWithCondition(val)\n            : signalRefOrValue(val);\n    }\n    return axisConfigInternal;\n}\nfunction getStyleConfigInternal(styleConfig) {\n    const props = keys(styleConfig);\n    const styleConfigInternal = {};\n    for (const prop of props) {\n        // We need to cast to cheat a bit here since styleConfig can be either mark config or axis config\n        styleConfigInternal[prop] = getAxisConfigInternal(styleConfig[prop]);\n    }\n    return styleConfigInternal;\n}\nconst configPropsWithExpr = [\n    ...MARK_CONFIGS,\n    ...AXIS_CONFIGS,\n    ...HEADER_CONFIGS,\n    'background',\n    'padding',\n    'legend',\n    'lineBreak',\n    'scale',\n    'style',\n    'title',\n    'view'\n];\n/**\n * Merge specified config with default config and config for the `color` flag,\n * then replace all expressions with signals\n */\nexport function initConfig(specifiedConfig = {}) {\n    const { color, font, fontSize, selection } = specifiedConfig, restConfig = __rest(specifiedConfig, [\"color\", \"font\", \"fontSize\", \"selection\"]);\n    const mergedConfig = mergeConfig({}, duplicate(defaultConfig), font ? fontConfig(font) : {}, color ? colorSignalConfig(color) : {}, fontSize ? fontSizeSignalConfig(fontSize) : {}, restConfig || {});\n    // mergeConfig doesn't recurse and overrides object values.\n    if (selection) {\n        writeConfig(mergedConfig, 'selection', selection, true);\n    }\n    const outputConfig = omit(mergedConfig, configPropsWithExpr);\n    for (const prop of ['background', 'lineBreak', 'padding']) {\n        if (mergedConfig[prop]) {\n            outputConfig[prop] = signalRefOrValue(mergedConfig[prop]);\n        }\n    }\n    for (const markConfigType of mark.MARK_CONFIGS) {\n        if (mergedConfig[markConfigType]) {\n            // FIXME: outputConfig[markConfigType] expects that types are replaced recursively but replaceExprRef only replaces one level deep\n            outputConfig[markConfigType] = replaceExprRef(mergedConfig[markConfigType]);\n        }\n    }\n    for (const axisConfigType of AXIS_CONFIGS) {\n        if (mergedConfig[axisConfigType]) {\n            outputConfig[axisConfigType] = getAxisConfigInternal(mergedConfig[axisConfigType]);\n        }\n    }\n    for (const headerConfigType of HEADER_CONFIGS) {\n        if (mergedConfig[headerConfigType]) {\n            outputConfig[headerConfigType] = replaceExprRef(mergedConfig[headerConfigType]);\n        }\n    }\n    if (mergedConfig.legend) {\n        outputConfig.legend = replaceExprRef(mergedConfig.legend);\n    }\n    if (mergedConfig.scale) {\n        outputConfig.scale = replaceExprRef(mergedConfig.scale);\n    }\n    if (mergedConfig.style) {\n        outputConfig.style = getStyleConfigInternal(mergedConfig.style);\n    }\n    if (mergedConfig.title) {\n        outputConfig.title = replaceExprRef(mergedConfig.title);\n    }\n    if (mergedConfig.view) {\n        outputConfig.view = replaceExprRef(mergedConfig.view);\n    }\n    return outputConfig;\n}\nconst MARK_STYLES = new Set(['view', ...PRIMITIVE_MARKS]);\nconst VL_ONLY_CONFIG_PROPERTIES = [\n    'color',\n    'fontSize',\n    'background',\n    'padding',\n    'facet',\n    'concat',\n    'numberFormat',\n    'numberFormatType',\n    'normalizedNumberFormat',\n    'normalizedNumberFormatType',\n    'timeFormat',\n    'countTitle',\n    'header',\n    'axisQuantitative',\n    'axisTemporal',\n    'axisDiscrete',\n    'axisPoint',\n    'axisXBand',\n    'axisXPoint',\n    'axisXDiscrete',\n    'axisXQuantitative',\n    'axisXTemporal',\n    'axisYBand',\n    'axisYPoint',\n    'axisYDiscrete',\n    'axisYQuantitative',\n    'axisYTemporal',\n    'scale',\n    'selection',\n    'overlay' // FIXME: Redesign and unhide this\n];\nconst VL_ONLY_ALL_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX = Object.assign({ view: ['continuousWidth', 'continuousHeight', 'discreteWidth', 'discreteHeight', 'step'] }, VL_ONLY_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX);\nexport function stripAndRedirectConfig(config) {\n    config = duplicate(config);\n    for (const prop of VL_ONLY_CONFIG_PROPERTIES) {\n        delete config[prop];\n    }\n    if (config.axis) {\n        // delete condition axis config\n        for (const prop in config.axis) {\n            if (isConditionalAxisValue(config.axis[prop])) {\n                delete config.axis[prop];\n            }\n        }\n    }\n    if (config.legend) {\n        for (const prop of VL_ONLY_LEGEND_CONFIG) {\n            delete config.legend[prop];\n        }\n    }\n    // Remove Vega-Lite only generic mark config\n    if (config.mark) {\n        for (const prop of VL_ONLY_MARK_CONFIG_PROPERTIES) {\n            delete config.mark[prop];\n        }\n        if (config.mark.tooltip && isObject(config.mark.tooltip)) {\n            delete config.mark.tooltip;\n        }\n    }\n    if (config.params) {\n        config.signals = (config.signals || []).concat(assembleParameterSignals(config.params));\n        delete config.params;\n    }\n    for (const markType of MARK_STYLES) {\n        // Remove Vega-Lite-only mark config\n        for (const prop of VL_ONLY_MARK_CONFIG_PROPERTIES) {\n            delete config[markType][prop];\n        }\n        // Remove Vega-Lite only mark-specific config\n        const vlOnlyMarkSpecificConfigs = VL_ONLY_ALL_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX[markType];\n        if (vlOnlyMarkSpecificConfigs) {\n            for (const prop of vlOnlyMarkSpecificConfigs) {\n                delete config[markType][prop];\n            }\n        }\n        // Redirect mark config to config.style so that mark config only affect its own mark type\n        // without affecting other marks that share the same underlying Vega marks.\n        // For example, config.rect should not affect bar marks.\n        redirectConfigToStyleConfig(config, markType);\n    }\n    for (const m of getAllCompositeMarks()) {\n        // Clean up the composite mark config as we don't need them in the output specs anymore\n        delete config[m];\n    }\n    redirectTitleConfig(config);\n    // Remove empty config objects.\n    for (const prop in config) {\n        if (isObject(config[prop]) && isEmpty(config[prop])) {\n            delete config[prop];\n        }\n    }\n    return isEmpty(config) ? undefined : config;\n}\n/**\n *\n * Redirect config.title -- so that title config do not affect header labels,\n * which also uses `title` directive to implement.\n *\n * For subtitle configs in config.title, keep them in config.title as header titles never have subtitles.\n */\nfunction redirectTitleConfig(config) {\n    const { titleMarkConfig, subtitleMarkConfig, subtitle } = extractTitleConfig(config.title);\n    // set config.style if title/subtitleMarkConfig is not an empty object\n    if (!isEmpty(titleMarkConfig)) {\n        config.style['group-title'] = Object.assign(Object.assign({}, config.style['group-title']), titleMarkConfig // config.title has higher precedence than config.style.group-title in Vega\n        );\n    }\n    if (!isEmpty(subtitleMarkConfig)) {\n        config.style['group-subtitle'] = Object.assign(Object.assign({}, config.style['group-subtitle']), subtitleMarkConfig);\n    }\n    // subtitle part can stay in config.title since header titles do not use subtitle\n    if (!isEmpty(subtitle)) {\n        config.title = subtitle;\n    }\n    else {\n        delete config.title;\n    }\n}\nfunction redirectConfigToStyleConfig(config, prop, // string = composite mark\ntoProp, compositeMarkPart) {\n    const propConfig = compositeMarkPart ? config[prop][compositeMarkPart] : config[prop];\n    if (prop === 'view') {\n        toProp = 'cell'; // View's default style is \"cell\"\n    }\n    const style = Object.assign(Object.assign({}, propConfig), config.style[toProp !== null && toProp !== void 0 ? toProp : prop]);\n    // set config.style if it is not an empty object\n    if (!isEmpty(style)) {\n        config.style[toProp !== null && toProp !== void 0 ? toProp : prop] = style;\n    }\n    if (!compositeMarkPart) {\n        // For composite mark, so don't delete the whole config yet as we have to do multiple redirections.\n        delete config[prop];\n    }\n}\n//# sourceMappingURL=config.js.map","export function isUrlData(data) {\n    return 'url' in data;\n}\nexport function isInlineData(data) {\n    return 'values' in data;\n}\nexport function isNamedData(data) {\n    return 'name' in data && !isUrlData(data) && !isInlineData(data) && !isGenerator(data);\n}\nexport function isGenerator(data) {\n    return data && (isSequenceGenerator(data) || isSphereGenerator(data) || isGraticuleGenerator(data));\n}\nexport function isSequenceGenerator(data) {\n    return 'sequence' in data;\n}\nexport function isSphereGenerator(data) {\n    return 'sphere' in data;\n}\nexport function isGraticuleGenerator(data) {\n    return 'graticule' in data;\n}\nexport var DataSourceType;\n(function (DataSourceType) {\n    DataSourceType[DataSourceType[\"Raw\"] = 0] = \"Raw\";\n    DataSourceType[DataSourceType[\"Main\"] = 1] = \"Main\";\n    DataSourceType[DataSourceType[\"Row\"] = 2] = \"Row\";\n    DataSourceType[DataSourceType[\"Column\"] = 3] = \"Column\";\n    DataSourceType[DataSourceType[\"Lookup\"] = 4] = \"Lookup\";\n})(DataSourceType || (DataSourceType = {}));\n//# sourceMappingURL=data.js.map","// DateTime definition object\nimport { isNumber, isObject } from 'vega-util';\nimport * as log from './log';\nimport { TIMEUNIT_PARTS } from './timeunit';\nimport { duplicate, isNumeric, keys } from './util';\nexport function isDateTime(o) {\n    if (o && isObject(o)) {\n        for (const part of TIMEUNIT_PARTS) {\n            if (part in o) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nexport const MONTHS = [\n    'january',\n    'february',\n    'march',\n    'april',\n    'may',\n    'june',\n    'july',\n    'august',\n    'september',\n    'october',\n    'november',\n    'december'\n];\nexport const SHORT_MONTHS = MONTHS.map(m => m.substr(0, 3));\nexport const DAYS = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\nexport const SHORT_DAYS = DAYS.map(d => d.substr(0, 3));\nfunction normalizeQuarter(q) {\n    if (isNumeric(q)) {\n        q = +q;\n    }\n    if (isNumber(q)) {\n        if (q > 4) {\n            log.warn(log.message.invalidTimeUnit('quarter', q));\n        }\n        // We accept 1-based quarter, so need to readjust to 0-based quarter\n        return q - 1;\n    }\n    else {\n        // Invalid quarter\n        throw new Error(log.message.invalidTimeUnit('quarter', q));\n    }\n}\nfunction normalizeMonth(m) {\n    if (isNumeric(m)) {\n        m = +m;\n    }\n    if (isNumber(m)) {\n        // We accept 1-based month, so need to readjust to 0-based month\n        return m - 1;\n    }\n    else {\n        const lowerM = m.toLowerCase();\n        const monthIndex = MONTHS.indexOf(lowerM);\n        if (monthIndex !== -1) {\n            return monthIndex; // 0 for january, ...\n        }\n        const shortM = lowerM.substr(0, 3);\n        const shortMonthIndex = SHORT_MONTHS.indexOf(shortM);\n        if (shortMonthIndex !== -1) {\n            return shortMonthIndex;\n        }\n        // Invalid month\n        throw new Error(log.message.invalidTimeUnit('month', m));\n    }\n}\nfunction normalizeDay(d) {\n    if (isNumeric(d)) {\n        d = +d;\n    }\n    if (isNumber(d)) {\n        // mod so that this can be both 0-based where 0 = sunday\n        // and 1-based where 7=sunday\n        return d % 7;\n    }\n    else {\n        const lowerD = d.toLowerCase();\n        const dayIndex = DAYS.indexOf(lowerD);\n        if (dayIndex !== -1) {\n            return dayIndex; // 0 for january, ...\n        }\n        const shortD = lowerD.substr(0, 3);\n        const shortDayIndex = SHORT_DAYS.indexOf(shortD);\n        if (shortDayIndex !== -1) {\n            return shortDayIndex;\n        }\n        // Invalid day\n        throw new Error(log.message.invalidTimeUnit('day', d));\n    }\n}\n/**\n * @param d the date.\n * @param normalize whether to normalize quarter, month, day. This should probably be true if d is a DateTime.\n * @returns array of date time parts [year, month, day, hours, minutes, seconds, milliseconds]\n */\nfunction dateTimeParts(d, normalize) {\n    const parts = [];\n    if (normalize && d.day !== undefined) {\n        if (keys(d).length > 1) {\n            log.warn(log.message.droppedDay(d));\n            d = duplicate(d);\n            delete d.day;\n        }\n    }\n    if (d.year !== undefined) {\n        parts.push(d.year);\n    }\n    else {\n        // Just like Vega's timeunit transform, set default year to 2012, so domain conversion will be compatible with Vega\n        // Note: 2012 is a leap year (and so the date February 29 is respected) that begins on a Sunday (and so days of the week will order properly at the beginning of the year).\n        parts.push(2012);\n    }\n    if (d.month !== undefined) {\n        const month = normalize ? normalizeMonth(d.month) : d.month;\n        parts.push(month);\n    }\n    else if (d.quarter !== undefined) {\n        const quarter = normalize ? normalizeQuarter(d.quarter) : d.quarter;\n        parts.push(isNumber(quarter) ? quarter * 3 : `${quarter}*3`);\n    }\n    else {\n        parts.push(0); // months start at zero in JS\n    }\n    if (d.date !== undefined) {\n        parts.push(d.date);\n    }\n    else if (d.day !== undefined) {\n        // HACK: Day only works as a standalone unit\n        // This is only correct because we always set year to 2006 for day\n        const day = normalize ? normalizeDay(d.day) : d.day;\n        parts.push(isNumber(day) ? day + 1 : `${day}+1`);\n    }\n    else {\n        parts.push(1); // Date starts at 1 in JS\n    }\n    // Note: can't use TimeUnit enum here as importing it will create\n    // circular dependency problem!\n    for (const timeUnit of ['hours', 'minutes', 'seconds', 'milliseconds']) {\n        const unit = d[timeUnit];\n        parts.push(typeof unit === 'undefined' ? 0 : unit);\n    }\n    return parts;\n}\n/**\n * Return Vega expression for a date time.\n *\n * @param d the date time.\n * @returns the Vega expression.\n */\nexport function dateTimeToExpr(d) {\n    const parts = dateTimeParts(d, true);\n    const string = parts.join(', ');\n    if (d.utc) {\n        return `utc(${string})`;\n    }\n    else {\n        return `datetime(${string})`;\n    }\n}\n/**\n * Return Vega expression for a date time expression.\n *\n * @param d the internal date time object with expression.\n * @returns the Vega expression.\n */\nexport function dateTimeExprToExpr(d) {\n    const parts = dateTimeParts(d, false);\n    const string = parts.join(', ');\n    if (d.utc) {\n        return `utc(${string})`;\n    }\n    else {\n        return `datetime(${string})`;\n    }\n}\n/**\n * @param d the date time.\n * @returns the timestamp.\n */\nexport function dateTimeToTimestamp(d) {\n    const parts = dateTimeParts(d, true);\n    if (d.utc) {\n        return +new Date(Date.UTC(...parts));\n    }\n    else {\n        return +new Date(...parts);\n    }\n}\n//# sourceMappingURL=datetime.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { array, isArray } from 'vega-util';\nimport { isArgmaxDef, isArgminDef } from './aggregate';\nimport { isBinned, isBinning } from './bin';\nimport { ANGLE, CHANNELS, COLOR, DESCRIPTION, DETAIL, FILL, FILLOPACITY, getMainChannelFromOffsetChannel, getOffsetScaleChannel, HREF, isChannel, isNonPositionScaleChannel, isSecondaryRangeChannel, isXorY, isXorYOffset, KEY, LATITUDE, LATITUDE2, LONGITUDE, LONGITUDE2, OPACITY, ORDER, RADIUS, RADIUS2, SHAPE, SIZE, STROKE, STROKEDASH, STROKEOPACITY, STROKEWIDTH, supportMark, TEXT, THETA, THETA2, TOOLTIP, UNIT_CHANNELS, URL, X, X2, XOFFSET, Y, Y2, YOFFSET } from './channel';\nimport { binRequiresRange, getFieldDef, getGuide, hasConditionalFieldDef, hasConditionalFieldOrDatumDef, initChannelDef, initFieldDef, isConditionalDef, isDatumDef, isFieldDef, isTypedFieldDef, isValueDef, title, vgField } from './channeldef';\nimport * as log from './log';\nimport { isContinuous, isDiscrete, QUANTITATIVE, TEMPORAL } from './type';\nimport { keys, some } from './util';\nimport { isSignalRef } from './vega.schema';\nexport function channelHasField(encoding, channel) {\n    const channelDef = encoding && encoding[channel];\n    if (channelDef) {\n        if (isArray(channelDef)) {\n            return some(channelDef, fieldDef => !!fieldDef.field);\n        }\n        else {\n            return isFieldDef(channelDef) || hasConditionalFieldDef(channelDef);\n        }\n    }\n    return false;\n}\nexport function channelHasFieldOrDatum(encoding, channel) {\n    const channelDef = encoding && encoding[channel];\n    if (channelDef) {\n        if (isArray(channelDef)) {\n            return some(channelDef, fieldDef => !!fieldDef.field);\n        }\n        else {\n            return isFieldDef(channelDef) || isDatumDef(channelDef) || hasConditionalFieldOrDatumDef(channelDef);\n        }\n    }\n    return false;\n}\nexport function channelHasNestedOffsetScale(encoding, channel) {\n    if (isXorY(channel)) {\n        const fieldDef = encoding[channel];\n        if ((isFieldDef(fieldDef) || isDatumDef(fieldDef)) && isDiscrete(fieldDef.type)) {\n            const offsetChannel = getOffsetScaleChannel(channel);\n            return channelHasFieldOrDatum(encoding, offsetChannel);\n        }\n    }\n    return false;\n}\nexport function isAggregate(encoding) {\n    return some(CHANNELS, channel => {\n        if (channelHasField(encoding, channel)) {\n            const channelDef = encoding[channel];\n            if (isArray(channelDef)) {\n                return some(channelDef, fieldDef => !!fieldDef.aggregate);\n            }\n            else {\n                const fieldDef = getFieldDef(channelDef);\n                return fieldDef && !!fieldDef.aggregate;\n            }\n        }\n        return false;\n    });\n}\nexport function extractTransformsFromEncoding(oldEncoding, config) {\n    const groupby = [];\n    const bins = [];\n    const timeUnits = [];\n    const aggregate = [];\n    const encoding = {};\n    forEach(oldEncoding, (channelDef, channel) => {\n        // Extract potential embedded transformations along with remaining properties\n        if (isFieldDef(channelDef)) {\n            const { field, aggregate: aggOp, bin, timeUnit } = channelDef, remaining = __rest(channelDef, [\"field\", \"aggregate\", \"bin\", \"timeUnit\"]);\n            if (aggOp || timeUnit || bin) {\n                const guide = getGuide(channelDef);\n                const isTitleDefined = guide === null || guide === void 0 ? void 0 : guide.title;\n                let newField = vgField(channelDef, { forAs: true });\n                const newFieldDef = Object.assign(Object.assign(Object.assign({}, (isTitleDefined ? [] : { title: title(channelDef, config, { allowDisabling: true }) })), remaining), { \n                    // Always overwrite field\n                    field: newField });\n                if (aggOp) {\n                    let op;\n                    if (isArgmaxDef(aggOp)) {\n                        op = 'argmax';\n                        newField = vgField({ op: 'argmax', field: aggOp.argmax }, { forAs: true });\n                        newFieldDef.field = `${newField}.${field}`;\n                    }\n                    else if (isArgminDef(aggOp)) {\n                        op = 'argmin';\n                        newField = vgField({ op: 'argmin', field: aggOp.argmin }, { forAs: true });\n                        newFieldDef.field = `${newField}.${field}`;\n                    }\n                    else if (aggOp !== 'boxplot' && aggOp !== 'errorbar' && aggOp !== 'errorband') {\n                        op = aggOp;\n                    }\n                    if (op) {\n                        const aggregateEntry = {\n                            op,\n                            as: newField\n                        };\n                        if (field) {\n                            aggregateEntry.field = field;\n                        }\n                        aggregate.push(aggregateEntry);\n                    }\n                }\n                else {\n                    groupby.push(newField);\n                    if (isTypedFieldDef(channelDef) && isBinning(bin)) {\n                        bins.push({ bin, field, as: newField });\n                        // Add additional groupbys for range and end of bins\n                        groupby.push(vgField(channelDef, { binSuffix: 'end' }));\n                        if (binRequiresRange(channelDef, channel)) {\n                            groupby.push(vgField(channelDef, { binSuffix: 'range' }));\n                        }\n                        // Create accompanying 'x2' or 'y2' field if channel is 'x' or 'y' respectively\n                        if (isXorY(channel)) {\n                            const secondaryChannel = {\n                                field: `${newField}_end`\n                            };\n                            encoding[`${channel}2`] = secondaryChannel;\n                        }\n                        newFieldDef.bin = 'binned';\n                        if (!isSecondaryRangeChannel(channel)) {\n                            newFieldDef['type'] = QUANTITATIVE;\n                        }\n                    }\n                    else if (timeUnit) {\n                        timeUnits.push({\n                            timeUnit,\n                            field,\n                            as: newField\n                        });\n                        // define the format type for later compilation\n                        const formatType = isTypedFieldDef(channelDef) && channelDef.type !== TEMPORAL && 'time';\n                        if (formatType) {\n                            if (channel === TEXT || channel === TOOLTIP) {\n                                newFieldDef['formatType'] = formatType;\n                            }\n                            else if (isNonPositionScaleChannel(channel)) {\n                                newFieldDef['legend'] = Object.assign({ formatType }, newFieldDef['legend']);\n                            }\n                            else if (isXorY(channel)) {\n                                newFieldDef['axis'] = Object.assign({ formatType }, newFieldDef['axis']);\n                            }\n                        }\n                    }\n                }\n                // now the field should refer to post-transformed field instead\n                encoding[channel] = newFieldDef;\n            }\n            else {\n                groupby.push(field);\n                encoding[channel] = oldEncoding[channel];\n            }\n        }\n        else {\n            // For value def / signal ref / datum def, just copy\n            encoding[channel] = oldEncoding[channel];\n        }\n    });\n    return {\n        bins,\n        timeUnits,\n        aggregate,\n        groupby,\n        encoding\n    };\n}\nexport function markChannelCompatible(encoding, channel, mark) {\n    const markSupported = supportMark(channel, mark);\n    if (!markSupported) {\n        return false;\n    }\n    else if (markSupported === 'binned') {\n        const primaryFieldDef = encoding[channel === X2 ? X : Y];\n        // circle, point, square and tick only support x2/y2 when their corresponding x/y fieldDef\n        // has \"binned\" data and thus need x2/y2 to specify the bin-end field.\n        if (isFieldDef(primaryFieldDef) && isFieldDef(encoding[channel]) && isBinned(primaryFieldDef.bin)) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    return true;\n}\nexport function initEncoding(encoding, mark, filled, config) {\n    const normalizedEncoding = {};\n    for (const key of keys(encoding)) {\n        if (!isChannel(key)) {\n            // Drop invalid channel\n            log.warn(log.message.invalidEncodingChannel(key));\n        }\n    }\n    for (let channel of UNIT_CHANNELS) {\n        if (!encoding[channel]) {\n            continue;\n        }\n        const channelDef = encoding[channel];\n        if (isXorYOffset(channel)) {\n            const mainChannel = getMainChannelFromOffsetChannel(channel);\n            const positionDef = normalizedEncoding[mainChannel];\n            if (isFieldDef(positionDef)) {\n                if (isContinuous(positionDef.type)) {\n                    if (isFieldDef(channelDef)) {\n                        // TODO: nesting continuous field instead continuous field should\n                        // behave like offsetting the data in data domain\n                        log.warn(log.message.offsetNestedInsideContinuousPositionScaleDropped(mainChannel));\n                        continue;\n                    }\n                }\n            }\n            else {\n                // no x/y, replace it with main channel\n                channel = mainChannel;\n                log.warn(log.message.replaceOffsetWithMainChannel(mainChannel));\n            }\n        }\n        if (channel === 'angle' && mark === 'arc' && !encoding.theta) {\n            log.warn(log.message.REPLACE_ANGLE_WITH_THETA);\n            channel = THETA;\n        }\n        if (!markChannelCompatible(encoding, channel, mark)) {\n            // Drop unsupported channel\n            log.warn(log.message.incompatibleChannel(channel, mark));\n            continue;\n        }\n        // Drop line's size if the field is aggregated.\n        if (channel === SIZE && mark === 'line') {\n            const fieldDef = getFieldDef(encoding[channel]);\n            if (fieldDef === null || fieldDef === void 0 ? void 0 : fieldDef.aggregate) {\n                log.warn(log.message.LINE_WITH_VARYING_SIZE);\n                continue;\n            }\n        }\n        // Drop color if either fill or stroke is specified\n        if (channel === COLOR && (filled ? 'fill' in encoding : 'stroke' in encoding)) {\n            log.warn(log.message.droppingColor('encoding', { fill: 'fill' in encoding, stroke: 'stroke' in encoding }));\n            continue;\n        }\n        if (channel === DETAIL ||\n            (channel === ORDER && !isArray(channelDef) && !isValueDef(channelDef)) ||\n            (channel === TOOLTIP && isArray(channelDef))) {\n            if (channelDef) {\n                // Array of fieldDefs for detail channel (or production rule)\n                normalizedEncoding[channel] = array(channelDef).reduce((defs, fieldDef) => {\n                    if (!isFieldDef(fieldDef)) {\n                        log.warn(log.message.emptyFieldDef(fieldDef, channel));\n                    }\n                    else {\n                        defs.push(initFieldDef(fieldDef, channel));\n                    }\n                    return defs;\n                }, []);\n            }\n        }\n        else {\n            if (channel === TOOLTIP && channelDef === null) {\n                // Preserve null so we can use it to disable tooltip\n                normalizedEncoding[channel] = null;\n            }\n            else if (!isFieldDef(channelDef) &&\n                !isDatumDef(channelDef) &&\n                !isValueDef(channelDef) &&\n                !isConditionalDef(channelDef) &&\n                !isSignalRef(channelDef)) {\n                log.warn(log.message.emptyFieldDef(channelDef, channel));\n                continue;\n            }\n            normalizedEncoding[channel] = initChannelDef(channelDef, channel, config);\n        }\n    }\n    return normalizedEncoding;\n}\n/**\n * For composite marks, we have to call initChannelDef during init so we can infer types earlier.\n */\nexport function normalizeEncoding(encoding, config) {\n    const normalizedEncoding = {};\n    for (const channel of keys(encoding)) {\n        const newChannelDef = initChannelDef(encoding[channel], channel, config, { compositeMark: true });\n        normalizedEncoding[channel] = newChannelDef;\n    }\n    return normalizedEncoding;\n}\nexport function fieldDefs(encoding) {\n    const arr = [];\n    for (const channel of keys(encoding)) {\n        if (channelHasField(encoding, channel)) {\n            const channelDef = encoding[channel];\n            const channelDefArray = array(channelDef);\n            for (const def of channelDefArray) {\n                if (isFieldDef(def)) {\n                    arr.push(def);\n                }\n                else if (hasConditionalFieldDef(def)) {\n                    arr.push(def.condition);\n                }\n            }\n        }\n    }\n    return arr;\n}\nexport function forEach(mapping, f, thisArg) {\n    if (!mapping) {\n        return;\n    }\n    for (const channel of keys(mapping)) {\n        const el = mapping[channel];\n        if (isArray(el)) {\n            for (const channelDef of el) {\n                f.call(thisArg, channelDef, channel);\n            }\n        }\n        else {\n            f.call(thisArg, el, channel);\n        }\n    }\n}\nexport function reduce(mapping, f, init, thisArg) {\n    if (!mapping) {\n        return init;\n    }\n    return keys(mapping).reduce((r, channel) => {\n        const map = mapping[channel];\n        if (isArray(map)) {\n            return map.reduce((r1, channelDef) => {\n                return f.call(thisArg, r1, channelDef, channel);\n            }, r);\n        }\n        else {\n            return f.call(thisArg, r, map, channel);\n        }\n    }, init);\n}\n/**\n * Returns list of path grouping fields for the given encoding\n */\nexport function pathGroupingFields(mark, encoding) {\n    return keys(encoding).reduce((details, channel) => {\n        switch (channel) {\n            // x, y, x2, y2, lat, long, lat1, long2, order, tooltip, href, aria label, cursor should not cause lines to group\n            case X:\n            case Y:\n            case HREF:\n            case DESCRIPTION:\n            case URL:\n            case X2:\n            case Y2:\n            case XOFFSET:\n            case YOFFSET:\n            case THETA:\n            case THETA2:\n            case RADIUS:\n            case RADIUS2:\n            // falls through\n            case LATITUDE:\n            case LONGITUDE:\n            case LATITUDE2:\n            case LONGITUDE2:\n            // TODO: case 'cursor':\n            // text, shape, shouldn't be a part of line/trail/area [falls through]\n            case TEXT:\n            case SHAPE:\n            case ANGLE:\n            // falls through\n            // tooltip fields should not be added to group by [falls through]\n            case TOOLTIP:\n                return details;\n            case ORDER:\n                // order should not group line / trail\n                if (mark === 'line' || mark === 'trail') {\n                    return details;\n                }\n            // but order should group area for stacking (falls through)\n            case DETAIL:\n            case KEY: {\n                const channelDef = encoding[channel];\n                if (isArray(channelDef) || isFieldDef(channelDef)) {\n                    for (const fieldDef of array(channelDef)) {\n                        if (!fieldDef.aggregate) {\n                            details.push(vgField(fieldDef, {}));\n                        }\n                    }\n                }\n                return details;\n            }\n            case SIZE:\n                if (mark === 'trail') {\n                    // For trail, size should not group trail lines.\n                    return details;\n                }\n            // For line, size should group lines.\n            // falls through\n            case COLOR:\n            case FILL:\n            case STROKE:\n            case OPACITY:\n            case FILLOPACITY:\n            case STROKEOPACITY:\n            case STROKEDASH:\n            case STROKEWIDTH: {\n                // TODO strokeDashOffset:\n                // falls through\n                const fieldDef = getFieldDef(encoding[channel]);\n                if (fieldDef && !fieldDef.aggregate) {\n                    details.push(vgField(fieldDef, {}));\n                }\n                return details;\n            }\n        }\n    }, []);\n}\n//# sourceMappingURL=encoding.js.map","import { signalRefOrValue } from './compile/common';\nimport { keys } from './util';\nexport function isExprRef(o) {\n    return !!(o === null || o === void 0 ? void 0 : o.expr);\n}\nexport function replaceExprRef(index) {\n    const props = keys(index || {});\n    const newIndex = {};\n    for (const prop of props) {\n        newIndex[prop] = signalRefOrValue(index[prop]);\n    }\n    return newIndex;\n}\n//# sourceMappingURL=expr.js.map","export const VL_ONLY_LEGEND_CONFIG = [\n    'gradientHorizontalMaxLength',\n    'gradientHorizontalMinLength',\n    'gradientVerticalMaxLength',\n    'gradientVerticalMinLength',\n    'unselectedOpacity'\n];\n//# sourceMappingURL=guide.js.map","import { keys } from './util';\nexport const HEADER_TITLE_PROPERTIES_MAP = {\n    titleAlign: 'align',\n    titleAnchor: 'anchor',\n    titleAngle: 'angle',\n    titleBaseline: 'baseline',\n    titleColor: 'color',\n    titleFont: 'font',\n    titleFontSize: 'fontSize',\n    titleFontStyle: 'fontStyle',\n    titleFontWeight: 'fontWeight',\n    titleLimit: 'limit',\n    titleLineHeight: 'lineHeight',\n    titleOrient: 'orient',\n    titlePadding: 'offset'\n};\nexport const HEADER_LABEL_PROPERTIES_MAP = {\n    labelAlign: 'align',\n    labelAnchor: 'anchor',\n    labelAngle: 'angle',\n    labelBaseline: 'baseline',\n    labelColor: 'color',\n    labelFont: 'font',\n    labelFontSize: 'fontSize',\n    labelFontStyle: 'fontStyle',\n    labelFontWeight: 'fontWeight',\n    labelLimit: 'limit',\n    labelLineHeight: 'lineHeight',\n    labelOrient: 'orient',\n    labelPadding: 'offset'\n};\nexport const HEADER_TITLE_PROPERTIES = keys(HEADER_TITLE_PROPERTIES_MAP);\nexport const HEADER_LABEL_PROPERTIES = keys(HEADER_LABEL_PROPERTIES_MAP);\nconst HEADER_CONFIGS_INDEX = {\n    header: 1,\n    headerRow: 1,\n    headerColumn: 1,\n    headerFacet: 1\n};\nexport const HEADER_CONFIGS = keys(HEADER_CONFIGS_INDEX);\n//# sourceMappingURL=header.js.map","import pkg from '../package.json';\nexport const version = pkg.version;\nexport { compile } from './compile/compile';\nexport { normalize } from './normalize';\nexport * from './util';\n//# sourceMappingURL=index.js.map","import { keys } from './util';\nexport const LEGEND_SCALE_CHANNELS = [\n    'size',\n    'shape',\n    'fill',\n    'stroke',\n    'strokeDash',\n    'strokeWidth',\n    'opacity'\n];\nexport const defaultLegendConfig = {\n    gradientHorizontalMaxLength: 200,\n    gradientHorizontalMinLength: 100,\n    gradientVerticalMaxLength: 200,\n    gradientVerticalMinLength: 64,\n    unselectedOpacity: 0.35\n};\nexport const COMMON_LEGEND_PROPERTY_INDEX = {\n    aria: 1,\n    clipHeight: 1,\n    columnPadding: 1,\n    columns: 1,\n    cornerRadius: 1,\n    description: 1,\n    direction: 1,\n    fillColor: 1,\n    format: 1,\n    formatType: 1,\n    gradientLength: 1,\n    gradientOpacity: 1,\n    gradientStrokeColor: 1,\n    gradientStrokeWidth: 1,\n    gradientThickness: 1,\n    gridAlign: 1,\n    labelAlign: 1,\n    labelBaseline: 1,\n    labelColor: 1,\n    labelFont: 1,\n    labelFontSize: 1,\n    labelFontStyle: 1,\n    labelFontWeight: 1,\n    labelLimit: 1,\n    labelOffset: 1,\n    labelOpacity: 1,\n    labelOverlap: 1,\n    labelPadding: 1,\n    labelSeparation: 1,\n    legendX: 1,\n    legendY: 1,\n    offset: 1,\n    orient: 1,\n    padding: 1,\n    rowPadding: 1,\n    strokeColor: 1,\n    symbolDash: 1,\n    symbolDashOffset: 1,\n    symbolFillColor: 1,\n    symbolLimit: 1,\n    symbolOffset: 1,\n    symbolOpacity: 1,\n    symbolSize: 1,\n    symbolStrokeColor: 1,\n    symbolStrokeWidth: 1,\n    symbolType: 1,\n    tickCount: 1,\n    tickMinStep: 1,\n    title: 1,\n    titleAlign: 1,\n    titleAnchor: 1,\n    titleBaseline: 1,\n    titleColor: 1,\n    titleFont: 1,\n    titleFontSize: 1,\n    titleFontStyle: 1,\n    titleFontWeight: 1,\n    titleLimit: 1,\n    titleLineHeight: 1,\n    titleOpacity: 1,\n    titleOrient: 1,\n    titlePadding: 1,\n    type: 1,\n    values: 1,\n    zindex: 1\n};\nexport const LEGEND_PROPERTIES = keys(COMMON_LEGEND_PROPERTY_INDEX);\n//# sourceMappingURL=legend.js.map","/**\n * Vega-Lite's singleton logger utility.\n */\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _LocalLogger_level;\nimport { Debug, Error as ErrorLevel, Info, logger, Warn } from 'vega-util';\nimport * as message_1 from './message';\nexport { message_1 as message };\n/**\n * Main (default) Vega Logger instance for Vega-Lite.\n */\nconst main = logger(Warn);\nlet current = main;\n/**\n * Logger tool for checking if the code throws correct warning.\n */\nexport class LocalLogger {\n    constructor() {\n        this.warns = [];\n        this.infos = [];\n        this.debugs = [];\n        _LocalLogger_level.set(this, Warn);\n    }\n    level(_) {\n        if (_) {\n            __classPrivateFieldSet(this, _LocalLogger_level, _, \"f\");\n            return this;\n        }\n        return __classPrivateFieldGet(this, _LocalLogger_level, \"f\");\n    }\n    warn(...args) {\n        if (__classPrivateFieldGet(this, _LocalLogger_level, \"f\") >= Warn)\n            this.warns.push(...args);\n        return this;\n    }\n    info(...args) {\n        if (__classPrivateFieldGet(this, _LocalLogger_level, \"f\") >= Info)\n            this.infos.push(...args);\n        return this;\n    }\n    debug(...args) {\n        if (__classPrivateFieldGet(this, _LocalLogger_level, \"f\") >= Debug)\n            this.debugs.push(...args);\n        return this;\n    }\n    error(...args) {\n        if (__classPrivateFieldGet(this, _LocalLogger_level, \"f\") >= ErrorLevel)\n            throw Error(...args);\n        return this;\n    }\n}\n_LocalLogger_level = new WeakMap();\nexport function wrap(f) {\n    return () => {\n        current = new LocalLogger();\n        f(current);\n        reset();\n    };\n}\n/**\n * Set the singleton logger to be a custom logger.\n */\nexport function set(newLogger) {\n    current = newLogger;\n    return current;\n}\n/**\n * Reset the main logger to use the default Vega Logger.\n */\nexport function reset() {\n    current = main;\n    return current;\n}\nexport function error(...args) {\n    current.error(...args);\n}\nexport function warn(...args) {\n    current.warn(...args);\n}\nexport function info(...args) {\n    current.info(...args);\n}\nexport function debug(...args) {\n    current.debug(...args);\n}\n//# sourceMappingURL=index.js.map","import { getSizeChannel } from '../channel';\nimport { stringify } from '../util';\nexport function invalidSpec(spec) {\n    return `Invalid specification ${stringify(spec)}. Make sure the specification includes at least one of the following properties: \"mark\", \"layer\", \"facet\", \"hconcat\", \"vconcat\", \"concat\", or \"repeat\".`;\n}\n// FIT\nexport const FIT_NON_SINGLE = 'Autosize \"fit\" only works for single views and layered views.';\nexport function containerSizeNonSingle(name) {\n    const uName = name == 'width' ? 'Width' : 'Height';\n    return `${uName} \"container\" only works for single views and layered views.`;\n}\nexport function containerSizeNotCompatibleWithAutosize(name) {\n    const uName = name == 'width' ? 'Width' : 'Height';\n    const fitDirection = name == 'width' ? 'x' : 'y';\n    return `${uName} \"container\" only works well with autosize \"fit\" or \"fit-${fitDirection}\".`;\n}\nexport function droppingFit(channel) {\n    return channel\n        ? `Dropping \"fit-${channel}\" because spec has discrete ${getSizeChannel(channel)}.`\n        : `Dropping \"fit\" because spec has discrete size.`;\n}\n// VIEW SIZE\nexport function unknownField(channel) {\n    return `Unknown field for ${channel}. Cannot calculate view size.`;\n}\n// SELECTION\nexport function cannotProjectOnChannelWithoutField(channel) {\n    return `Cannot project a selection on encoding channel \"${channel}\", which has no field.`;\n}\nexport function cannotProjectAggregate(channel, aggregate) {\n    return `Cannot project a selection on encoding channel \"${channel}\" as it uses an aggregate function (\"${aggregate}\").`;\n}\nexport function nearestNotSupportForContinuous(mark) {\n    return `The \"nearest\" transform is not supported for ${mark} marks.`;\n}\nexport function selectionNotSupported(mark) {\n    return `Selection not supported for ${mark} yet.`;\n}\nexport function selectionNotFound(name) {\n    return `Cannot find a selection named \"${name}\".`;\n}\nexport const SCALE_BINDINGS_CONTINUOUS = 'Scale bindings are currently only supported for scales with unbinned, continuous domains.';\nexport const LEGEND_BINDINGS_MUST_HAVE_PROJECTION = 'Legend bindings are only supported for selections over an individual field or encoding channel.';\nexport function cannotLookupVariableParameter(name) {\n    return `Lookups can only be performed on selection parameters. \"${name}\" is a variable parameter.`;\n}\nexport function noSameUnitLookup(name) {\n    return (`Cannot define and lookup the \"${name}\" selection in the same view. ` +\n        `Try moving the lookup into a second, layered view?`);\n}\nexport const NEEDS_SAME_SELECTION = 'The same selection must be used to override scale domains in a layered view.';\nexport const INTERVAL_INITIALIZED_WITH_X_Y = 'Interval selections should be initialized using \"x\" and/or \"y\" keys.';\n// REPEAT\nexport function noSuchRepeatedValue(field) {\n    return `Unknown repeated value \"${field}\".`;\n}\nexport function columnsNotSupportByRowCol(type) {\n    return `The \"columns\" property cannot be used when \"${type}\" has nested row/column.`;\n}\n// CONCAT / REPEAT\nexport const CONCAT_CANNOT_SHARE_AXIS = 'Axes cannot be shared in concatenated or repeated views yet (https://github.com/vega/vega-lite/issues/2415).';\n// DATA\nexport function unrecognizedParse(p) {\n    return `Unrecognized parse \"${p}\".`;\n}\nexport function differentParse(field, local, ancestor) {\n    return `An ancestor parsed field \"${field}\" as ${ancestor} but a child wants to parse the field as ${local}.`;\n}\nexport const ADD_SAME_CHILD_TWICE = 'Attempt to add the same child twice.';\n// TRANSFORMS\nexport function invalidTransformIgnored(transform) {\n    return `Ignoring an invalid transform: ${stringify(transform)}.`;\n}\nexport const NO_FIELDS_NEEDS_AS = 'If \"from.fields\" is not specified, \"as\" has to be a string that specifies the key to be used for the data from the secondary source.';\n// ENCODING & FACET\nexport function customFormatTypeNotAllowed(channel) {\n    return `Config.customFormatTypes is not true, thus custom format type and format for channel ${channel} are dropped.`;\n}\nexport function projectionOverridden(opt) {\n    const { parentProjection, projection } = opt;\n    return `Layer's shared projection ${stringify(parentProjection)} is overridden by a child projection ${stringify(projection)}.`;\n}\nexport const REPLACE_ANGLE_WITH_THETA = 'Arc marks uses theta channel rather than angle, replacing angle with theta.';\nexport function offsetNestedInsideContinuousPositionScaleDropped(mainChannel) {\n    return `${mainChannel}Offset dropped because ${mainChannel} is continuous`;\n}\nexport function replaceOffsetWithMainChannel(mainChannel) {\n    return `There is no ${mainChannel} encoding. Replacing ${mainChannel}Offset encoding as ${mainChannel}.`;\n}\nexport function primitiveChannelDef(channel, type, value) {\n    return `Channel ${channel} is a ${type}. Converted to {value: ${stringify(value)}}.`;\n}\nexport function invalidFieldType(type) {\n    return `Invalid field type \"${type}\".`;\n}\nexport function invalidFieldTypeForCountAggregate(type, aggregate) {\n    return `Invalid field type \"${type}\" for aggregate: \"${aggregate}\", using \"quantitative\" instead.`;\n}\nexport function invalidAggregate(aggregate) {\n    return `Invalid aggregation operator \"${aggregate}\".`;\n}\nexport function missingFieldType(channel, newType) {\n    return `Missing type for channel \"${channel}\", using \"${newType}\" instead.`;\n}\nexport function droppingColor(type, opt) {\n    const { fill, stroke } = opt;\n    return `Dropping color ${type} as the plot also has ${fill && stroke ? 'fill and stroke' : fill ? 'fill' : 'stroke'}.`;\n}\nexport function relativeBandSizeNotSupported(sizeChannel) {\n    return `Position range does not support relative band size for ${sizeChannel}.`;\n}\nexport function emptyFieldDef(fieldDef, channel) {\n    return `Dropping ${stringify(fieldDef)} from channel \"${channel}\" since it does not contain any data field, datum, value, or signal.`;\n}\nexport const LINE_WITH_VARYING_SIZE = 'Line marks cannot encode size with a non-groupby field. You may want to use trail marks instead.';\nexport function incompatibleChannel(channel, markOrFacet, when) {\n    return `${channel} dropped as it is incompatible with \"${markOrFacet}\"${when ? ` when ${when}` : ''}.`;\n}\nexport function offsetEncodingScaleIgnored(channel) {\n    return `${channel} encoding has no scale, so specified scale is ignored.`;\n}\nexport function invalidEncodingChannel(channel) {\n    return `${channel}-encoding is dropped as ${channel} is not a valid encoding channel.`;\n}\nexport function channelShouldBeDiscrete(channel) {\n    return `${channel} encoding should be discrete (ordinal / nominal / binned).`;\n}\nexport function channelShouldBeDiscreteOrDiscretizing(channel) {\n    return `${channel} encoding should be discrete (ordinal / nominal / binned) or use a discretizing scale (e.g. threshold).`;\n}\nexport function facetChannelDropped(channels) {\n    return `Facet encoding dropped as ${channels.join(' and ')} ${channels.length > 1 ? 'are' : 'is'} also specified.`;\n}\nexport function discreteChannelCannotEncode(channel, type) {\n    return `Using discrete channel \"${channel}\" to encode \"${type}\" field can be misleading as it does not encode ${type === 'ordinal' ? 'order' : 'magnitude'}.`;\n}\n// MARK\nexport function rangeMarkAlignmentCannotBeExpression(align) {\n    return `The ${align} for range marks cannot be an expression`;\n}\nexport function lineWithRange(hasX2, hasY2) {\n    const channels = hasX2 && hasY2 ? 'x2 and y2' : hasX2 ? 'x2' : 'y2';\n    return `Line mark is for continuous lines and thus cannot be used with ${channels}. We will use the rule mark (line segments) instead.`;\n}\nexport function orientOverridden(original, actual) {\n    return `Specified orient \"${original}\" overridden with \"${actual}\".`;\n}\n// SCALE\nexport const CANNOT_UNION_CUSTOM_DOMAIN_WITH_FIELD_DOMAIN = 'Custom domain scale cannot be unioned with default field-based domain.';\nexport function cannotUseScalePropertyWithNonColor(prop) {\n    return `Cannot use the scale property \"${prop}\" with non-color channel.`;\n}\nexport function cannotUseRelativeBandSizeWithNonBandScale(scaleType) {\n    return `Cannot use the relative band size with ${scaleType} scale.`;\n}\nexport function unaggregateDomainHasNoEffectForRawField(fieldDef) {\n    return `Using unaggregated domain with raw field has no effect (${stringify(fieldDef)}).`;\n}\nexport function unaggregateDomainWithNonSharedDomainOp(aggregate) {\n    return `Unaggregated domain not applicable for \"${aggregate}\" since it produces values outside the origin domain of the source data.`;\n}\nexport function unaggregatedDomainWithLogScale(fieldDef) {\n    return `Unaggregated domain is currently unsupported for log scale (${stringify(fieldDef)}).`;\n}\nexport function cannotApplySizeToNonOrientedMark(mark) {\n    return `Cannot apply size to non-oriented mark \"${mark}\".`;\n}\nexport function scaleTypeNotWorkWithChannel(channel, scaleType, defaultScaleType) {\n    return `Channel \"${channel}\" does not work with \"${scaleType}\" scale. We are using \"${defaultScaleType}\" scale instead.`;\n}\nexport function scaleTypeNotWorkWithFieldDef(scaleType, defaultScaleType) {\n    return `FieldDef does not work with \"${scaleType}\" scale. We are using \"${defaultScaleType}\" scale instead.`;\n}\nexport function scalePropertyNotWorkWithScaleType(scaleType, propName, channel) {\n    return `${channel}-scale's \"${propName}\" is dropped as it does not work with ${scaleType} scale.`;\n}\nexport function scaleTypeNotWorkWithMark(mark, scaleType) {\n    return `Scale type \"${scaleType}\" does not work with mark \"${mark}\".`;\n}\nexport function stepDropped(channel) {\n    return `The step for \"${channel}\" is dropped because the ${channel === 'width' ? 'x' : 'y'} is continuous.`;\n}\nexport function mergeConflictingProperty(property, propertyOf, v1, v2) {\n    return `Conflicting ${propertyOf.toString()} property \"${property.toString()}\" (${stringify(v1)} and ${stringify(v2)}). Using ${stringify(v1)}.`;\n}\nexport function mergeConflictingDomainProperty(property, propertyOf, v1, v2) {\n    return `Conflicting ${propertyOf.toString()} property \"${property.toString()}\" (${stringify(v1)} and ${stringify(v2)}). Using the union of the two domains.`;\n}\nexport function independentScaleMeansIndependentGuide(channel) {\n    return `Setting the scale to be independent for \"${channel}\" means we also have to set the guide (axis or legend) to be independent.`;\n}\nexport function domainSortDropped(sort) {\n    return `Dropping sort property ${stringify(sort)} as unioned domains only support boolean or op \"count\", \"min\", and \"max\".`;\n}\nexport const MORE_THAN_ONE_SORT = 'Domains that should be unioned has conflicting sort properties. Sort will be set to true.';\nexport const FACETED_INDEPENDENT_DIFFERENT_SOURCES = 'Detected faceted independent scales that union domain of multiple fields from different data sources. We will use the first field. The result view size may be incorrect.';\nexport const FACETED_INDEPENDENT_SAME_FIELDS_DIFFERENT_SOURCES = 'Detected faceted independent scales that union domain of the same fields from different source. We will assume that this is the same field from a different fork of the same data source. However, if this is not the case, the result view size may be incorrect.';\nexport const FACETED_INDEPENDENT_SAME_SOURCE = 'Detected faceted independent scales that union domain of multiple fields from the same data source. We will use the first field. The result view size may be incorrect.';\n// AXIS\nexport const INVALID_CHANNEL_FOR_AXIS = 'Invalid channel for axis.';\n// STACK\nexport function cannotStackRangedMark(channel) {\n    return `Cannot stack \"${channel}\" if there is already \"${channel}2\".`;\n}\nexport function cannotStackNonLinearScale(scaleType) {\n    return `Cannot stack non-linear scale (${scaleType}).`;\n}\nexport function stackNonSummativeAggregate(aggregate) {\n    return `Stacking is applied even though the aggregate function is non-summative (\"${aggregate}\").`;\n}\n// TIMEUNIT\nexport function invalidTimeUnit(unitName, value) {\n    return `Invalid ${unitName}: ${stringify(value)}.`;\n}\nexport function droppedDay(d) {\n    return `Dropping day from datetime ${stringify(d)} as day cannot be combined with other units.`;\n}\nexport function errorBarCenterAndExtentAreNotNeeded(center, extent) {\n    return `${extent ? 'extent ' : ''}${extent && center ? 'and ' : ''}${center ? 'center ' : ''}${extent && center ? 'are ' : 'is '}not needed when data are aggregated.`;\n}\nexport function errorBarCenterIsUsedWithWrongExtent(center, extent, mark) {\n    return `${center} is not usually used with ${extent} for ${mark}.`;\n}\nexport function errorBarContinuousAxisHasCustomizedAggregate(aggregate, compositeMark) {\n    return `Continuous axis should not have customized aggregation function ${aggregate}; ${compositeMark} already agregates the axis.`;\n}\nexport function errorBand1DNotSupport(property) {\n    return `1D error band does not support ${property}.`;\n}\n// CHANNEL\nexport function channelRequiredForBinned(channel) {\n    return `Channel ${channel} is required for \"binned\" bin.`;\n}\nexport function channelShouldNotBeUsedForBinned(channel) {\n    return `Channel ${channel} should not be used with \"binned\" bin.`;\n}\nexport function domainRequiredForThresholdScale(channel) {\n    return `Domain for ${channel} is required for threshold scale.`;\n}\n//# sourceMappingURL=message.js.map","export function isLogicalOr(op) {\n    return !!op.or;\n}\nexport function isLogicalAnd(op) {\n    return !!op.and;\n}\nexport function isLogicalNot(op) {\n    return !!op.not;\n}\nexport function forEachLeaf(op, fn) {\n    if (isLogicalNot(op)) {\n        forEachLeaf(op.not, fn);\n    }\n    else if (isLogicalAnd(op)) {\n        for (const subop of op.and) {\n            forEachLeaf(subop, fn);\n        }\n    }\n    else if (isLogicalOr(op)) {\n        for (const subop of op.or) {\n            forEachLeaf(subop, fn);\n        }\n    }\n    else {\n        fn(op);\n    }\n}\nexport function normalizeLogicalComposition(op, normalizer) {\n    if (isLogicalNot(op)) {\n        return { not: normalizeLogicalComposition(op.not, normalizer) };\n    }\n    else if (isLogicalAnd(op)) {\n        return { and: op.and.map(o => normalizeLogicalComposition(o, normalizer)) };\n    }\n    else if (isLogicalOr(op)) {\n        return { or: op.or.map(o => normalizeLogicalComposition(o, normalizer)) };\n    }\n    else {\n        return normalizer(op);\n    }\n}\n//# sourceMappingURL=logical.js.map","import { keys } from './util';\n/**\n * All types of primitive marks.\n */\nexport const Mark = {\n    arc: 'arc',\n    area: 'area',\n    bar: 'bar',\n    image: 'image',\n    line: 'line',\n    point: 'point',\n    rect: 'rect',\n    rule: 'rule',\n    text: 'text',\n    tick: 'tick',\n    trail: 'trail',\n    circle: 'circle',\n    square: 'square',\n    geoshape: 'geoshape'\n};\nexport const ARC = Mark.arc;\nexport const AREA = Mark.area;\nexport const BAR = Mark.bar;\nexport const IMAGE = Mark.image;\nexport const LINE = Mark.line;\nexport const POINT = Mark.point;\nexport const RECT = Mark.rect;\nexport const RULE = Mark.rule;\nexport const TEXT = Mark.text;\nexport const TICK = Mark.tick;\nexport const TRAIL = Mark.trail;\nexport const CIRCLE = Mark.circle;\nexport const SQUARE = Mark.square;\nexport const GEOSHAPE = Mark.geoshape;\nexport function isMark(m) {\n    return m in Mark;\n}\nexport function isPathMark(m) {\n    return ['line', 'area', 'trail'].includes(m);\n}\nexport function isRectBasedMark(m) {\n    return ['rect', 'bar', 'image', 'arc' /* arc is rect/interval in polar coordinate */].includes(m);\n}\nexport const PRIMITIVE_MARKS = new Set(keys(Mark));\nexport function isMarkDef(mark) {\n    return mark['type'];\n}\nexport function isPrimitiveMark(mark) {\n    const markType = isMarkDef(mark) ? mark.type : mark;\n    return PRIMITIVE_MARKS.has(markType);\n}\nexport const STROKE_CONFIG = [\n    'stroke',\n    'strokeWidth',\n    'strokeDash',\n    'strokeDashOffset',\n    'strokeOpacity',\n    'strokeJoin',\n    'strokeMiterLimit'\n];\nexport const FILL_CONFIG = ['fill', 'fillOpacity'];\nexport const FILL_STROKE_CONFIG = [...STROKE_CONFIG, ...FILL_CONFIG];\nconst VL_ONLY_MARK_CONFIG_INDEX = {\n    color: 1,\n    filled: 1,\n    invalid: 1,\n    order: 1,\n    radius2: 1,\n    theta2: 1,\n    timeUnitBandSize: 1,\n    timeUnitBandPosition: 1\n};\nexport const VL_ONLY_MARK_CONFIG_PROPERTIES = keys(VL_ONLY_MARK_CONFIG_INDEX);\nexport const VL_ONLY_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX = {\n    area: ['line', 'point'],\n    bar: ['binSpacing', 'continuousBandSize', 'discreteBandSize'],\n    rect: ['binSpacing', 'continuousBandSize', 'discreteBandSize'],\n    line: ['point'],\n    tick: ['bandSize', 'thickness']\n};\nexport const defaultMarkConfig = {\n    color: '#4c78a8',\n    invalid: 'filter',\n    timeUnitBandSize: 1\n};\nconst MARK_CONFIG_INDEX = {\n    mark: 1,\n    arc: 1,\n    area: 1,\n    bar: 1,\n    circle: 1,\n    image: 1,\n    line: 1,\n    point: 1,\n    rect: 1,\n    rule: 1,\n    square: 1,\n    text: 1,\n    tick: 1,\n    trail: 1,\n    geoshape: 1\n};\nexport const MARK_CONFIGS = keys(MARK_CONFIG_INDEX);\nexport function isRelativeBandSize(o) {\n    return o && o['band'] != undefined;\n}\nexport const BAR_CORNER_RADIUS_INDEX = {\n    horizontal: ['cornerRadiusTopRight', 'cornerRadiusBottomRight'],\n    vertical: ['cornerRadiusTopLeft', 'cornerRadiusTopRight']\n};\nconst DEFAULT_RECT_BAND_SIZE = 5;\nexport const defaultBarConfig = {\n    binSpacing: 1,\n    continuousBandSize: DEFAULT_RECT_BAND_SIZE,\n    timeUnitBandPosition: 0.5\n};\nexport const defaultRectConfig = {\n    binSpacing: 0,\n    continuousBandSize: DEFAULT_RECT_BAND_SIZE,\n    timeUnitBandPosition: 0.5\n};\nexport const defaultTickConfig = {\n    thickness: 1\n};\nexport function getMarkType(m) {\n    return isMarkDef(m) ? m.type : m;\n}\n//# sourceMappingURL=mark.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { isArray } from 'vega-util';\nimport { COLUMN, FACET, ROW } from '../channel';\nimport { hasConditionalFieldOrDatumDef, isFieldOrDatumDef, isValueDef } from '../channeldef';\nimport { boxPlotNormalizer } from '../compositemark/boxplot';\nimport { errorBandNormalizer } from '../compositemark/errorband';\nimport { errorBarNormalizer } from '../compositemark/errorbar';\nimport { channelHasField } from '../encoding';\nimport * as log from '../log';\nimport { isFacetMapping } from '../spec/facet';\nimport { SpecMapper } from '../spec/map';\nimport { isLayerRepeatSpec } from '../spec/repeat';\nimport { isUnitSpec } from '../spec/unit';\nimport { isEmpty, keys, omit, varName } from '../util';\nimport { isSignalRef } from '../vega.schema';\nimport { PathOverlayNormalizer } from './pathoverlay';\nimport { replaceRepeaterInEncoding, replaceRepeaterInFacet } from './repeater';\nimport { RuleForRangedLineNormalizer } from './ruleforrangedline';\nexport class CoreNormalizer extends SpecMapper {\n    constructor() {\n        super(...arguments);\n        this.nonFacetUnitNormalizers = [\n            boxPlotNormalizer,\n            errorBarNormalizer,\n            errorBandNormalizer,\n            new PathOverlayNormalizer(),\n            new RuleForRangedLineNormalizer()\n        ];\n    }\n    map(spec, params) {\n        // Special handling for a faceted unit spec as it can return a facet spec, not just a layer or unit spec like a normal unit spec.\n        if (isUnitSpec(spec)) {\n            const hasRow = channelHasField(spec.encoding, ROW);\n            const hasColumn = channelHasField(spec.encoding, COLUMN);\n            const hasFacet = channelHasField(spec.encoding, FACET);\n            if (hasRow || hasColumn || hasFacet) {\n                return this.mapFacetedUnit(spec, params);\n            }\n        }\n        return super.map(spec, params);\n    }\n    // This is for normalizing non-facet unit\n    mapUnit(spec, params) {\n        const { parentEncoding, parentProjection } = params;\n        const encoding = replaceRepeaterInEncoding(spec.encoding, params.repeater);\n        const specWithReplacedEncoding = Object.assign(Object.assign({}, spec), (encoding ? { encoding } : {}));\n        if (parentEncoding || parentProjection) {\n            return this.mapUnitWithParentEncodingOrProjection(specWithReplacedEncoding, params);\n        }\n        const normalizeLayerOrUnit = this.mapLayerOrUnit.bind(this);\n        for (const unitNormalizer of this.nonFacetUnitNormalizers) {\n            if (unitNormalizer.hasMatchingType(specWithReplacedEncoding, params.config)) {\n                return unitNormalizer.run(specWithReplacedEncoding, params, normalizeLayerOrUnit);\n            }\n        }\n        return specWithReplacedEncoding;\n    }\n    mapRepeat(spec, params) {\n        if (isLayerRepeatSpec(spec)) {\n            return this.mapLayerRepeat(spec, params);\n        }\n        else {\n            return this.mapNonLayerRepeat(spec, params);\n        }\n    }\n    mapLayerRepeat(spec, params) {\n        const { repeat, spec: childSpec } = spec, rest = __rest(spec, [\"repeat\", \"spec\"]);\n        const { row, column, layer } = repeat;\n        const { repeater = {}, repeaterPrefix = '' } = params;\n        if (row || column) {\n            return this.mapRepeat(Object.assign(Object.assign({}, spec), { repeat: Object.assign(Object.assign({}, (row ? { row } : {})), (column ? { column } : {})), spec: {\n                    repeat: { layer },\n                    spec: childSpec\n                } }), params);\n        }\n        else {\n            return Object.assign(Object.assign({}, rest), { layer: layer.map(layerValue => {\n                    const childRepeater = Object.assign(Object.assign({}, repeater), { layer: layerValue });\n                    const childName = `${(childSpec.name || '') + repeaterPrefix}child__layer_${varName(layerValue)}`;\n                    const child = this.mapLayerOrUnit(childSpec, Object.assign(Object.assign({}, params), { repeater: childRepeater, repeaterPrefix: childName }));\n                    child.name = childName;\n                    return child;\n                }) });\n        }\n    }\n    mapNonLayerRepeat(spec, params) {\n        var _a;\n        const { repeat, spec: childSpec, data } = spec, remainingProperties = __rest(spec, [\"repeat\", \"spec\", \"data\"]);\n        if (!isArray(repeat) && spec.columns) {\n            // is repeat with row/column\n            spec = omit(spec, ['columns']);\n            log.warn(log.message.columnsNotSupportByRowCol('repeat'));\n        }\n        const concat = [];\n        const { repeater = {}, repeaterPrefix = '' } = params;\n        const row = (!isArray(repeat) && repeat.row) || [repeater ? repeater.row : null];\n        const column = (!isArray(repeat) && repeat.column) || [repeater ? repeater.column : null];\n        const repeatValues = (isArray(repeat) && repeat) || [repeater ? repeater.repeat : null];\n        // cross product\n        for (const repeatValue of repeatValues) {\n            for (const rowValue of row) {\n                for (const columnValue of column) {\n                    const childRepeater = {\n                        repeat: repeatValue,\n                        row: rowValue,\n                        column: columnValue,\n                        layer: repeater.layer\n                    };\n                    const childName = (childSpec.name || '') +\n                        repeaterPrefix +\n                        'child__' +\n                        (isArray(repeat)\n                            ? `${varName(repeatValue)}`\n                            : (repeat.row ? `row_${varName(rowValue)}` : '') +\n                                (repeat.column ? `column_${varName(columnValue)}` : ''));\n                    const child = this.map(childSpec, Object.assign(Object.assign({}, params), { repeater: childRepeater, repeaterPrefix: childName }));\n                    child.name = childName;\n                    // we move data up\n                    concat.push(omit(child, ['data']));\n                }\n            }\n        }\n        const columns = isArray(repeat) ? spec.columns : repeat.column ? repeat.column.length : 1;\n        return Object.assign(Object.assign({ data: (_a = childSpec.data) !== null && _a !== void 0 ? _a : data, align: 'all' }, remainingProperties), { columns,\n            concat });\n    }\n    mapFacet(spec, params) {\n        const { facet } = spec;\n        if (isFacetMapping(facet) && spec.columns) {\n            // is facet with row/column\n            spec = omit(spec, ['columns']);\n            log.warn(log.message.columnsNotSupportByRowCol('facet'));\n        }\n        return super.mapFacet(spec, params);\n    }\n    mapUnitWithParentEncodingOrProjection(spec, params) {\n        const { encoding, projection } = spec;\n        const { parentEncoding, parentProjection, config } = params;\n        const mergedProjection = mergeProjection({ parentProjection, projection });\n        const mergedEncoding = mergeEncoding({\n            parentEncoding,\n            encoding: replaceRepeaterInEncoding(encoding, params.repeater)\n        });\n        return this.mapUnit(Object.assign(Object.assign(Object.assign({}, spec), (mergedProjection ? { projection: mergedProjection } : {})), (mergedEncoding ? { encoding: mergedEncoding } : {})), { config });\n    }\n    mapFacetedUnit(spec, normParams) {\n        // New encoding in the inside spec should not contain row / column\n        // as row/column should be moved to facet\n        const _a = spec.encoding, { row, column, facet } = _a, encoding = __rest(_a, [\"row\", \"column\", \"facet\"]);\n        // Mark and encoding should be moved into the inner spec\n        const { mark, width, projection, height, view, params, encoding: _ } = spec, outerSpec = __rest(spec, [\"mark\", \"width\", \"projection\", \"height\", \"view\", \"params\", \"encoding\"]);\n        const { facetMapping, layout } = this.getFacetMappingAndLayout({ row, column, facet }, normParams);\n        const newEncoding = replaceRepeaterInEncoding(encoding, normParams.repeater);\n        return this.mapFacet(Object.assign(Object.assign(Object.assign({}, outerSpec), layout), { \n            // row / column has higher precedence than facet\n            facet: facetMapping, spec: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, (width ? { width } : {})), (height ? { height } : {})), (view ? { view } : {})), (projection ? { projection } : {})), { mark, encoding: newEncoding }), (params ? { params } : {})) }), normParams);\n    }\n    getFacetMappingAndLayout(facets, params) {\n        var _a;\n        const { row, column, facet } = facets;\n        if (row || column) {\n            if (facet) {\n                log.warn(log.message.facetChannelDropped([...(row ? [ROW] : []), ...(column ? [COLUMN] : [])]));\n            }\n            const facetMapping = {};\n            const layout = {};\n            for (const channel of [ROW, COLUMN]) {\n                const def = facets[channel];\n                if (def) {\n                    const { align, center, spacing, columns } = def, defWithoutLayout = __rest(def, [\"align\", \"center\", \"spacing\", \"columns\"]);\n                    facetMapping[channel] = defWithoutLayout;\n                    for (const prop of ['align', 'center', 'spacing']) {\n                        if (def[prop] !== undefined) {\n                            (_a = layout[prop]) !== null && _a !== void 0 ? _a : (layout[prop] = {});\n                            layout[prop][channel] = def[prop];\n                        }\n                    }\n                }\n            }\n            return { facetMapping, layout };\n        }\n        else {\n            const { align, center, spacing, columns } = facet, facetMapping = __rest(facet, [\"align\", \"center\", \"spacing\", \"columns\"]);\n            return {\n                facetMapping: replaceRepeaterInFacet(facetMapping, params.repeater),\n                layout: Object.assign(Object.assign(Object.assign(Object.assign({}, (align ? { align } : {})), (center ? { center } : {})), (spacing ? { spacing } : {})), (columns ? { columns } : {}))\n            };\n        }\n    }\n    mapLayer(spec, _a) {\n        // Special handling for extended layer spec\n        var { parentEncoding, parentProjection } = _a, otherParams = __rest(_a, [\"parentEncoding\", \"parentProjection\"]);\n        const { encoding, projection } = spec, rest = __rest(spec, [\"encoding\", \"projection\"]);\n        const params = Object.assign(Object.assign({}, otherParams), { parentEncoding: mergeEncoding({ parentEncoding, encoding, layer: true }), parentProjection: mergeProjection({ parentProjection, projection }) });\n        return super.mapLayer(rest, params);\n    }\n}\nfunction mergeEncoding({ parentEncoding, encoding = {}, layer }) {\n    let merged = {};\n    if (parentEncoding) {\n        const channels = new Set([...keys(parentEncoding), ...keys(encoding)]);\n        for (const channel of channels) {\n            const channelDef = encoding[channel];\n            const parentChannelDef = parentEncoding[channel];\n            if (isFieldOrDatumDef(channelDef)) {\n                // Field/Datum Def can inherit properties from its parent\n                // Note that parentChannelDef doesn't have to be a field/datum def if the channelDef is already one.\n                const mergedChannelDef = Object.assign(Object.assign({}, parentChannelDef), channelDef);\n                merged[channel] = mergedChannelDef;\n            }\n            else if (hasConditionalFieldOrDatumDef(channelDef)) {\n                merged[channel] = Object.assign(Object.assign({}, channelDef), { condition: Object.assign(Object.assign({}, parentChannelDef), channelDef.condition) });\n            }\n            else if (channelDef || channelDef === null) {\n                merged[channel] = channelDef;\n            }\n            else if (layer ||\n                isValueDef(parentChannelDef) ||\n                isSignalRef(parentChannelDef) ||\n                isFieldOrDatumDef(parentChannelDef) ||\n                isArray(parentChannelDef)) {\n                merged[channel] = parentChannelDef;\n            }\n        }\n    }\n    else {\n        merged = encoding;\n    }\n    return !merged || isEmpty(merged) ? undefined : merged;\n}\nfunction mergeProjection(opt) {\n    const { parentProjection, projection } = opt;\n    if (parentProjection && projection) {\n        log.warn(log.message.projectionOverridden({ parentProjection, projection }));\n    }\n    return projection !== null && projection !== void 0 ? projection : parentProjection;\n}\n//# sourceMappingURL=core.js.map","import { isString } from 'vega-util';\nimport { initConfig } from '../config';\nimport * as log from '../log';\nimport { isLayerSpec, isUnitSpec } from '../spec';\nimport { deepEqual } from '../util';\nimport { CoreNormalizer } from './core';\nimport { SelectionCompatibilityNormalizer } from './selectioncompat';\nimport { TopLevelSelectionsNormalizer } from './toplevelselection';\nexport function normalize(spec, config) {\n    if (config === undefined) {\n        config = initConfig(spec.config);\n    }\n    const normalizedSpec = normalizeGenericSpec(spec, config);\n    const { width, height } = spec;\n    const autosize = normalizeAutoSize(normalizedSpec, { width, height, autosize: spec.autosize }, config);\n    return Object.assign(Object.assign({}, normalizedSpec), (autosize ? { autosize } : {}));\n}\nconst coreNormalizer = new CoreNormalizer();\nconst selectionCompatNormalizer = new SelectionCompatibilityNormalizer();\nconst topLevelSelectionNormalizer = new TopLevelSelectionsNormalizer();\n/**\n * Decompose extended unit specs into composition of pure unit specs.\n * And push top-level selection definitions down to unit specs.\n */\nfunction normalizeGenericSpec(spec, config = {}) {\n    const normParams = { config };\n    return topLevelSelectionNormalizer.map(coreNormalizer.map(selectionCompatNormalizer.map(spec, normParams), normParams), normParams);\n}\nfunction _normalizeAutoSize(autosize) {\n    return isString(autosize) ? { type: autosize } : autosize !== null && autosize !== void 0 ? autosize : {};\n}\n/**\n * Normalize autosize and deal with width or height == \"container\".\n */\nexport function normalizeAutoSize(spec, sizeInfo, config) {\n    let { width, height } = sizeInfo;\n    const isFitCompatible = isUnitSpec(spec) || isLayerSpec(spec);\n    const autosizeDefault = {};\n    if (!isFitCompatible) {\n        // If spec is not compatible with autosize == \"fit\", discard width/height == container\n        if (width == 'container') {\n            log.warn(log.message.containerSizeNonSingle('width'));\n            width = undefined;\n        }\n        if (height == 'container') {\n            log.warn(log.message.containerSizeNonSingle('height'));\n            height = undefined;\n        }\n    }\n    else {\n        // Default autosize parameters to fit when width/height is \"container\"\n        if (width == 'container' && height == 'container') {\n            autosizeDefault.type = 'fit';\n            autosizeDefault.contains = 'padding';\n        }\n        else if (width == 'container') {\n            autosizeDefault.type = 'fit-x';\n            autosizeDefault.contains = 'padding';\n        }\n        else if (height == 'container') {\n            autosizeDefault.type = 'fit-y';\n            autosizeDefault.contains = 'padding';\n        }\n    }\n    const autosize = Object.assign(Object.assign(Object.assign({ type: 'pad' }, autosizeDefault), (config ? _normalizeAutoSize(config.autosize) : {})), _normalizeAutoSize(spec.autosize));\n    if (autosize.type === 'fit' && !isFitCompatible) {\n        log.warn(log.message.FIT_NON_SINGLE);\n        autosize.type = 'pad';\n    }\n    if (width == 'container' && !(autosize.type == 'fit' || autosize.type == 'fit-x')) {\n        log.warn(log.message.containerSizeNotCompatibleWithAutosize('width'));\n    }\n    if (height == 'container' && !(autosize.type == 'fit' || autosize.type == 'fit-y')) {\n        log.warn(log.message.containerSizeNotCompatibleWithAutosize('height'));\n    }\n    // Delete autosize property if it's Vega's default\n    if (deepEqual(autosize, { type: 'pad' })) {\n        return undefined;\n    }\n    return autosize;\n}\n//# sourceMappingURL=index.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { isObject } from 'vega-util';\nimport { normalizeEncoding } from '../encoding';\nimport { isMarkDef } from '../mark';\nimport { isUnitSpec } from '../spec/unit';\nimport { stack } from '../stack';\nimport { keys, omit, pick } from '../util';\nfunction dropLineAndPoint(markDef) {\n    const { point: _point, line: _line } = markDef, mark = __rest(markDef, [\"point\", \"line\"]);\n    return keys(mark).length > 1 ? mark : mark.type;\n}\nfunction dropLineAndPointFromConfig(config) {\n    for (const mark of ['line', 'area', 'rule', 'trail']) {\n        if (config[mark]) {\n            config = Object.assign(Object.assign({}, config), { \n                // TODO: remove as any\n                [mark]: omit(config[mark], ['point', 'line']) });\n        }\n    }\n    return config;\n}\nfunction getPointOverlay(markDef, markConfig = {}, encoding) {\n    if (markDef.point === 'transparent') {\n        return { opacity: 0 };\n    }\n    else if (markDef.point) {\n        // truthy : true or object\n        return isObject(markDef.point) ? markDef.point : {};\n    }\n    else if (markDef.point !== undefined) {\n        // false or null\n        return null;\n    }\n    else {\n        // undefined (not disabled)\n        if (markConfig.point || encoding.shape) {\n            // enable point overlay if config[mark].point is truthy or if encoding.shape is provided\n            return isObject(markConfig.point) ? markConfig.point : {};\n        }\n        // markDef.point is defined as falsy\n        return undefined;\n    }\n}\nfunction getLineOverlay(markDef, markConfig = {}) {\n    if (markDef.line) {\n        // true or object\n        return markDef.line === true ? {} : markDef.line;\n    }\n    else if (markDef.line !== undefined) {\n        // false or null\n        return null;\n    }\n    else {\n        // undefined (not disabled)\n        if (markConfig.line) {\n            // enable line overlay if config[mark].line is truthy\n            return markConfig.line === true ? {} : markConfig.line;\n        }\n        // markDef.point is defined as falsy\n        return undefined;\n    }\n}\nexport class PathOverlayNormalizer {\n    constructor() {\n        this.name = 'path-overlay';\n    }\n    hasMatchingType(spec, config) {\n        if (isUnitSpec(spec)) {\n            const { mark, encoding } = spec;\n            const markDef = isMarkDef(mark) ? mark : { type: mark };\n            switch (markDef.type) {\n                case 'line':\n                case 'rule':\n                case 'trail':\n                    return !!getPointOverlay(markDef, config[markDef.type], encoding);\n                case 'area':\n                    return (\n                    // false / null are also included as we want to remove the properties\n                    !!getPointOverlay(markDef, config[markDef.type], encoding) ||\n                        !!getLineOverlay(markDef, config[markDef.type]));\n            }\n        }\n        return false;\n    }\n    run(spec, normParams, normalize) {\n        const { config } = normParams;\n        const { params, projection, mark, encoding: e } = spec, outerSpec = __rest(spec, [\"params\", \"projection\", \"mark\", \"encoding\"]);\n        // Need to call normalizeEncoding because we need the inferred types to correctly determine stack\n        const encoding = normalizeEncoding(e, config);\n        const markDef = isMarkDef(mark) ? mark : { type: mark };\n        const pointOverlay = getPointOverlay(markDef, config[markDef.type], encoding);\n        const lineOverlay = markDef.type === 'area' && getLineOverlay(markDef, config[markDef.type]);\n        const layer = [\n            Object.assign(Object.assign({}, (params ? { params } : {})), { mark: dropLineAndPoint(Object.assign(Object.assign({}, (markDef.type === 'area' && markDef.opacity === undefined && markDef.fillOpacity === undefined\n                    ? { opacity: 0.7 }\n                    : {})), markDef)), \n                // drop shape from encoding as this might be used to trigger point overlay\n                encoding: omit(encoding, ['shape']) })\n        ];\n        // FIXME: determine rules for applying selections.\n        // Need to copy stack config to overlayed layer\n        const stackProps = stack(markDef, encoding);\n        let overlayEncoding = encoding;\n        if (stackProps) {\n            const { fieldChannel: stackFieldChannel, offset } = stackProps;\n            overlayEncoding = Object.assign(Object.assign({}, encoding), { [stackFieldChannel]: Object.assign(Object.assign({}, encoding[stackFieldChannel]), (offset ? { stack: offset } : {})) });\n        }\n        // overlay line layer should be on the edge of area but passing y2/x2 makes\n        // it as \"rule\" mark so that it draws unwanted vertical/horizontal lines.\n        // point overlay also should not have y2/x2 as it does not support.\n        overlayEncoding = omit(overlayEncoding, ['y2', 'x2']);\n        if (lineOverlay) {\n            layer.push(Object.assign(Object.assign({}, (projection ? { projection } : {})), { mark: Object.assign(Object.assign({ type: 'line' }, pick(markDef, ['clip', 'interpolate', 'tension', 'tooltip'])), lineOverlay), encoding: overlayEncoding }));\n        }\n        if (pointOverlay) {\n            layer.push(Object.assign(Object.assign({}, (projection ? { projection } : {})), { mark: Object.assign(Object.assign({ type: 'point', opacity: 1, filled: true }, pick(markDef, ['clip', 'tooltip'])), pointOverlay), encoding: overlayEncoding }));\n        }\n        return normalize(Object.assign(Object.assign({}, outerSpec), { layer }), Object.assign(Object.assign({}, normParams), { config: dropLineAndPointFromConfig(config) }));\n    }\n}\n//# sourceMappingURL=pathoverlay.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { hasOwnProperty, isArray } from 'vega-util';\nimport { hasConditionalFieldOrDatumDef, isConditionalDef, isFieldDef, isFieldOrDatumDef, isRepeatRef, isSortableFieldDef } from '../channeldef';\nimport * as log from '../log';\nimport { isSortField } from '../sort';\nimport { isFacetMapping } from '../spec/facet';\nexport function replaceRepeaterInFacet(facet, repeater) {\n    if (!repeater) {\n        return facet;\n    }\n    if (isFacetMapping(facet)) {\n        return replaceRepeaterInMapping(facet, repeater);\n    }\n    return replaceRepeaterInFieldDef(facet, repeater);\n}\nexport function replaceRepeaterInEncoding(encoding, repeater) {\n    if (!repeater) {\n        return encoding;\n    }\n    return replaceRepeaterInMapping(encoding, repeater);\n}\n/**\n * Replaces repeated value and returns if the repeated value is valid.\n */\nfunction replaceRepeatInProp(prop, o, repeater) {\n    const val = o[prop];\n    if (isRepeatRef(val)) {\n        if (val.repeat in repeater) {\n            return Object.assign(Object.assign({}, o), { [prop]: repeater[val.repeat] });\n        }\n        else {\n            log.warn(log.message.noSuchRepeatedValue(val.repeat));\n            return undefined;\n        }\n    }\n    return o;\n}\n/**\n * Replace repeater values in a field def with the concrete field name.\n */\nfunction replaceRepeaterInFieldDef(fieldDef, repeater) {\n    fieldDef = replaceRepeatInProp('field', fieldDef, repeater);\n    if (fieldDef === undefined) {\n        // the field def should be ignored\n        return undefined;\n    }\n    else if (fieldDef === null) {\n        return null;\n    }\n    if (isSortableFieldDef(fieldDef) && isSortField(fieldDef.sort)) {\n        const sort = replaceRepeatInProp('field', fieldDef.sort, repeater);\n        fieldDef = Object.assign(Object.assign({}, fieldDef), (sort ? { sort } : {}));\n    }\n    return fieldDef;\n}\nfunction replaceRepeaterInFieldOrDatumDef(def, repeater) {\n    if (isFieldDef(def)) {\n        return replaceRepeaterInFieldDef(def, repeater);\n    }\n    else {\n        const datumDef = replaceRepeatInProp('datum', def, repeater);\n        if (datumDef !== def && !datumDef.type) {\n            datumDef.type = 'nominal';\n        }\n        return datumDef;\n    }\n}\nfunction replaceRepeaterInChannelDef(channelDef, repeater) {\n    if (isFieldOrDatumDef(channelDef)) {\n        const fd = replaceRepeaterInFieldOrDatumDef(channelDef, repeater);\n        if (fd) {\n            return fd;\n        }\n        else if (isConditionalDef(channelDef)) {\n            return { condition: channelDef.condition };\n        }\n    }\n    else {\n        if (hasConditionalFieldOrDatumDef(channelDef)) {\n            const fd = replaceRepeaterInFieldOrDatumDef(channelDef.condition, repeater);\n            if (fd) {\n                return Object.assign(Object.assign({}, channelDef), { condition: fd });\n            }\n            else {\n                const { condition } = channelDef, channelDefWithoutCondition = __rest(channelDef, [\"condition\"]);\n                return channelDefWithoutCondition;\n            }\n        }\n        return channelDef;\n    }\n    return undefined;\n}\nfunction replaceRepeaterInMapping(mapping, repeater) {\n    const out = {};\n    for (const channel in mapping) {\n        if (hasOwnProperty(mapping, channel)) {\n            const channelDef = mapping[channel];\n            if (isArray(channelDef)) {\n                // array cannot have condition\n                out[channel] = channelDef // somehow we need to cast it here\n                    .map(cd => replaceRepeaterInChannelDef(cd, repeater))\n                    .filter(cd => cd);\n            }\n            else {\n                const cd = replaceRepeaterInChannelDef(channelDef, repeater);\n                if (cd !== undefined) {\n                    out[channel] = cd;\n                }\n            }\n        }\n    }\n    return out;\n}\n//# sourceMappingURL=repeater.js.map","import { isObject } from 'vega-util';\nimport { isBinned } from '../bin';\nimport { getMainRangeChannel, SECONDARY_RANGE_CHANNEL } from '../channel';\nimport { isDatumDef, isFieldDef } from '../channeldef';\nimport * as log from '../log';\nimport { isMarkDef } from '../mark';\nimport { isUnitSpec } from '../spec/unit';\nexport class RuleForRangedLineNormalizer {\n    constructor() {\n        this.name = 'RuleForRangedLine';\n    }\n    hasMatchingType(spec) {\n        if (isUnitSpec(spec)) {\n            const { encoding, mark } = spec;\n            if (mark === 'line' || (isMarkDef(mark) && mark.type === 'line')) {\n                for (const channel of SECONDARY_RANGE_CHANNEL) {\n                    const mainChannel = getMainRangeChannel(channel);\n                    const mainChannelDef = encoding[mainChannel];\n                    if (encoding[channel]) {\n                        if ((isFieldDef(mainChannelDef) && !isBinned(mainChannelDef.bin)) || isDatumDef(mainChannelDef)) {\n                            return true;\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    }\n    run(spec, params, normalize) {\n        const { encoding, mark } = spec;\n        log.warn(log.message.lineWithRange(!!encoding.x2, !!encoding.y2));\n        return normalize(Object.assign(Object.assign({}, spec), { mark: isObject(mark) ? Object.assign(Object.assign({}, mark), { type: 'rule' }) : 'rule' }), params);\n    }\n}\n//# sourceMappingURL=ruleforrangedline.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { isArray } from 'vega';\nimport { isBinParams } from '../bin';\nimport { isConditionalDef, isFieldDef, isScaleFieldDef } from '../channeldef';\nimport { normalizeLogicalComposition } from '../logical';\nimport { SpecMapper } from '../spec/map';\nimport { isBin, isFilter, isLookup } from '../transform';\nimport { duplicate, entries, vals } from '../util';\nexport class SelectionCompatibilityNormalizer extends SpecMapper {\n    map(spec, normParams) {\n        var _a, _b;\n        (_a = normParams.emptySelections) !== null && _a !== void 0 ? _a : (normParams.emptySelections = {});\n        (_b = normParams.selectionPredicates) !== null && _b !== void 0 ? _b : (normParams.selectionPredicates = {});\n        spec = normalizeTransforms(spec, normParams);\n        return super.map(spec, normParams);\n    }\n    mapLayerOrUnit(spec, normParams) {\n        spec = normalizeTransforms(spec, normParams);\n        if (spec.encoding) {\n            const encoding = {};\n            for (const [channel, enc] of entries(spec.encoding)) {\n                encoding[channel] = normalizeChannelDef(enc, normParams);\n            }\n            spec = Object.assign(Object.assign({}, spec), { encoding });\n        }\n        return super.mapLayerOrUnit(spec, normParams);\n    }\n    mapUnit(spec, normParams) {\n        const _a = spec, { selection } = _a, rest = __rest(_a, [\"selection\"]);\n        if (selection) {\n            return Object.assign(Object.assign({}, rest), { params: entries(selection).map(([name, selDef]) => {\n                    var _a;\n                    const _b = selDef, { init: value, bind, empty } = _b, select = __rest(_b, [\"init\", \"bind\", \"empty\"]);\n                    if (select.type === 'single') {\n                        select.type = 'point';\n                        select.toggle = false;\n                    }\n                    else if (select.type === 'multi') {\n                        select.type = 'point';\n                    }\n                    // Propagate emptiness forwards and backwards\n                    normParams.emptySelections[name] = empty !== 'none';\n                    for (const pred of vals((_a = normParams.selectionPredicates[name]) !== null && _a !== void 0 ? _a : {})) {\n                        pred.empty = empty !== 'none';\n                    }\n                    return { name, value, select, bind };\n                }) });\n        }\n        return spec;\n    }\n}\nfunction normalizeTransforms(spec, normParams) {\n    const { transform: tx } = spec, rest = __rest(spec, [\"transform\"]);\n    if (tx) {\n        const transform = tx.map((t) => {\n            if (isFilter(t)) {\n                return { filter: normalizePredicate(t, normParams) };\n            }\n            else if (isBin(t) && isBinParams(t.bin)) {\n                return Object.assign(Object.assign({}, t), { bin: normalizeBinExtent(t.bin) });\n            }\n            else if (isLookup(t)) {\n                const _a = t.from, { selection: param } = _a, from = __rest(_a, [\"selection\"]);\n                return param\n                    ? Object.assign(Object.assign({}, t), { from: Object.assign({ param }, from) }) : t;\n            }\n            return t;\n        });\n        return Object.assign(Object.assign({}, rest), { transform });\n    }\n    return spec;\n}\nfunction normalizeChannelDef(obj, normParams) {\n    var _a, _b;\n    const enc = duplicate(obj);\n    if (isFieldDef(enc) && isBinParams(enc.bin)) {\n        enc.bin = normalizeBinExtent(enc.bin);\n    }\n    if (isScaleFieldDef(enc) && ((_b = (_a = enc.scale) === null || _a === void 0 ? void 0 : _a.domain) === null || _b === void 0 ? void 0 : _b.selection)) {\n        const _c = enc.scale.domain, { selection: param } = _c, domain = __rest(_c, [\"selection\"]);\n        enc.scale.domain = Object.assign(Object.assign({}, domain), (param ? { param } : {}));\n    }\n    if (isConditionalDef(enc)) {\n        if (isArray(enc.condition)) {\n            enc.condition = enc.condition.map((c) => {\n                const { selection, param, test } = c, cond = __rest(c, [\"selection\", \"param\", \"test\"]);\n                return param ? c : Object.assign(Object.assign({}, cond), { test: normalizePredicate(c, normParams) });\n            });\n        }\n        else {\n            const _d = normalizeChannelDef(enc.condition, normParams), { selection, param, test } = _d, cond = __rest(_d, [\"selection\", \"param\", \"test\"]);\n            enc.condition = param\n                ? enc.condition\n                : Object.assign(Object.assign({}, cond), { test: normalizePredicate(enc.condition, normParams) });\n        }\n    }\n    return enc;\n}\nfunction normalizeBinExtent(bin) {\n    const ext = bin.extent;\n    if (ext === null || ext === void 0 ? void 0 : ext.selection) {\n        const { selection: param } = ext, rest = __rest(ext, [\"selection\"]);\n        return Object.assign(Object.assign({}, bin), { extent: Object.assign(Object.assign({}, rest), { param }) });\n    }\n    return bin;\n}\nfunction normalizePredicate(op, normParams) {\n    // Normalize old compositions of selection names (e.g., selection: {and: [\"one\", \"two\"]})\n    const normalizeSelectionComposition = (o) => {\n        return normalizeLogicalComposition(o, param => {\n            var _a, _b;\n            var _c;\n            const empty = (_a = normParams.emptySelections[param]) !== null && _a !== void 0 ? _a : true;\n            const pred = { param, empty };\n            (_b = (_c = normParams.selectionPredicates)[param]) !== null && _b !== void 0 ? _b : (_c[param] = []);\n            normParams.selectionPredicates[param].push(pred);\n            return pred;\n        });\n    };\n    return op.selection\n        ? normalizeSelectionComposition(op.selection)\n        : normalizeLogicalComposition(op.test || op.filter, o => o.selection ? normalizeSelectionComposition(o.selection) : o);\n}\n//# sourceMappingURL=selectioncompat.js.map","import { isArray, isString } from 'vega';\nimport { isSelectionParameter } from '../selection';\nimport { isUnitSpec } from '../spec';\nimport { SpecMapper } from '../spec/map';\nexport class TopLevelSelectionsNormalizer extends SpecMapper {\n    map(spec, normParams) {\n        var _a;\n        const selections = (_a = normParams.selections) !== null && _a !== void 0 ? _a : [];\n        if (spec.params && !isUnitSpec(spec)) {\n            const params = [];\n            for (const param of spec.params) {\n                if (isSelectionParameter(param)) {\n                    selections.push(param);\n                }\n                else {\n                    params.push(param);\n                }\n            }\n            spec.params = params;\n        }\n        normParams.selections = selections;\n        return super.map(spec, addSpecNameToParams(spec, normParams));\n    }\n    mapUnit(spec, normParams) {\n        var _a;\n        const selections = normParams.selections;\n        if (!selections || !selections.length)\n            return spec;\n        const path = ((_a = normParams.path) !== null && _a !== void 0 ? _a : []).concat(spec.name);\n        const params = [];\n        for (const selection of selections) {\n            // By default, apply selections to all unit views.\n            if (!selection.views || !selection.views.length) {\n                params.push(selection);\n            }\n            else {\n                for (const view of selection.views) {\n                    // view is either a specific unit name, or a partial path through the spec tree.\n                    if ((isString(view) && (view === spec.name || path.indexOf(view) >= 0)) ||\n                        (isArray(view) &&\n                            view.map(v => path.indexOf(v)).every((v, i, arr) => v !== -1 && (i === 0 || v > arr[i - 1])))) {\n                        params.push(selection);\n                    }\n                }\n            }\n        }\n        if (params.length)\n            spec.params = params;\n        return spec;\n    }\n}\nfor (const method of ['mapFacet', 'mapRepeat', 'mapHConcat', 'mapVConcat', 'mapLayer']) {\n    const proto = TopLevelSelectionsNormalizer.prototype[method];\n    TopLevelSelectionsNormalizer.prototype[method] = function (spec, params) {\n        return proto.call(this, spec, addSpecNameToParams(spec, params));\n    };\n}\nfunction addSpecNameToParams(spec, params) {\n    var _a;\n    return spec.name\n        ? Object.assign(Object.assign({}, params), { path: ((_a = params.path) !== null && _a !== void 0 ? _a : []).concat(spec.name) }) : params;\n}\n//# sourceMappingURL=toplevelselection.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { isSelectionParameter } from './selection';\nexport function assembleParameterSignals(params) {\n    const signals = [];\n    for (const param of params || []) {\n        // Selection parameters are handled separately via assembleSelectionTopLevelSignals\n        // and assembleSignals methods registered on the Model.\n        if (isSelectionParameter(param))\n            continue;\n        const { expr, bind } = param, rest = __rest(param, [\"expr\", \"bind\"]);\n        if (bind && expr) {\n            // Vega's InitSignal -- apply expr to \"init\"\n            const signal = Object.assign(Object.assign({}, rest), { bind, init: expr });\n            signals.push(signal);\n        }\n        else {\n            const signal = Object.assign(Object.assign(Object.assign({}, rest), (expr ? { update: expr } : {})), (bind ? { bind } : {}));\n            signals.push(signal);\n        }\n    }\n    return signals;\n}\n//# sourceMappingURL=parameter.js.map","import { isArray } from 'vega-util';\nimport { valueExpr, vgField } from './channeldef';\nimport { fieldExpr as timeUnitFieldExpr, normalizeTimeUnit } from './timeunit';\nimport { stringify } from './util';\nimport { isSignalRef } from './vega.schema';\nexport function isSelectionPredicate(predicate) {\n    return predicate === null || predicate === void 0 ? void 0 : predicate['param'];\n}\nexport function isFieldEqualPredicate(predicate) {\n    return !!(predicate === null || predicate === void 0 ? void 0 : predicate.field) && predicate.equal !== undefined;\n}\nexport function isFieldLTPredicate(predicate) {\n    return !!(predicate === null || predicate === void 0 ? void 0 : predicate.field) && predicate.lt !== undefined;\n}\nexport function isFieldLTEPredicate(predicate) {\n    return !!(predicate === null || predicate === void 0 ? void 0 : predicate.field) && predicate.lte !== undefined;\n}\nexport function isFieldGTPredicate(predicate) {\n    return !!(predicate === null || predicate === void 0 ? void 0 : predicate.field) && predicate.gt !== undefined;\n}\nexport function isFieldGTEPredicate(predicate) {\n    return !!(predicate === null || predicate === void 0 ? void 0 : predicate.field) && predicate.gte !== undefined;\n}\nexport function isFieldRangePredicate(predicate) {\n    if (predicate === null || predicate === void 0 ? void 0 : predicate.field) {\n        if (isArray(predicate.range) && predicate.range.length === 2) {\n            return true;\n        }\n        else if (isSignalRef(predicate.range)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFieldOneOfPredicate(predicate) {\n    return (!!(predicate === null || predicate === void 0 ? void 0 : predicate.field) && (isArray(predicate.oneOf) || isArray(predicate.in)) // backward compatibility\n    );\n}\nexport function isFieldValidPredicate(predicate) {\n    return !!(predicate === null || predicate === void 0 ? void 0 : predicate.field) && predicate.valid !== undefined;\n}\nexport function isFieldPredicate(predicate) {\n    return (isFieldOneOfPredicate(predicate) ||\n        isFieldEqualPredicate(predicate) ||\n        isFieldRangePredicate(predicate) ||\n        isFieldLTPredicate(predicate) ||\n        isFieldGTPredicate(predicate) ||\n        isFieldLTEPredicate(predicate) ||\n        isFieldGTEPredicate(predicate));\n}\nfunction predicateValueExpr(v, timeUnit) {\n    return valueExpr(v, { timeUnit, wrapTime: true });\n}\nfunction predicateValuesExpr(vals, timeUnit) {\n    return vals.map(v => predicateValueExpr(v, timeUnit));\n}\n// This method is used by Voyager. Do not change its behavior without changing Voyager.\nexport function fieldFilterExpression(predicate, useInRange = true) {\n    var _a;\n    const { field } = predicate;\n    const timeUnit = (_a = normalizeTimeUnit(predicate.timeUnit)) === null || _a === void 0 ? void 0 : _a.unit;\n    const fieldExpr = timeUnit\n        ? // For timeUnit, cast into integer with time() so we can use ===, inrange, indexOf to compare values directly.\n            // TODO: We calculate timeUnit on the fly here. Consider if we would like to consolidate this with timeUnit pipeline\n            // TODO: support utc\n            `time(${timeUnitFieldExpr(timeUnit, field)})`\n        : vgField(predicate, { expr: 'datum' });\n    if (isFieldEqualPredicate(predicate)) {\n        return `${fieldExpr}===${predicateValueExpr(predicate.equal, timeUnit)}`;\n    }\n    else if (isFieldLTPredicate(predicate)) {\n        const upper = predicate.lt;\n        return `${fieldExpr}<${predicateValueExpr(upper, timeUnit)}`;\n    }\n    else if (isFieldGTPredicate(predicate)) {\n        const lower = predicate.gt;\n        return `${fieldExpr}>${predicateValueExpr(lower, timeUnit)}`;\n    }\n    else if (isFieldLTEPredicate(predicate)) {\n        const upper = predicate.lte;\n        return `${fieldExpr}<=${predicateValueExpr(upper, timeUnit)}`;\n    }\n    else if (isFieldGTEPredicate(predicate)) {\n        const lower = predicate.gte;\n        return `${fieldExpr}>=${predicateValueExpr(lower, timeUnit)}`;\n    }\n    else if (isFieldOneOfPredicate(predicate)) {\n        return `indexof([${predicateValuesExpr(predicate.oneOf, timeUnit).join(',')}], ${fieldExpr}) !== -1`;\n    }\n    else if (isFieldValidPredicate(predicate)) {\n        return fieldValidPredicate(fieldExpr, predicate.valid);\n    }\n    else if (isFieldRangePredicate(predicate)) {\n        const { range } = predicate;\n        const lower = isSignalRef(range) ? { signal: `${range.signal}[0]` } : range[0];\n        const upper = isSignalRef(range) ? { signal: `${range.signal}[1]` } : range[1];\n        if (lower !== null && upper !== null && useInRange) {\n            return ('inrange(' +\n                fieldExpr +\n                ', [' +\n                predicateValueExpr(lower, timeUnit) +\n                ', ' +\n                predicateValueExpr(upper, timeUnit) +\n                '])');\n        }\n        const exprs = [];\n        if (lower !== null) {\n            exprs.push(`${fieldExpr} >= ${predicateValueExpr(lower, timeUnit)}`);\n        }\n        if (upper !== null) {\n            exprs.push(`${fieldExpr} <= ${predicateValueExpr(upper, timeUnit)}`);\n        }\n        return exprs.length > 0 ? exprs.join(' && ') : 'true';\n    }\n    /* istanbul ignore next: it should never reach here */\n    throw new Error(`Invalid field predicate: ${stringify(predicate)}`);\n}\nexport function fieldValidPredicate(fieldExpr, valid = true) {\n    if (valid) {\n        return `isValid(${fieldExpr}) && isFinite(+${fieldExpr})`;\n    }\n    else {\n        return `!isValid(${fieldExpr}) || !isFinite(+${fieldExpr})`;\n    }\n}\nexport function normalizePredicate(f) {\n    var _a;\n    if (isFieldPredicate(f) && f.timeUnit) {\n        return Object.assign(Object.assign({}, f), { timeUnit: (_a = normalizeTimeUnit(f.timeUnit)) === null || _a === void 0 ? void 0 : _a.unit });\n    }\n    return f;\n}\n//# sourceMappingURL=predicate.js.map","export const PROJECTION_PROPERTIES = [\n    'type',\n    'clipAngle',\n    'clipExtent',\n    'center',\n    'rotate',\n    'precision',\n    'reflectX',\n    'reflectY',\n    'coefficient',\n    'distance',\n    'fraction',\n    'lobes',\n    'parallel',\n    'radius',\n    'ratio',\n    'spacing',\n    'tilt'\n];\n//# sourceMappingURL=projection.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { isObject } from 'vega';\nimport { isString } from 'vega-util';\nimport * as CHANNEL from './channel';\nimport { isColorChannel } from './channel';\nimport * as log from './log';\nimport { NOMINAL, ORDINAL, QUANTITATIVE, TEMPORAL } from './type';\nimport { contains, keys } from './util';\nexport const ScaleType = {\n    // Continuous - Quantitative\n    LINEAR: 'linear',\n    LOG: 'log',\n    POW: 'pow',\n    SQRT: 'sqrt',\n    SYMLOG: 'symlog',\n    IDENTITY: 'identity',\n    SEQUENTIAL: 'sequential',\n    // Continuous - Time\n    TIME: 'time',\n    UTC: 'utc',\n    // Discretizing scales\n    QUANTILE: 'quantile',\n    QUANTIZE: 'quantize',\n    THRESHOLD: 'threshold',\n    BIN_ORDINAL: 'bin-ordinal',\n    // Discrete scales\n    ORDINAL: 'ordinal',\n    POINT: 'point',\n    BAND: 'band'\n};\n/**\n * Index for scale categories -- only scale of the same categories can be merged together.\n * Current implementation is trying to be conservative and avoid merging scale type that might not work together\n */\nexport const SCALE_CATEGORY_INDEX = {\n    linear: 'numeric',\n    log: 'numeric',\n    pow: 'numeric',\n    sqrt: 'numeric',\n    symlog: 'numeric',\n    identity: 'numeric',\n    sequential: 'numeric',\n    time: 'time',\n    utc: 'time',\n    ordinal: 'ordinal',\n    'bin-ordinal': 'bin-ordinal',\n    point: 'ordinal-position',\n    band: 'ordinal-position',\n    quantile: 'discretizing',\n    quantize: 'discretizing',\n    threshold: 'discretizing'\n};\nexport const SCALE_TYPES = keys(SCALE_CATEGORY_INDEX);\n/**\n * Whether the two given scale types can be merged together.\n */\nexport function scaleCompatible(scaleType1, scaleType2) {\n    const scaleCategory1 = SCALE_CATEGORY_INDEX[scaleType1];\n    const scaleCategory2 = SCALE_CATEGORY_INDEX[scaleType2];\n    return (scaleCategory1 === scaleCategory2 ||\n        (scaleCategory1 === 'ordinal-position' && scaleCategory2 === 'time') ||\n        (scaleCategory2 === 'ordinal-position' && scaleCategory1 === 'time'));\n}\n/**\n * Index for scale precedence -- high score = higher priority for merging.\n */\nconst SCALE_PRECEDENCE_INDEX = {\n    // numeric\n    linear: 0,\n    log: 1,\n    pow: 1,\n    sqrt: 1,\n    symlog: 1,\n    identity: 1,\n    sequential: 1,\n    // time\n    time: 0,\n    utc: 0,\n    // ordinal-position -- these have higher precedence than continuous scales as they support more types of data\n    point: 10,\n    band: 11,\n    // non grouped types\n    ordinal: 0,\n    'bin-ordinal': 0,\n    quantile: 0,\n    quantize: 0,\n    threshold: 0\n};\n/**\n * Return scale categories -- only scale of the same categories can be merged together.\n */\nexport function scaleTypePrecedence(scaleType) {\n    return SCALE_PRECEDENCE_INDEX[scaleType];\n}\nexport const QUANTITATIVE_SCALES = new Set([\n    'linear',\n    'log',\n    'pow',\n    'sqrt',\n    'symlog'\n]);\nexport const CONTINUOUS_TO_CONTINUOUS_SCALES = new Set([\n    ...QUANTITATIVE_SCALES,\n    'time',\n    'utc'\n]);\nexport function isQuantitative(type) {\n    return QUANTITATIVE_SCALES.has(type);\n}\nexport const CONTINUOUS_TO_DISCRETE_SCALES = new Set([\n    'quantile',\n    'quantize',\n    'threshold'\n]);\nexport const CONTINUOUS_DOMAIN_SCALES = new Set([\n    ...CONTINUOUS_TO_CONTINUOUS_SCALES,\n    ...CONTINUOUS_TO_DISCRETE_SCALES,\n    'sequential',\n    'identity'\n]);\nexport const DISCRETE_DOMAIN_SCALES = new Set([\n    'ordinal',\n    'bin-ordinal',\n    'point',\n    'band'\n]);\nexport const TIME_SCALE_TYPES = new Set(['time', 'utc']);\nexport function hasDiscreteDomain(type) {\n    return DISCRETE_DOMAIN_SCALES.has(type);\n}\nexport function hasContinuousDomain(type) {\n    return CONTINUOUS_DOMAIN_SCALES.has(type);\n}\nexport function isContinuousToContinuous(type) {\n    return CONTINUOUS_TO_CONTINUOUS_SCALES.has(type);\n}\nexport function isContinuousToDiscrete(type) {\n    return CONTINUOUS_TO_DISCRETE_SCALES.has(type);\n}\nexport const defaultScaleConfig = {\n    pointPadding: 0.5,\n    barBandPaddingInner: 0.1,\n    rectBandPaddingInner: 0,\n    bandWithNestedOffsetPaddingInner: 0.2,\n    bandWithNestedOffsetPaddingOuter: 0.2,\n    minBandSize: 2,\n    minFontSize: 8,\n    maxFontSize: 40,\n    minOpacity: 0.3,\n    maxOpacity: 0.8,\n    // FIXME: revise if these *can* become ratios of width/height step\n    minSize: 9,\n    minStrokeWidth: 1,\n    maxStrokeWidth: 4,\n    quantileCount: 4,\n    quantizeCount: 4,\n    zero: true\n};\nexport function isExtendedScheme(scheme) {\n    return !isString(scheme) && !!scheme['name'];\n}\nexport function isParameterDomain(domain) {\n    return domain === null || domain === void 0 ? void 0 : domain['param'];\n}\nexport function isDomainUnionWith(domain) {\n    return domain === null || domain === void 0 ? void 0 : domain['unionWith'];\n}\nexport function isFieldRange(range) {\n    return isObject(range) && 'field' in range;\n}\nconst SCALE_PROPERTY_INDEX = {\n    type: 1,\n    domain: 1,\n    domainMax: 1,\n    domainMin: 1,\n    domainMid: 1,\n    align: 1,\n    range: 1,\n    rangeMax: 1,\n    rangeMin: 1,\n    scheme: 1,\n    bins: 1,\n    // Other properties\n    reverse: 1,\n    round: 1,\n    // quantitative / time\n    clamp: 1,\n    nice: 1,\n    // quantitative\n    base: 1,\n    exponent: 1,\n    constant: 1,\n    interpolate: 1,\n    zero: 1,\n    // band/point\n    padding: 1,\n    paddingInner: 1,\n    paddingOuter: 1\n};\nexport const SCALE_PROPERTIES = keys(SCALE_PROPERTY_INDEX);\nconst { type, domain, range, rangeMax, rangeMin, scheme } = SCALE_PROPERTY_INDEX, NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTY_INDEX = __rest(SCALE_PROPERTY_INDEX, [\"type\", \"domain\", \"range\", \"rangeMax\", \"rangeMin\", \"scheme\"]);\nexport const NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTIES = keys(NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTY_INDEX);\nexport function scaleTypeSupportProperty(scaleType, propName) {\n    switch (propName) {\n        case 'type':\n        case 'domain':\n        case 'reverse':\n        case 'range':\n            return true;\n        case 'scheme':\n        case 'interpolate':\n            return !['point', 'band', 'identity'].includes(scaleType);\n        case 'bins':\n            return !['point', 'band', 'identity', 'ordinal'].includes(scaleType);\n        case 'round':\n            return isContinuousToContinuous(scaleType) || scaleType === 'band' || scaleType === 'point';\n        case 'padding':\n        case 'rangeMin':\n        case 'rangeMax':\n            return isContinuousToContinuous(scaleType) || ['point', 'band'].includes(scaleType);\n        case 'paddingOuter':\n        case 'align':\n            return ['point', 'band'].includes(scaleType);\n        case 'paddingInner':\n            return scaleType === 'band';\n        case 'domainMax':\n        case 'domainMid':\n        case 'domainMin':\n        case 'clamp':\n            return isContinuousToContinuous(scaleType);\n        case 'nice':\n            return isContinuousToContinuous(scaleType) || scaleType === 'quantize' || scaleType === 'threshold';\n        case 'exponent':\n            return scaleType === 'pow';\n        case 'base':\n            return scaleType === 'log';\n        case 'constant':\n            return scaleType === 'symlog';\n        case 'zero':\n            return (hasContinuousDomain(scaleType) &&\n                !contains([\n                    'log',\n                    'time',\n                    'utc',\n                    'threshold',\n                    'quantile' // quantile depends on distribution so zero does not matter\n                ], scaleType));\n    }\n}\n/**\n * Returns undefined if the input channel supports the input scale property name\n */\nexport function channelScalePropertyIncompatability(channel, propName) {\n    switch (propName) {\n        case 'interpolate':\n        case 'scheme':\n        case 'domainMid':\n            if (!isColorChannel(channel)) {\n                return log.message.cannotUseScalePropertyWithNonColor(propName);\n            }\n            return undefined;\n        case 'align':\n        case 'type':\n        case 'bins':\n        case 'domain':\n        case 'domainMax':\n        case 'domainMin':\n        case 'range':\n        case 'base':\n        case 'exponent':\n        case 'constant':\n        case 'nice':\n        case 'padding':\n        case 'paddingInner':\n        case 'paddingOuter':\n        case 'rangeMax':\n        case 'rangeMin':\n        case 'reverse':\n        case 'round':\n        case 'clamp':\n        case 'zero':\n            return undefined; // GOOD!\n    }\n}\nexport function scaleTypeSupportDataType(specifiedType, fieldDefType) {\n    if (contains([ORDINAL, NOMINAL], fieldDefType)) {\n        return specifiedType === undefined || hasDiscreteDomain(specifiedType);\n    }\n    else if (fieldDefType === TEMPORAL) {\n        return contains([ScaleType.TIME, ScaleType.UTC, undefined], specifiedType);\n    }\n    else if (fieldDefType === QUANTITATIVE) {\n        return isQuantitative(specifiedType) || isContinuousToDiscrete(specifiedType) || specifiedType === undefined;\n    }\n    return true;\n}\nexport function channelSupportScaleType(channel, scaleType, hasNestedOffsetScale = false) {\n    if (!CHANNEL.isScaleChannel(channel)) {\n        return false;\n    }\n    switch (channel) {\n        case CHANNEL.X:\n        case CHANNEL.Y:\n        case CHANNEL.XOFFSET:\n        case CHANNEL.YOFFSET:\n        case CHANNEL.THETA:\n        case CHANNEL.RADIUS:\n            if (isContinuousToContinuous(scaleType)) {\n                return true;\n            }\n            else if (scaleType === 'band') {\n                return true;\n            }\n            else if (scaleType === 'point') {\n                /*\n                  Point scale can't be use if the position has a nested offset scale\n                  because if there is a nested scale, then it's band.\n                */\n                return !hasNestedOffsetScale;\n            }\n            return false;\n        case CHANNEL.SIZE: // TODO: size and opacity can support ordinal with more modification\n        case CHANNEL.STROKEWIDTH:\n        case CHANNEL.OPACITY:\n        case CHANNEL.FILLOPACITY:\n        case CHANNEL.STROKEOPACITY:\n        case CHANNEL.ANGLE:\n            // Although it generally doesn't make sense to use band with size and opacity,\n            // it can also work since we use band: 0.5 to get midpoint.\n            return (isContinuousToContinuous(scaleType) ||\n                isContinuousToDiscrete(scaleType) ||\n                contains(['band', 'point', 'ordinal'], scaleType));\n        case CHANNEL.COLOR:\n        case CHANNEL.FILL:\n        case CHANNEL.STROKE:\n            return scaleType !== 'band'; // band does not make sense with color\n        case CHANNEL.STROKEDASH:\n        case CHANNEL.SHAPE:\n            return scaleType === 'ordinal' || isContinuousToDiscrete(scaleType);\n    }\n}\n//# sourceMappingURL=scale.js.map","import { isObject } from 'vega-util';\nexport const SELECTION_ID = '_vgsid_';\nexport const defaultConfig = {\n    point: {\n        on: 'click',\n        fields: [SELECTION_ID],\n        toggle: 'event.shiftKey',\n        resolve: 'global',\n        clear: 'dblclick'\n    },\n    interval: {\n        on: '[mousedown, window:mouseup] > window:mousemove!',\n        encodings: ['x', 'y'],\n        translate: '[mousedown, window:mouseup] > window:mousemove!',\n        zoom: 'wheel!',\n        mark: { fill: '#333', fillOpacity: 0.125, stroke: 'white' },\n        resolve: 'global',\n        clear: 'dblclick'\n    }\n};\nexport function isLegendBinding(bind) {\n    return bind === 'legend' || !!(bind === null || bind === void 0 ? void 0 : bind.legend);\n}\nexport function isLegendStreamBinding(bind) {\n    return isLegendBinding(bind) && isObject(bind);\n}\nexport function isSelectionParameter(param) {\n    return !!(param === null || param === void 0 ? void 0 : param['select']);\n}\n//# sourceMappingURL=selection.js.map","import { isArray } from 'vega-util';\nexport const DEFAULT_SORT_OP = 'min';\nconst SORT_BY_CHANNEL_INDEX = {\n    x: 1,\n    y: 1,\n    color: 1,\n    fill: 1,\n    stroke: 1,\n    strokeWidth: 1,\n    size: 1,\n    shape: 1,\n    fillOpacity: 1,\n    strokeOpacity: 1,\n    opacity: 1,\n    text: 1\n};\nexport function isSortByChannel(c) {\n    return c in SORT_BY_CHANNEL_INDEX;\n}\nexport function isSortByEncoding(sort) {\n    return !!(sort === null || sort === void 0 ? void 0 : sort['encoding']);\n}\nexport function isSortField(sort) {\n    return sort && (sort['op'] === 'count' || !!sort['field']);\n}\nexport function isSortArray(sort) {\n    return sort && isArray(sort);\n}\n//# sourceMappingURL=sort.js.map","import { isNumber, isObject } from 'vega-util';\nimport { keys } from '../util';\nimport { isConcatSpec, isVConcatSpec } from './concat';\nimport { isFacetMapping, isFacetSpec } from './facet';\nexport function getStepFor({ step, offsetIsDiscrete }) {\n    var _a;\n    if (offsetIsDiscrete) {\n        return (_a = step.for) !== null && _a !== void 0 ? _a : 'offset';\n    }\n    else {\n        return 'position';\n    }\n}\nexport function isStep(size) {\n    return isObject(size) && size['step'] !== undefined;\n}\nexport function isFrameMixins(o) {\n    return o['view'] || o['width'] || o['height'];\n}\nexport const DEFAULT_SPACING = 20;\nconst COMPOSITION_LAYOUT_INDEX = {\n    align: 1,\n    bounds: 1,\n    center: 1,\n    columns: 1,\n    spacing: 1\n};\nconst COMPOSITION_LAYOUT_PROPERTIES = keys(COMPOSITION_LAYOUT_INDEX);\nexport function extractCompositionLayout(spec, specType, config) {\n    var _a, _b;\n    const compositionConfig = config[specType];\n    const layout = {};\n    // Apply config first\n    const { spacing: spacingConfig, columns } = compositionConfig;\n    if (spacingConfig !== undefined) {\n        layout.spacing = spacingConfig;\n    }\n    if (columns !== undefined) {\n        if ((isFacetSpec(spec) && !isFacetMapping(spec.facet)) || isConcatSpec(spec)) {\n            layout.columns = columns;\n        }\n    }\n    if (isVConcatSpec(spec)) {\n        layout.columns = 1;\n    }\n    // Then copy properties from the spec\n    for (const prop of COMPOSITION_LAYOUT_PROPERTIES) {\n        if (spec[prop] !== undefined) {\n            if (prop === 'spacing') {\n                const spacing = spec[prop];\n                layout[prop] = isNumber(spacing)\n                    ? spacing\n                    : {\n                        row: (_a = spacing.row) !== null && _a !== void 0 ? _a : spacingConfig,\n                        column: (_b = spacing.column) !== null && _b !== void 0 ? _b : spacingConfig\n                    };\n            }\n            else {\n                layout[prop] = spec[prop];\n            }\n        }\n    }\n    return layout;\n}\n//# sourceMappingURL=base.js.map","export function isAnyConcatSpec(spec) {\n    return isVConcatSpec(spec) || isHConcatSpec(spec) || isConcatSpec(spec);\n}\nexport function isConcatSpec(spec) {\n    return 'concat' in spec;\n}\nexport function isVConcatSpec(spec) {\n    return 'vconcat' in spec;\n}\nexport function isHConcatSpec(spec) {\n    return 'hconcat' in spec;\n}\n//# sourceMappingURL=concat.js.map","export function isFacetMapping(f) {\n    return 'row' in f || 'column' in f;\n}\nexport function isFacetFieldDef(channelDef) {\n    return !!channelDef && 'header' in channelDef;\n}\nexport function isFacetSpec(spec) {\n    return 'facet' in spec;\n}\n//# sourceMappingURL=facet.js.map","export function isLayerSpec(spec) {\n    return 'layer' in spec;\n}\n//# sourceMappingURL=layer.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as log from '../log';\nimport { isConcatSpec, isHConcatSpec, isVConcatSpec } from './concat';\nimport { isFacetSpec } from './facet';\nimport { isLayerSpec } from './layer';\nimport { isRepeatSpec } from './repeat';\nimport { isUnitSpec } from './unit';\nexport class SpecMapper {\n    map(spec, params) {\n        if (isFacetSpec(spec)) {\n            return this.mapFacet(spec, params);\n        }\n        else if (isRepeatSpec(spec)) {\n            return this.mapRepeat(spec, params);\n        }\n        else if (isHConcatSpec(spec)) {\n            return this.mapHConcat(spec, params);\n        }\n        else if (isVConcatSpec(spec)) {\n            return this.mapVConcat(spec, params);\n        }\n        else if (isConcatSpec(spec)) {\n            return this.mapConcat(spec, params);\n        }\n        else {\n            return this.mapLayerOrUnit(spec, params);\n        }\n    }\n    mapLayerOrUnit(spec, params) {\n        if (isLayerSpec(spec)) {\n            return this.mapLayer(spec, params);\n        }\n        else if (isUnitSpec(spec)) {\n            return this.mapUnit(spec, params);\n        }\n        throw new Error(log.message.invalidSpec(spec));\n    }\n    mapLayer(spec, params) {\n        return Object.assign(Object.assign({}, spec), { layer: spec.layer.map(subspec => this.mapLayerOrUnit(subspec, params)) });\n    }\n    mapHConcat(spec, params) {\n        return Object.assign(Object.assign({}, spec), { hconcat: spec.hconcat.map(subspec => this.map(subspec, params)) });\n    }\n    mapVConcat(spec, params) {\n        return Object.assign(Object.assign({}, spec), { vconcat: spec.vconcat.map(subspec => this.map(subspec, params)) });\n    }\n    mapConcat(spec, params) {\n        const { concat } = spec, rest = __rest(spec, [\"concat\"]);\n        return Object.assign(Object.assign({}, rest), { concat: concat.map(subspec => this.map(subspec, params)) });\n    }\n    mapFacet(spec, params) {\n        return Object.assign(Object.assign({}, spec), { \n            // TODO: remove \"any\" once we support all facet listed in https://github.com/vega/vega-lite/issues/2760\n            spec: this.map(spec.spec, params) });\n    }\n    mapRepeat(spec, params) {\n        return Object.assign(Object.assign({}, spec), { \n            // as any is required here since TS cannot infer that the output type satisfies the input type\n            spec: this.map(spec.spec, params) });\n    }\n}\n//# sourceMappingURL=map.js.map","import { isArray } from 'vega-util';\nexport function isRepeatSpec(spec) {\n    return 'repeat' in spec;\n}\nexport function isLayerRepeatSpec(spec) {\n    return !isArray(spec.repeat) && spec.repeat['layer'];\n}\n//# sourceMappingURL=repeat.js.map","import { getPositionScaleChannel } from '../channel';\nimport { signalRefOrValue } from '../compile/common';\nexport function isFitType(autoSizeType) {\n    return autoSizeType === 'fit' || autoSizeType === 'fit-x' || autoSizeType === 'fit-y';\n}\nexport function getFitType(sizeType) {\n    return sizeType ? `fit-${getPositionScaleChannel(sizeType)}` : 'fit';\n}\nconst TOP_LEVEL_PROPERTIES = [\n    'background',\n    'padding'\n    // We do not include \"autosize\" here as it is supported by only unit and layer specs and thus need to be normalized\n];\nexport function extractTopLevelProperties(t, includeParams) {\n    const o = {};\n    for (const p of TOP_LEVEL_PROPERTIES) {\n        if (t && t[p] !== undefined) {\n            o[p] = signalRefOrValue(t[p]);\n        }\n    }\n    if (includeParams) {\n        o.params = t.params;\n    }\n    return o;\n}\n//# sourceMappingURL=toplevel.js.map","export function isUnitSpec(spec) {\n    return 'mark' in spec;\n}\n//# sourceMappingURL=unit.js.map","import { array, isBoolean } from 'vega-util';\nimport { SUM_OPS } from './aggregate';\nimport { getSecondaryRangeChannel, NONPOSITION_CHANNELS } from './channel';\nimport { channelDefType, getFieldDef, isFieldDef, isFieldOrDatumDef, vgField } from './channeldef';\nimport { channelHasField, isAggregate } from './encoding';\nimport * as log from './log';\nimport { ARC, AREA, BAR, CIRCLE, isMarkDef, isPathMark, LINE, POINT, RULE, SQUARE, TEXT, TICK } from './mark';\nimport { ScaleType } from './scale';\nconst STACK_OFFSET_INDEX = {\n    zero: 1,\n    center: 1,\n    normalize: 1\n};\nexport function isStackOffset(s) {\n    return s in STACK_OFFSET_INDEX;\n}\nexport const STACKABLE_MARKS = new Set([ARC, BAR, AREA, RULE, POINT, CIRCLE, SQUARE, LINE, TEXT, TICK]);\nexport const STACK_BY_DEFAULT_MARKS = new Set([BAR, AREA, ARC]);\nfunction isUnbinnedQuantitative(channelDef) {\n    return isFieldDef(channelDef) && channelDefType(channelDef) === 'quantitative' && !channelDef.bin;\n}\nfunction potentialStackedChannel(encoding, x) {\n    var _a, _b;\n    const y = x === 'x' ? 'y' : 'radius';\n    const xDef = encoding[x];\n    const yDef = encoding[y];\n    if (isFieldDef(xDef) && isFieldDef(yDef)) {\n        if (isUnbinnedQuantitative(xDef) && isUnbinnedQuantitative(yDef)) {\n            if (xDef.stack) {\n                return x;\n            }\n            else if (yDef.stack) {\n                return y;\n            }\n            const xAggregate = isFieldDef(xDef) && !!xDef.aggregate;\n            const yAggregate = isFieldDef(yDef) && !!yDef.aggregate;\n            // if there is no explicit stacking, only apply stack if there is only one aggregate for x or y\n            if (xAggregate !== yAggregate) {\n                return xAggregate ? x : y;\n            }\n            else {\n                const xScale = (_a = xDef.scale) === null || _a === void 0 ? void 0 : _a.type;\n                const yScale = (_b = yDef.scale) === null || _b === void 0 ? void 0 : _b.type;\n                if (xScale && xScale !== 'linear') {\n                    return y;\n                }\n                else if (yScale && yScale !== 'linear') {\n                    return x;\n                }\n            }\n        }\n        else if (isUnbinnedQuantitative(xDef)) {\n            return x;\n        }\n        else if (isUnbinnedQuantitative(yDef)) {\n            return y;\n        }\n    }\n    else if (isUnbinnedQuantitative(xDef)) {\n        return x;\n    }\n    else if (isUnbinnedQuantitative(yDef)) {\n        return y;\n    }\n    return undefined;\n}\nfunction getDimensionChannel(channel) {\n    switch (channel) {\n        case 'x':\n            return 'y';\n        case 'y':\n            return 'x';\n        case 'theta':\n            return 'radius';\n        case 'radius':\n            return 'theta';\n    }\n}\nexport function stack(m, encoding) {\n    var _a, _b;\n    const mark = isMarkDef(m) ? m.type : m;\n    // Should have stackable mark\n    if (!STACKABLE_MARKS.has(mark)) {\n        return null;\n    }\n    // Run potential stacked twice, one for Cartesian and another for Polar,\n    // so text marks can be stacked in any of the coordinates.\n    // Note: The logic here is not perfectly correct.  If we want to support stacked dot plots where each dot is a pie chart with label, we have to change the stack logic here to separate Cartesian stacking for polar stacking.\n    // However, since we probably never want to do that, let's just note the limitation here.\n    const fieldChannel = potentialStackedChannel(encoding, 'x') || potentialStackedChannel(encoding, 'theta');\n    if (!fieldChannel) {\n        return null;\n    }\n    const stackedFieldDef = encoding[fieldChannel];\n    const stackedField = isFieldDef(stackedFieldDef) ? vgField(stackedFieldDef, {}) : undefined;\n    const dimensionChannel = getDimensionChannel(fieldChannel);\n    const groupbyChannels = [];\n    const groupbyFields = new Set();\n    if (encoding[dimensionChannel]) {\n        const dimensionDef = encoding[dimensionChannel];\n        const dimensionField = isFieldDef(dimensionDef) ? vgField(dimensionDef, {}) : undefined;\n        if (dimensionField && dimensionField !== stackedField) {\n            // avoid grouping by the stacked field\n            groupbyChannels.push(dimensionChannel);\n            groupbyFields.add(dimensionField);\n        }\n        const dimensionOffsetChannel = dimensionChannel === 'x' ? 'xOffset' : 'yOffset';\n        const dimensionOffsetDef = encoding[dimensionOffsetChannel];\n        const dimensionOffsetField = isFieldDef(dimensionOffsetDef) ? vgField(dimensionOffsetDef, {}) : undefined;\n        if (dimensionOffsetField && dimensionOffsetField !== stackedField) {\n            // avoid grouping by the stacked field\n            groupbyChannels.push(dimensionOffsetChannel);\n            groupbyFields.add(dimensionOffsetField);\n        }\n    }\n    // If the dimension has offset, don't stack anymore\n    // Should have grouping level of detail that is different from the dimension field\n    const stackBy = NONPOSITION_CHANNELS.reduce((sc, channel) => {\n        // Ignore tooltip in stackBy (https://github.com/vega/vega-lite/issues/4001)\n        if (channel !== 'tooltip' && channelHasField(encoding, channel)) {\n            const channelDef = encoding[channel];\n            for (const cDef of array(channelDef)) {\n                const fieldDef = getFieldDef(cDef);\n                if (fieldDef.aggregate) {\n                    continue;\n                }\n                // Check whether the channel's field is identical to x/y's field or if the channel is a repeat\n                const f = vgField(fieldDef, {});\n                if (\n                // if fielddef is a repeat, just include it in the stack by\n                !f ||\n                    // otherwise, the field must be different from the groupBy fields.\n                    !groupbyFields.has(f)) {\n                    sc.push({ channel, fieldDef });\n                }\n            }\n        }\n        return sc;\n    }, []);\n    // Automatically determine offset\n    let offset;\n    if (stackedFieldDef.stack !== undefined) {\n        if (isBoolean(stackedFieldDef.stack)) {\n            offset = stackedFieldDef.stack ? 'zero' : null;\n        }\n        else {\n            offset = stackedFieldDef.stack;\n        }\n    }\n    else if (STACK_BY_DEFAULT_MARKS.has(mark)) {\n        offset = 'zero';\n    }\n    if (!offset || !isStackOffset(offset)) {\n        return null;\n    }\n    if (isAggregate(encoding) && stackBy.length === 0) {\n        return null;\n    }\n    // warn when stacking non-linear\n    if (((_a = stackedFieldDef === null || stackedFieldDef === void 0 ? void 0 : stackedFieldDef.scale) === null || _a === void 0 ? void 0 : _a.type) && ((_b = stackedFieldDef === null || stackedFieldDef === void 0 ? void 0 : stackedFieldDef.scale) === null || _b === void 0 ? void 0 : _b.type) !== ScaleType.LINEAR) {\n        log.warn(log.message.cannotStackNonLinearScale(stackedFieldDef.scale.type));\n        return null;\n    }\n    // Check if it is a ranged mark\n    if (isFieldOrDatumDef(encoding[getSecondaryRangeChannel(fieldChannel)])) {\n        if (stackedFieldDef.stack !== undefined) {\n            log.warn(log.message.cannotStackRangedMark(fieldChannel));\n        }\n        return null;\n    }\n    // Warn if stacking non-summative aggregate\n    if (isFieldDef(stackedFieldDef) &&\n        stackedFieldDef.aggregate &&\n        !SUM_OPS.has(stackedFieldDef.aggregate)) {\n        log.warn(log.message.stackNonSummativeAggregate(stackedFieldDef.aggregate));\n    }\n    return {\n        groupbyChannels,\n        groupbyFields,\n        fieldChannel,\n        impute: stackedFieldDef.impute === null ? false : isPathMark(mark),\n        stackBy,\n        offset\n    };\n}\n//# sourceMappingURL=stack.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { isObject, isString } from 'vega-util';\nimport { dateTimeExprToExpr } from './datetime';\nimport { accessPathWithDatum, keys, stringify, varName } from './util';\n/** Time Unit that only corresponds to only one part of Date objects. */\nexport const LOCAL_SINGLE_TIMEUNIT_INDEX = {\n    year: 1,\n    quarter: 1,\n    month: 1,\n    week: 1,\n    day: 1,\n    dayofyear: 1,\n    date: 1,\n    hours: 1,\n    minutes: 1,\n    seconds: 1,\n    milliseconds: 1\n};\nexport const TIMEUNIT_PARTS = keys(LOCAL_SINGLE_TIMEUNIT_INDEX);\nexport function isLocalSingleTimeUnit(timeUnit) {\n    return !!LOCAL_SINGLE_TIMEUNIT_INDEX[timeUnit];\n}\nexport const UTC_SINGLE_TIMEUNIT_INDEX = {\n    utcyear: 1,\n    utcquarter: 1,\n    utcmonth: 1,\n    utcweek: 1,\n    utcday: 1,\n    utcdayofyear: 1,\n    utcdate: 1,\n    utchours: 1,\n    utcminutes: 1,\n    utcseconds: 1,\n    utcmilliseconds: 1\n};\nexport const LOCAL_MULTI_TIMEUNIT_INDEX = {\n    yearquarter: 1,\n    yearquartermonth: 1,\n    yearmonth: 1,\n    yearmonthdate: 1,\n    yearmonthdatehours: 1,\n    yearmonthdatehoursminutes: 1,\n    yearmonthdatehoursminutesseconds: 1,\n    yearweek: 1,\n    yearweekday: 1,\n    yearweekdayhours: 1,\n    yearweekdayhoursminutes: 1,\n    yearweekdayhoursminutesseconds: 1,\n    yeardayofyear: 1,\n    quartermonth: 1,\n    monthdate: 1,\n    monthdatehours: 1,\n    monthdatehoursminutes: 1,\n    monthdatehoursminutesseconds: 1,\n    weekday: 1,\n    weeksdayhours: 1,\n    weekdayhoursminutes: 1,\n    weekdayhoursminutesseconds: 1,\n    dayhours: 1,\n    dayhoursminutes: 1,\n    dayhoursminutesseconds: 1,\n    hoursminutes: 1,\n    hoursminutesseconds: 1,\n    minutesseconds: 1,\n    secondsmilliseconds: 1\n};\nexport const UTC_MULTI_TIMEUNIT_INDEX = {\n    utcyearquarter: 1,\n    utcyearquartermonth: 1,\n    utcyearmonth: 1,\n    utcyearmonthdate: 1,\n    utcyearmonthdatehours: 1,\n    utcyearmonthdatehoursminutes: 1,\n    utcyearmonthdatehoursminutesseconds: 1,\n    utcyearweek: 1,\n    utcyearweekday: 1,\n    utcyearweekdayhours: 1,\n    utcyearweekdayhoursminutes: 1,\n    utcyearweekdayhoursminutesseconds: 1,\n    utcyeardayofyear: 1,\n    utcquartermonth: 1,\n    utcmonthdate: 1,\n    utcmonthdatehours: 1,\n    utcmonthdatehoursminutes: 1,\n    utcmonthdatehoursminutesseconds: 1,\n    utcweekday: 1,\n    utcweeksdayhours: 1,\n    utcweekdayhoursminutes: 1,\n    utcweekdayhoursminutesseconds: 1,\n    utcdayhours: 1,\n    utcdayhoursminutes: 1,\n    utcdayhoursminutesseconds: 1,\n    utchoursminutes: 1,\n    utchoursminutesseconds: 1,\n    utcminutesseconds: 1,\n    utcsecondsmilliseconds: 1\n};\nexport function isUTCTimeUnit(t) {\n    return t.startsWith('utc');\n}\nexport function getLocalTimeUnit(t) {\n    return t.substr(3);\n}\n// In order of increasing specificity\nexport const VEGALITE_TIMEFORMAT = {\n    'year-month': '%b %Y ',\n    'year-month-date': '%b %d, %Y '\n};\nexport function getTimeUnitParts(timeUnit) {\n    return TIMEUNIT_PARTS.filter(part => containsTimeUnit(timeUnit, part));\n}\n/** Returns true if fullTimeUnit contains the timeUnit, false otherwise. */\nexport function containsTimeUnit(fullTimeUnit, timeUnit) {\n    const index = fullTimeUnit.indexOf(timeUnit);\n    if (index < 0) {\n        return false;\n    }\n    // exclude milliseconds\n    if (index > 0 && timeUnit === 'seconds' && fullTimeUnit.charAt(index - 1) === 'i') {\n        return false;\n    }\n    // exclude dayofyear\n    if (fullTimeUnit.length > index + 3 && timeUnit === 'day' && fullTimeUnit.charAt(index + 3) === 'o') {\n        return false;\n    }\n    if (index > 0 && timeUnit === 'year' && fullTimeUnit.charAt(index - 1) === 'f') {\n        return false;\n    }\n    return true;\n}\n/**\n * Returns Vega expression for a given timeUnit and fieldRef\n */\nexport function fieldExpr(fullTimeUnit, field, { end } = { end: false }) {\n    const fieldRef = accessPathWithDatum(field);\n    const utc = isUTCTimeUnit(fullTimeUnit) ? 'utc' : '';\n    function func(timeUnit) {\n        if (timeUnit === 'quarter') {\n            // quarter starting at 0 (0,3,6,9).\n            return `(${utc}quarter(${fieldRef})-1)`;\n        }\n        else {\n            return `${utc}${timeUnit}(${fieldRef})`;\n        }\n    }\n    let lastTimeUnit;\n    const dateExpr = {};\n    for (const part of TIMEUNIT_PARTS) {\n        if (containsTimeUnit(fullTimeUnit, part)) {\n            dateExpr[part] = func(part);\n            lastTimeUnit = part;\n        }\n    }\n    if (end) {\n        dateExpr[lastTimeUnit] += '+1';\n    }\n    return dateTimeExprToExpr(dateExpr);\n}\nexport function timeUnitSpecifierExpression(timeUnit) {\n    if (!timeUnit) {\n        return undefined;\n    }\n    const timeUnitParts = getTimeUnitParts(timeUnit);\n    return `timeUnitSpecifier(${stringify(timeUnitParts)}, ${stringify(VEGALITE_TIMEFORMAT)})`;\n}\n/**\n * Returns the signal expression used for axis labels for a time unit.\n */\nexport function formatExpression(timeUnit, field, isUTCScale) {\n    if (!timeUnit) {\n        return undefined;\n    }\n    const expr = timeUnitSpecifierExpression(timeUnit);\n    // We only use utcFormat for utc scale\n    // For utc time units, the data is already converted as a part of timeUnit transform.\n    // Thus, utc time units should use timeFormat to avoid shifting the time twice.\n    const utc = isUTCScale || isUTCTimeUnit(timeUnit);\n    return `${utc ? 'utc' : 'time'}Format(${field}, ${expr})`;\n}\nexport function normalizeTimeUnit(timeUnit) {\n    if (!timeUnit) {\n        return undefined;\n    }\n    let params;\n    if (isString(timeUnit)) {\n        params = {\n            unit: timeUnit\n        };\n    }\n    else if (isObject(timeUnit)) {\n        params = Object.assign(Object.assign({}, timeUnit), (timeUnit.unit ? { unit: timeUnit.unit } : {}));\n    }\n    if (isUTCTimeUnit(params.unit)) {\n        params.utc = true;\n        params.unit = getLocalTimeUnit(params.unit);\n    }\n    return params;\n}\nexport function timeUnitToString(tu) {\n    const _a = normalizeTimeUnit(tu), { utc } = _a, rest = __rest(_a, [\"utc\"]);\n    if (rest.unit) {\n        return ((utc ? 'utc' : '') +\n            keys(rest)\n                .map(p => varName(`${p === 'unit' ? '' : `_${p}_`}${rest[p]}`))\n                .join(''));\n    }\n    else {\n        // when maxbins is specified instead of units\n        return ((utc ? 'utc' : '') +\n            'timeunit' +\n            keys(rest)\n                .map(p => varName(`_${p}_${rest[p]}`))\n                .join(''));\n    }\n}\n//# sourceMappingURL=timeunit.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { isArray, isString } from 'vega-util';\nimport { pick } from './util';\nexport function extractTitleConfig(titleConfig) {\n    const { \n    // These are non-mark title config that need to be hardcoded\n    anchor, frame, offset, orient, angle, limit, \n    // color needs to be redirect to fill\n    color, \n    // subtitle properties\n    subtitleColor, subtitleFont, subtitleFontSize, subtitleFontStyle, subtitleFontWeight, subtitleLineHeight, subtitlePadding } = titleConfig, \n    // The rest are mark config.\n    rest = __rest(titleConfig, [\"anchor\", \"frame\", \"offset\", \"orient\", \"angle\", \"limit\", \"color\", \"subtitleColor\", \"subtitleFont\", \"subtitleFontSize\", \"subtitleFontStyle\", \"subtitleFontWeight\", \"subtitleLineHeight\", \"subtitlePadding\"]);\n    const titleMarkConfig = Object.assign(Object.assign({}, rest), (color ? { fill: color } : {}));\n    // These are non-mark title config that need to be hardcoded\n    const nonMarkTitleProperties = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, (anchor ? { anchor } : {})), (frame ? { frame } : {})), (offset ? { offset } : {})), (orient ? { orient } : {})), (angle !== undefined ? { angle } : {})), (limit !== undefined ? { limit } : {}));\n    // subtitle part can stay in config.title since header titles do not use subtitle\n    const subtitle = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, (subtitleColor ? { subtitleColor } : {})), (subtitleFont ? { subtitleFont } : {})), (subtitleFontSize ? { subtitleFontSize } : {})), (subtitleFontStyle ? { subtitleFontStyle } : {})), (subtitleFontWeight ? { subtitleFontWeight } : {})), (subtitleLineHeight ? { subtitleLineHeight } : {})), (subtitlePadding ? { subtitlePadding } : {}));\n    const subtitleMarkConfig = pick(titleConfig, ['align', 'baseline', 'dx', 'dy', 'limit']);\n    return { titleMarkConfig, subtitleMarkConfig, nonMarkTitleProperties, subtitle };\n}\nexport function isText(v) {\n    return isString(v) || (isArray(v) && isString(v[0]));\n}\n//# sourceMappingURL=title.js.map","import { normalizeLogicalComposition } from './logical';\nimport { normalizePredicate } from './predicate';\nexport function isFilter(t) {\n    return 'filter' in t;\n}\nexport function isImputeSequence(t) {\n    return (t === null || t === void 0 ? void 0 : t['stop']) !== undefined;\n}\nexport function isLookup(t) {\n    return 'lookup' in t;\n}\nexport function isLookupData(from) {\n    return 'data' in from;\n}\nexport function isLookupSelection(from) {\n    return 'param' in from;\n}\nexport function isPivot(t) {\n    return 'pivot' in t;\n}\nexport function isDensity(t) {\n    return 'density' in t;\n}\nexport function isQuantile(t) {\n    return 'quantile' in t;\n}\nexport function isRegression(t) {\n    return 'regression' in t;\n}\nexport function isLoess(t) {\n    return 'loess' in t;\n}\nexport function isSample(t) {\n    return 'sample' in t;\n}\nexport function isWindow(t) {\n    return 'window' in t;\n}\nexport function isJoinAggregate(t) {\n    return 'joinaggregate' in t;\n}\nexport function isFlatten(t) {\n    return 'flatten' in t;\n}\nexport function isCalculate(t) {\n    return 'calculate' in t;\n}\nexport function isBin(t) {\n    return 'bin' in t;\n}\nexport function isImpute(t) {\n    return 'impute' in t;\n}\nexport function isTimeUnit(t) {\n    return 'timeUnit' in t;\n}\nexport function isAggregate(t) {\n    return 'aggregate' in t;\n}\nexport function isStack(t) {\n    return 'stack' in t;\n}\nexport function isFold(t) {\n    return 'fold' in t;\n}\nexport function normalizeTransform(transform) {\n    return transform.map(t => {\n        if (isFilter(t)) {\n            return {\n                filter: normalizeLogicalComposition(t.filter, normalizePredicate)\n            };\n        }\n        return t;\n    });\n}\n//# sourceMappingURL=transform.js.map","import { keys } from './util';\n/**\n * Data type based on level of measurement\n */\nexport const Type = {\n    quantitative: 'quantitative',\n    ordinal: 'ordinal',\n    temporal: 'temporal',\n    nominal: 'nominal',\n    geojson: 'geojson'\n};\nexport function isType(t) {\n    return t in Type;\n}\nexport function isContinuous(type) {\n    return type === 'quantitative' || type === 'temporal';\n}\nexport function isDiscrete(type) {\n    return type === 'ordinal' || type === 'nominal';\n}\nexport const QUANTITATIVE = Type.quantitative;\nexport const ORDINAL = Type.ordinal;\nexport const TEMPORAL = Type.temporal;\nexport const NOMINAL = Type.nominal;\nexport const GEOJSON = Type.geojson;\nexport const TYPES = keys(Type);\n/**\n * Get full, lowercase type name for a given type.\n * @param  type\n * @return Full type name.\n */\nexport function getFullName(type) {\n    if (type) {\n        type = type.toLowerCase();\n        switch (type) {\n            case 'q':\n            case QUANTITATIVE:\n                return 'quantitative';\n            case 't':\n            case TEMPORAL:\n                return 'temporal';\n            case 'o':\n            case ORDINAL:\n                return 'ordinal';\n            case 'n':\n            case NOMINAL:\n                return 'nominal';\n            case GEOJSON:\n                return 'geojson';\n        }\n    }\n    // If we get invalid input, return undefined type.\n    return undefined;\n}\n//# sourceMappingURL=type.js.map","import { default as clone_ } from 'clone';\nimport deepEqual_ from 'fast-deep-equal';\nimport stableStringify from 'fast-json-stable-stringify';\nimport { hasOwnProperty, isNumber, isString, splitAccessPath, stringValue, writeConfig } from 'vega-util';\nimport { isLogicalAnd, isLogicalNot, isLogicalOr } from './logical';\nexport const deepEqual = deepEqual_;\nexport const duplicate = clone_;\nexport function never(message) {\n    throw new Error(message);\n}\n/**\n * Creates an object composed of the picked object properties.\n *\n * var object = {'a': 1, 'b': '2', 'c': 3};\n * pick(object, ['a', 'c']);\n * // → {'a': 1, 'c': 3}\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function pick(obj, props) {\n    const copy = {};\n    for (const prop of props) {\n        if (hasOwnProperty(obj, prop)) {\n            copy[prop] = obj[prop];\n        }\n    }\n    return copy;\n}\n/**\n * The opposite of _.pick; this method creates an object composed of the own\n * and inherited enumerable string keyed properties of object that are not omitted.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function omit(obj, props) {\n    const copy = Object.assign({}, obj);\n    for (const prop of props) {\n        delete copy[prop];\n    }\n    return copy;\n}\n/**\n * Monkey patch Set so that `stringify` produces a string representation of sets.\n */\nSet.prototype['toJSON'] = function () {\n    return `Set(${[...this].map(x => stableStringify(x)).join(',')})`;\n};\n/**\n * Converts any object to a string representation that can be consumed by humans.\n */\nexport const stringify = stableStringify;\n/**\n * Converts any object to a string of limited size, or a number.\n */\nexport function hash(a) {\n    if (isNumber(a)) {\n        return a;\n    }\n    const str = isString(a) ? a : stableStringify(a);\n    // short strings can be used as hash directly, longer strings are hashed to reduce memory usage\n    if (str.length < 250) {\n        return str;\n    }\n    // from http://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/\n    let h = 0;\n    for (let i = 0; i < str.length; i++) {\n        const char = str.charCodeAt(i);\n        h = (h << 5) - h + char;\n        h = h & h; // Convert to 32bit integer\n    }\n    return h;\n}\nexport function isNullOrFalse(x) {\n    return x === false || x === null;\n}\nexport function contains(array, item) {\n    return array.includes(item);\n}\n/**\n * Returns true if any item returns true.\n */\nexport function some(arr, f) {\n    let i = 0;\n    for (const [k, a] of arr.entries()) {\n        if (f(a, k, i++)) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Returns true if all items return true.\n */\nexport function every(arr, f) {\n    let i = 0;\n    for (const [k, a] of arr.entries()) {\n        if (!f(a, k, i++)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * recursively merges src into dest\n */\nexport function mergeDeep(dest, ...src) {\n    for (const s of src) {\n        deepMerge_(dest, s !== null && s !== void 0 ? s : {});\n    }\n    return dest;\n}\nfunction deepMerge_(dest, src) {\n    for (const property of keys(src)) {\n        writeConfig(dest, property, src[property], true);\n    }\n}\nexport function unique(values, f) {\n    const results = [];\n    const u = {};\n    let v;\n    for (const val of values) {\n        v = f(val);\n        if (v in u) {\n            continue;\n        }\n        u[v] = 1;\n        results.push(val);\n    }\n    return results;\n}\n/**\n * Returns true if the two dictionaries disagree. Applies only to defined values.\n */\nexport function isEqual(dict, other) {\n    const dictKeys = keys(dict);\n    const otherKeys = keys(other);\n    if (dictKeys.length !== otherKeys.length) {\n        return false;\n    }\n    for (const key of dictKeys) {\n        if (dict[key] !== other[key]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function setEqual(a, b) {\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const e of a) {\n        if (!b.has(e)) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function hasIntersection(a, b) {\n    for (const key of a) {\n        if (b.has(key)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function prefixGenerator(a) {\n    const prefixes = new Set();\n    for (const x of a) {\n        const splitField = splitAccessPath(x);\n        // Wrap every element other than the first in `[]`\n        const wrappedWithAccessors = splitField.map((y, i) => (i === 0 ? y : `[${y}]`));\n        const computedPrefixes = wrappedWithAccessors.map((_, i) => wrappedWithAccessors.slice(0, i + 1).join(''));\n        for (const y of computedPrefixes) {\n            prefixes.add(y);\n        }\n    }\n    return prefixes;\n}\n/**\n * Returns true if a and b have an intersection. Also return true if a or b are undefined\n * since this means we don't know what fields a node produces or depends on.\n */\nexport function fieldIntersection(a, b) {\n    if (a === undefined || b === undefined) {\n        return true;\n    }\n    return hasIntersection(prefixGenerator(a), prefixGenerator(b));\n}\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isEmpty(obj) {\n    return keys(obj).length === 0;\n}\n// This is a stricter version of Object.keys but with better types. See https://github.com/Microsoft/TypeScript/pull/12253#issuecomment-263132208\nexport const keys = Object.keys;\nexport const vals = Object.values;\nexport const entries = Object.entries;\nexport function isBoolean(b) {\n    return b === true || b === false;\n}\n/**\n * Convert a string into a valid variable name\n */\nexport function varName(s) {\n    // Replace non-alphanumeric characters (anything besides a-zA-Z0-9_) with _\n    const alphanumericS = s.replace(/\\W/g, '_');\n    // Add _ if the string has leading numbers.\n    return (s.match(/^\\d+/) ? '_' : '') + alphanumericS;\n}\nexport function logicalExpr(op, cb) {\n    if (isLogicalNot(op)) {\n        return `!(${logicalExpr(op.not, cb)})`;\n    }\n    else if (isLogicalAnd(op)) {\n        return `(${op.and.map((and) => logicalExpr(and, cb)).join(') && (')})`;\n    }\n    else if (isLogicalOr(op)) {\n        return `(${op.or.map((or) => logicalExpr(or, cb)).join(') || (')})`;\n    }\n    else {\n        return cb(op);\n    }\n}\n/**\n * Delete nested property of an object, and delete the ancestors of the property if they become empty.\n */\nexport function deleteNestedProperty(obj, orderedProps) {\n    if (orderedProps.length === 0) {\n        return true;\n    }\n    const prop = orderedProps.shift(); // eslint-disable-line @typescript-eslint/no-non-null-assertion\n    if (prop in obj && deleteNestedProperty(obj[prop], orderedProps)) {\n        delete obj[prop];\n    }\n    return isEmpty(obj);\n}\nexport function titleCase(s) {\n    return s.charAt(0).toUpperCase() + s.substr(1);\n}\n/**\n * Converts a path to an access path with datum.\n * @param path The field name.\n * @param datum The string to use for `datum`.\n */\nexport function accessPathWithDatum(path, datum = 'datum') {\n    const pieces = splitAccessPath(path);\n    const prefixes = [];\n    for (let i = 1; i <= pieces.length; i++) {\n        const prefix = `[${pieces.slice(0, i).map(stringValue).join('][')}]`;\n        prefixes.push(`${datum}${prefix}`);\n    }\n    return prefixes.join(' && ');\n}\n/**\n * Return access with datum to the flattened field.\n *\n * @param path The field name.\n * @param datum The string to use for `datum`.\n */\nexport function flatAccessWithDatum(path, datum = 'datum') {\n    return `${datum}[${stringValue(splitAccessPath(path).join('.'))}]`;\n}\nfunction escapePathAccess(string) {\n    return string.replace(/(\\[|\\]|\\.|'|\")/g, '\\\\$1');\n}\n/**\n * Replaces path accesses with access to non-nested field.\n * For example, `foo[\"bar\"].baz` becomes `foo\\\\.bar\\\\.baz`.\n */\nexport function replacePathInField(path) {\n    return `${splitAccessPath(path).map(escapePathAccess).join('\\\\.')}`;\n}\n/**\n * Replace all occurrences of a string with another string.\n *\n * @param string the string to replace in\n * @param find the string to replace\n * @param replacement the replacement\n */\nexport function replaceAll(string, find, replacement) {\n    return string.replace(new RegExp(find.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'), 'g'), replacement);\n}\n/**\n * Remove path accesses with access from field.\n * For example, `foo[\"bar\"].baz` becomes `foo.bar.baz`.\n */\nexport function removePathFromField(path) {\n    return `${splitAccessPath(path).join('.')}`;\n}\n/**\n * Count the depth of the path. Returns 1 for fields that are not nested.\n */\nexport function accessPathDepth(path) {\n    if (!path) {\n        return 0;\n    }\n    return splitAccessPath(path).length;\n}\n/**\n * This is a replacement for chained || for numeric properties or properties that respect null so that 0 will be included.\n */\nexport function getFirstDefined(...args) {\n    for (const arg of args) {\n        if (arg !== undefined) {\n            return arg;\n        }\n    }\n    return undefined;\n}\n// variable used to generate id\nlet idCounter = 42;\n/**\n * Returns a new random id every time it gets called.\n *\n * Has side effect!\n */\nexport function uniqueId(prefix) {\n    const id = ++idCounter;\n    return prefix ? String(prefix) + id : id;\n}\n/**\n * Resets the id counter used in uniqueId. This can be useful for testing.\n */\nexport function resetIdCounter() {\n    idCounter = 42;\n}\nexport function internalField(name) {\n    return isInternalField(name) ? name : `__${name}`;\n}\nexport function isInternalField(name) {\n    return name.startsWith('__');\n}\n/**\n * Normalize angle to be within [0,360).\n */\nexport function normalizeAngle(angle) {\n    if (angle === undefined) {\n        return undefined;\n    }\n    return ((angle % 360) + 360) % 360;\n}\n/**\n * Returns whether the passed in value is a valid number.\n */\nexport function isNumeric(value) {\n    if (isNumber(value)) {\n        return true;\n    }\n    return !isNaN(value) && !isNaN(parseFloat(value));\n}\n//# sourceMappingURL=util.js.map","import { isArray } from 'vega-util';\nimport { keys } from './util';\nexport function isSignalRef(o) {\n    return !!(o === null || o === void 0 ? void 0 : o.signal);\n}\nexport function isVgRangeStep(range) {\n    return !!range['step'];\n}\nexport function isDataRefUnionedDomain(domain) {\n    if (!isArray(domain)) {\n        return 'fields' in domain && !('data' in domain);\n    }\n    return false;\n}\nexport function isFieldRefUnionDomain(domain) {\n    if (!isArray(domain)) {\n        return 'fields' in domain && 'data' in domain;\n    }\n    return false;\n}\nexport function isDataRefDomain(domain) {\n    if (!isArray(domain)) {\n        return 'field' in domain && 'data' in domain;\n    }\n    return false;\n}\nconst VG_MARK_CONFIG_INDEX = {\n    aria: 1,\n    description: 1,\n    ariaRole: 1,\n    ariaRoleDescription: 1,\n    blend: 1,\n    opacity: 1,\n    fill: 1,\n    fillOpacity: 1,\n    stroke: 1,\n    strokeCap: 1,\n    strokeWidth: 1,\n    strokeOpacity: 1,\n    strokeDash: 1,\n    strokeDashOffset: 1,\n    strokeJoin: 1,\n    strokeOffset: 1,\n    strokeMiterLimit: 1,\n    startAngle: 1,\n    endAngle: 1,\n    padAngle: 1,\n    innerRadius: 1,\n    outerRadius: 1,\n    size: 1,\n    shape: 1,\n    interpolate: 1,\n    tension: 1,\n    orient: 1,\n    align: 1,\n    baseline: 1,\n    text: 1,\n    dir: 1,\n    dx: 1,\n    dy: 1,\n    ellipsis: 1,\n    limit: 1,\n    radius: 1,\n    theta: 1,\n    angle: 1,\n    font: 1,\n    fontSize: 1,\n    fontWeight: 1,\n    fontStyle: 1,\n    lineBreak: 1,\n    lineHeight: 1,\n    cursor: 1,\n    href: 1,\n    tooltip: 1,\n    cornerRadius: 1,\n    cornerRadiusTopLeft: 1,\n    cornerRadiusTopRight: 1,\n    cornerRadiusBottomLeft: 1,\n    cornerRadiusBottomRight: 1,\n    aspect: 1,\n    width: 1,\n    height: 1,\n    url: 1,\n    smooth: 1\n    // commented below are vg channel that do not have mark config.\n    // x: 1,\n    // y: 1,\n    // x2: 1,\n    // y2: 1,\n    // xc'|'yc'\n    // clip: 1,\n    // path: 1,\n    // url: 1,\n};\nexport const VG_MARK_CONFIGS = keys(VG_MARK_CONFIG_INDEX);\nexport const VG_MARK_INDEX = {\n    arc: 1,\n    area: 1,\n    group: 1,\n    image: 1,\n    line: 1,\n    path: 1,\n    rect: 1,\n    rule: 1,\n    shape: 1,\n    symbol: 1,\n    text: 1,\n    trail: 1\n};\n// Vega's cornerRadius channels.\nexport const VG_CORNERRADIUS_CHANNELS = [\n    'cornerRadius',\n    'cornerRadiusTopLeft',\n    'cornerRadiusTopRight',\n    'cornerRadiusBottomLeft',\n    'cornerRadiusBottomRight'\n];\n//# sourceMappingURL=vega.schema.js.map"],"names":["AGGREGATE_OP_INDEX","argmax","argmin","average","count","distinct","product","max","mean","median","min","missing","q1","q3","ci0","ci1","stderr","stdev","stdevp","sum","valid","values","variance","variancep","MULTIDOMAIN_SORT_OP_INDEX","isArgminDef","a","isArgmaxDef","isAggregateOp","COUNTING_OPS","Set","isCountingAggregateOp","aggregate","has","isMinMaxOp","SUM_OPS","SHARED_DOMAIN_OPS","CONDITIONAL_AXIS_PROP_INDEX","labelAlign","part","vgProp","labelBaseline","labelColor","labelFont","labelFontSize","labelFontStyle","labelFontWeight","labelOpacity","labelOffset","labelPadding","gridColor","gridDash","gridDashOffset","gridOpacity","gridWidth","tickColor","tickDash","tickDashOffset","tickOpacity","tickSize","tickWidth","isConditionalAxisValue","v","condition","AXIS_PARTS","AXIS_PROPERTY_TYPE","grid","gridCap","gridScale","orient","bandPosition","aria","description","domain","domainCap","domainColor","domainDash","domainDashOffset","domainOpacity","domainWidth","format","formatType","labelAngle","labelBound","labelFlush","labelFlushOffset","labelLimit","labelLineHeight","labelOverlap","labels","labelSeparation","maxExtent","minExtent","offset","position","tickCap","tickMinStep","tickOffset","tickRound","ticks","title","titleAlign","titleAnchor","titleAngle","titleBaseline","titleColor","titleFont","titleFontSize","titleFontStyle","titleFontWeight","titleLimit","titleLineHeight","titleOpacity","titlePadding","titleX","titleY","encode","scale","tickBand","tickCount","tickExtra","translate","zindex","COMMON_AXIS_PROPERTIES_INDEX","AXIS_PROPERTIES_INDEX","Object","assign","style","labelExpr","encoding","isAxisProperty","prop","AXIS_CONFIGS","axis","axisBand","axisBottom","axisDiscrete","axisLeft","axisPoint","axisQuantitative","axisRight","axisTemporal","axisTop","axisX","axisXBand","axisXDiscrete","axisXPoint","axisXQuantitative","axisXTemporal","axisY","axisYBand","axisYDiscrete","axisYPoint","axisYQuantitative","axisYTemporal","binToString","bin","undefined","map","p","isParameterExtent","join","isBinning","isBinParams","binned","isBinned","extent","autoMaxBins","channel","__rest","s","e","t","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","ROW","COLUMN","FACET","X","Y","X2","Y2","XOFFSET","YOFFSET","RADIUS","RADIUS2","THETA","THETA2","LATITUDE","LONGITUDE","LATITUDE2","LONGITUDE2","COLOR","FILL","STROKE","SHAPE","SIZE","ANGLE","OPACITY","FILLOPACITY","STROKEOPACITY","STROKEWIDTH","STROKEDASH","TEXT","ORDER","DETAIL","KEY","TOOLTIP","HREF","URL","DESCRIPTION","POLAR_POSITION_CHANNEL_INDEX","theta","theta2","radius","radius2","isPolarPositionChannel","c","GEO_POSIITON_CHANNEL_INDEX","longitude","longitude2","latitude","latitude2","getPositionChannelFromLatLong","isGeoPositionChannel","GEOPOSITION_CHANNELS","UNIT_CHANNEL_INDEX","x","y","x2","y2","xOffset","yOffset","color","fill","stroke","opacity","fillOpacity","strokeOpacity","strokeWidth","strokeDash","size","angle","shape","order","text","detail","key","tooltip","href","url","isColorChannel","FACET_CHANNEL_INDEX","row","column","facet","FACET_CHANNELS","CHANNEL_INDEX","CHANNELS","_o","_d","_tt1","SINGLE_DEF_CHANNEL_INDEX","_r","_c","_f","SINGLE_DEF_UNIT_CHANNEL_INDEX","isSingleDefUnitChannel","str","isChannel","SECONDARY_RANGE_CHANNEL","isSecondaryRangeChannel","getMainRangeChannel","getVgPositionChannel","getSecondaryRangeChannel","getSizeChannel","getOffsetChannel","getOffsetScaleChannel","getMainChannelFromOffsetChannel","UNIT_CHANNELS","_x","_y","_x2","_y2","_xo","_yo","_latitude","_longitude","_latitude2","_longitude2","_theta","_theta2","_radius","_radius2","NONPOSITION_CHANNEL_INDEX","NONPOSITION_CHANNELS","POSITION_SCALE_CHANNEL_INDEX","POSITION_SCALE_CHANNELS","isXorY","POLAR_POSITION_SCALE_CHANNEL_INDEX","POLAR_POSITION_SCALE_CHANNELS","getPositionScaleChannel","sizeType","OFFSET_SCALE_CHANNEL_INDEX","isXorYOffset","_t","_tt","_hr","_u","_al","_dd","_k","_oo","NONPOSITION_SCALE_CHANNEL_INDEX","NONPOSITION_SCALE_CHANNELS","isNonPositionScaleChannel","supportLegend","SCALE_CHANNEL_INDEX","SCALE_CHANNELS","isScaleChannel","supportMark","mark","ALL_MARKS","ALL_MARKS_EXCEPT_GEOSHAPE","area","bar","image","rect","rule","circle","point","square","tick","line","trail","geoshape","arc","getSupportedMark","_g","rangeType","isConditionalParameter","isRepeatRef","field","toFieldDefBase","fieldDef","timeUnit","isSortableFieldDef","getBandPosition","fieldDef2","markDef","config","isFieldOrDatumDef","isFieldDef","type","getBandSize","scaleType","useVlSizeChannel","_a","_b","sizeChannel","vgChannel","band","discreteBandSize","continuousBandSize","hasBandEnd","isTypedFieldDef","isConditionalDef","channelDef","hasConditionalFieldDef","hasConditionalFieldOrDatumDef","hasConditionalValueDef","isValueDef","channelDefType","isDatumDef","isContinuousFieldOrDatumDef","cd","isDiscrete","isNumericDataDef","datum","isScaleFieldDef","isPositionFieldOrDatumDef","isMarkPropFieldOrDatumDef","isStringFieldOrDatumDef","toStringFieldDef","vgField","opt","prefix","suffix","argAccessor","isCount","fn","nofn","isOpFieldDef","op","binSuffix","String","includes","forAs","expr","def","Error","defaultTitleFormatter","fieldTitle","timeUnitParams","unit","maxbins","toUpperCase","functionalTitleFormatter","countTitle","verbalTitleFormatter","titleFormatter","setTitleFormatter","formatter","resetTitleFormatter","fieldOrDatumDef","allowDisabling","includeDefault","guideTitle","getGuide","defaultTitle","legend","header","getFormatMixins","guide","getFieldDef","getFieldOrDatumDef","initChannelDef","primitiveType","value","initFieldOrDatumDef","fd","rest","customFormatTypes","guideType","newGuide","initFieldDef","datumDef","initDatumDef","compositeMark","normalizeBin","fullType","newType","sort","defaultType","compatible","warning","COMPATIBLE","channelCompatibility","sub","substr","charAt","labelOrient","titleOrient","step","isFieldOrDatumDefForTimeFormat","valueExpr","wrapTime","undefinedIfExprNotRequired","isTime","signal","isNaN","Date","parse","valueArray","binRequiresRange","console","warn","setAxisEncode","vgRef","_e","update","assembleAxis","axisCmpt","kind","combine","disable","propType","propValue","valueOrSignalRef","conditions","propIndex","test","valueOrSignalCRef","signalRef","mainExtracted","hasAxisPart","titleString","assembleTitle","assembleAxisSignals","model","axes","component","signals","get","getSizeSignalRef","push","name","assembleAxes","axisComponents","filter","AXIS_COMPONENT_PROPERTIES_INDEX","AXIS_COMPONENT_PROPERTIES","AxisComponent","constructor","explicit","implicit","super","this","clone","hasOrientSignalRef","getAxisConfigFromConfigTypes","configTypes","apply","configType","orient1","orientConfig1","orientConfig2","props","conditionalOrientAxisConfig","getAxisConfigs","typeBasedConfigTypes","axisChannel","axisOrient","vlOnlyConfigTypes","vgConfigTypes","vlOnlyAxisConfig","vgAxisConfig","axisConfigStyle","getAxisConfigStyle","axisConfigTypes","toMerge","getAxisConfig","property","styleConfigIndex","axisConfigs","styleConfig","configFrom","configValue","specifiedLabelsSpec","stack","normalizedNumberFormatType","normalizedNumberFormat","numberFormatType","numberFormat","timeFormatType","timeFormat","parseUnitAxes","scales","parseAxis","OPPOSITE_ORIENT","bottom","top","left","right","parseLayerAxes","resolve","axisCount","child","children","parseAxesAndHeaders","mergeAxisComponents","concat","axisComponent","getWithExplicit","oppositeOrient","set","mergedAxisCmpts","childAxisCmpts","merged","mergedOrient","childOrient","mergeAxisComponent","mergedValueWithExplicit","v1","v2","setWithExplicit","isExplicit","propsToAlwaysIncludeConfig","getScaleComponent","ruleParams","hasValue","hasConfigValue","axisEncoding","axisEncode","axisEncodingPart","axisRules","scaleName","defaultGrid","gridChannel","defaultLabelAlign","defaultLabelBaseline","defaultLabelFlush","hasTimeUnit","defaultLabelOverlap","vals","defaultTickCount","fieldDefTitle","getFieldDefTitle","typedFieldDef","channel2","defaultZindex","getLabelAngle","normalizeAngleExpr","alwaysIncludeMiddle","isX","startAngle","mainOrient","defaultOrient","title1","title2","buildModel","spec","parent","parentGivenName","unitSize","signalOrValueRefWithCondition","val","conditionalSignalRefOrValue","signalRefOrValue","signalOrValueRef","exprFromSignalRefOrValue","ref","exprFromValueRefOrSignalRef","signalOrStringValue","applyMarkConfig","propsList","getMarkConfig","getStyles","getMarkPropOrConfig","ignoreVgConfig","getMarkStyleConfig","getStyleConfig","styles","sortParams","orderDef","fieldRefOption","reduce","orderChannelDef","mergeTitleFieldDefs","f1","f2","forEach","fdToMerge","fieldDef1","mergeTitle","mergeTitleComponent","v1Val","v2Val","compile","inputSpec","logger","data","vgSpec","topLevelProperties","datasets","usermeta","vgConfig","assembleSelectionData","projections","assembleProjections","assembleGroupStyle","encodeEntry","assembleGroupEncodeEntry","layoutSignals","assembleLayoutSignals","params","otherTopLevelProps","$schema","assembleGroup","assembleSelectionTopLevelSignals","assembleTopLevelModel","autosize","width","layoutSize","height","hasAxisOrientSignalRef","resize","inverseSizeType","getTopLevelProperties","normalized","ConcatModel","getChildren","getName","parseData","parseSelections","selection","parseMarkGroup","vconcat","hconcat","parseLayoutSize","parseAxisGroup","sg","assembleSignals","db","assembleMarks","assembleDefaultLayout","columns","layout","bounds","align","AggregateNode","dimensions","measures","groupBy","static","isAggregate","forEachFieldDef","meas","dims","argField","scaleDomain","channelDef2","add","posChannel","range","addDimension","as","groupby","merge","other","parentMeasures","childMeasures","ops","mergeMeasures","addDimensions","fields","dependentFields","producedFields","out","m","hash","assemble","alias","makeWalkTree","datasetIndex","walkTree","node","dataSource","isGenerator","source","transform","assembleFormatParse","assembleTransforms","setSource","numChildren","assembleFacetData","root","assembleRootData","dataComponent","sourceIndex","sources","hasName","dataName","newData","d","whereTo","entries","splice","from","outputNodes","getSource","binKey","getBinSignalName","createBinComponent","span","isBinTransform","normalizedBin","extentSignal","getSignalsFromModel","ext","param","binComponent","BinNode","bins","reduceFieldDef","binComponentIndex","startField","endField","formulaAs","formula","rangeFormula","renameSignal","removeChild","remove","flat","flatMap","binAs","remainingAs","binTrans","CalculateNode","_dependentFields","calculate","sortValue","equal","sortArrayIndexField","DataFlowNode","debugName","_children","_parent","addChild","loc","oldChild","insertAsParentOf","swapWithParent","newParent","OutputNode","refCounts","_source","_name","cloneObj","_hash","isRequired","DensityTransformNode","specifiedAs","minsteps","maxsteps","steps","density","object","startsWithDatum","getDependentFields","expression","ast","dependents","visit","slice","FacetNode","sortField","sortIndexField","childModel","f","depFields","getChildIndependentFieldsWithStep","childIndependentFieldsWithStep","childScaleComponent","assembleRowColumnHeaderData","crossedDataName","childChannel","assembleFacetHeaderData","layoutHeaders","hasSharedAxis","headerChannel","headerType","headers","cardinality","stop","start","unshift","facetData","FilterNode","FilterInvalidNode","aggregator","scaleComponent","filters","vegaFilters","FlattenTransformNode","flatten","FoldTransformNode","fold","unquote","pattern","startsWith","endsWith","getImplicitFromFilterTransform","lte","lt","gt","gte","oneOf","getImplicitFromEncoding","mainChannel","mainFieldDef","dimensionChannelDef","getImplicitFromSelection","selCmpt","proj","project","items","ParseNode","_parse","ancestorParse","makeWithAncestors","parsedAs","copyAll","parseNothing","formatParse","onlyNested","parseExpression","GeoJSONNode","geojson","projection","isFit","geoJsonCounter","coordinates","pair","channelHasField","GeoPointNode","projectionName","GraticuleNode","IdentifierNode","ImputeNode","impute","processSequence","keyvals","imputeTransform","xDef","yDef","imputedChannel","keyChannel","method","frame","groupbyFields","ignorePeers","AncestorParse","JoinAggregateTransformNode","joinaggregate","w","getDefaultName","joinAggregateFieldDef","makeJoinAggregateFromFacet","LoessTransformNode","on","loess","LookupNode","secondary","counter","fromOutputNode","fromSource","fromOutputName","outputNodeRefCounts","selName","getSelectionComponent","materialized","lookup","foreign","asName","default","FACET_SCALE_PREFIX","checkLinks","nodes","runOptimizer","optimizer","modified","optimize","optimizationDataflowHelper","firstPass","roots","r","optimizeDataflow","firstPassCounter","secondPassCounter","Math","_Optimizer_modified","__classPrivateFieldSet","receiver","state","TypeError","isDataSourceNode","Optimizer","setModified","modifiedFlag","__classPrivateFieldGet","WeakMap","BottomUpOptimizer","getNodeDepths","depth","depths","topologicalSort","Map","b","tuple","run","TopDownOptimizer","MergeIdenticalNodes","mergeNodes","mergedNode","shift","hashes","buckets","k","RemoveUnnecessaryIdentifierNodes","requiresSelectionId","RemoveDuplicateTimeUnits","timeUnitFields","removeFormulas","RemoveUnnecessaryOutputNodes","MoveParseUp","MergeParse","originalChildren","parseChildren","commonParse","conflictingParse","parseNode","mergedParseNode","childNode","RemoveUnusedSubtrees","MergeTimeUnits","timeUnitChildren","combination","pop","MergeAggregates","aggChildren","groupedAggregates","agg","groupBys","group","mergeableAggs","mergedAggs","MergeBins","moveBinsUp","promotableBins","remainingBins","promotedBin","bind","remainingBin","MergeOutputs","otherChildren","mainOutput","lastOutput","theChild","findSource","otherData","formatMesh","mesh","otherFeature","feature","formatFeature","otherMesh","_h","_j","head","existingSource","facetRoot","main","parseRoot","sequence","graticule","parentIsLayer","transforms","lookupCounter","derivedType","transformNode","parseTransformArray","implicitSelection","implicitEncoding","rawName","getDataName","raw","mainName","facetName","PivotTransformNode","pivot","limit","QuantileTransformNode","quantile","RegressionTransformNode","regression","SampleTransformNode","sample","SequenceNode","SourceNode","_data","defaultExtension","exec","_generator","StackNode","_stack","stackTransform","sortFields","sortOrder","normalizedAs","every","isValidAsArray","dimensionFieldDefs","stackField","facetby","stackProperties","groupbyChannels","fieldChannel","groupbyChannel","cDef","stackby","stackBy","by","_field","getStackByFields","getGroupbyFields","dimensionFieldDef","binStart","binEnd","moveFacetDown","facetMain","moveMainDownToFacet","cloner","copy","newName","n","TimeUnitNode","timeUnitComponent","normalizedTimeUnit","newFormula","utc","units","timezone","WindowTransformNode","window","windowFieldDef","o","facetSortFieldName","FacetModel","initFacet","initFacetFieldDef","channels","normalizedFacet","facetFieldDef","getHeaderLayoutMixins","layoutMixins","layoutHeaderComponent","headerComponent","bandType","columnDistinctSignal","getCardinalityAggregateForChild","assembleFacet","outputName","cross","facetSortFields","facetSortOrder","assembleLabelTitle","ORTHOGONAL_ORIENT","getMapping","isCustomFormatType","customFormatExpr","formatSignalRef","normalizeStack","formatCustomType","fieldToFormat","rawTimeFormat","isUTCScale","timeFormatExpression","specifiedFormat","binFormatExpression","formatExpr","guideFormat","omitTimeFormatConfig","guideFormatType","binNumberFormatExpr","end","guideEncodeEntry","valueDef","assembleTitleGroup","ta","role","defaultHeaderGuideBaseline","defaultHeaderGuideAlign","assembleHeaderProperties","anchor","baseline","assembleHeaderGroups","layoutHeader","groups","assembleHeaderGroup","getSort","labelAnchor","titleTextExpr","isFacetWithoutRowCol","hasAxes","sizeSignal","LAYOUT_TITLE_BAND","getLayoutTitleBand","assembleLayoutTitleBand","headerComponentIndex","titleBand","properties","propertiesMap","getHeaderChannel","getHeaderProperty","headerSpecificConfig","headerRow","headerColumn","headerFacet","getHeaderProperties","HEADER_CHANNELS","HEADER_TYPES","parseFacetHeaders","parseFacetHeader","mergeChildAxis","titleConfig","makeHeaderComponent","mainAxis","LayerModel","parentGivenSize","view","layer","uniqueStyles","Array","assembleLayout","assembleLegends","legends","sizeSignals","stepSignal","sizeExpr","isWidth","safeExpr","init","events","padding","paddingOuter","paddingInner","getSizeTypeFromLayoutSizeType","layoutSizeType","initLayoutSize","parseLayerLayoutSize","parseChildrenLayoutSize","parseNonUnitLayoutSizeForChannel","parseConcatLayoutSize","widthType","heightType","g","layoutSizeCmpt","mergedSize","childSize","scaleResolve","parseUnitLayoutSize","specifiedSize","defaultSize","defaultUnitSize","hasProjection","legendComponentIndex","legendByDomain","domainHash","mergedLegendComponent","l","legendCmpt","selections","symbols","setLegendEncode","assembleLegend","LEGEND_COMPONENT_PROPERTY_INDEX","LEGEND_COMPONENT_PROPERTIES","LegendComponent","legendEncodeRules","symbolsSpec","legendType","filled","symbolOpacity","symbolFillColor","symbolStrokeColor","getMaxValue","symbolBaseFillColor","getFirstConditionValue","selectedCondition","unselectedOpacity","gradient","gradientSpec","gradientOpacity","specifiedlabelsSpec","labelsSpec","entriesSpec","getConditionValue","conditionalDef","reducer","parseLegend","legendComponent","parseLegendForChannel","parseUnitLegend","mergeLegendComponent","parseNonUnitLegend","legendConfig","getLegendDefWithScale","direction","legendEncoding","legendEncode","legendEncodeParams","legendEncodingPart","interactive","mergedLegend","childLegend","typeMerged","st1","st2","legendRules","gradientLength","gradientHorizontalMaxLength","gradientHorizontalMinLength","gradientVerticalMaxLength","gradientVerticalMinLength","gradientLengthSignal","defaultGradientLength","symbolType","shapeChannelDef","markShape","defaultSymbolType","getLegendType","getDirection","defaultDirection","vgMark","defaultPos","defaultPos2","enableAria","ariaRoleDesc","ariaRoleDescription","descriptionValue","index","ALWAYS_IGNORE","baseEncodeEntry","ignore","markDefProperties","wrapAllFieldsInvalid","valueRef","invalid","filterIndex","allFieldsInvalidPredicate","markType","transparentIfNeeded","defaultFill","defaultStroke","colorVgChannel","fillStrokeMarkDefAndConfig","defaultValue","wrapCondition","refFn","conditionValueRef","empty","defined","valueIfDefined","nonPosition","defaultRef","positionOffset","baseChannel","offsetType","markDefOffsetValue","ALIGNED_X_CHANNEL","center","BASELINED_Y_CHANNEL","middle","vgAlignedPositionChannel","defaultAlign","alignChannel","alignExcludingSignal","pointPosition","channel2Def","pointPositionDefaultRef","startSuffix","positionRef","definedValueOrConfig","domainDefinitelyIncludesZero","sizeRef","mult","pointOrRangePosition","rangePosition","pos2Mixins","vgSizeChannel","position2Ref","position2orSize","pointPosition2OrSize","dimensionSize","rectPosition","hasSizeDef","isBarBand","offsetScaleChannel","offsetScaleName","sizeMixins","hasSizeFromMarkOrEncoding","bandSize","defaultSizeRef","defaultBandAlign","posRef","vgChannel2","sizeOffset","positionAndSize","reverse","axisTranslate","spacing","rectBinRef","getBinSpacing","startRef","rectBinPosition","bandWidth","scaleRange","spacingOffset","reverseExpr","offsetExpr","translateExpr","textRef","tooltipRefForEncoding","reactiveGeom","tooltipRefFromChannelDef","markTooltip","content","tooltipData","toSkip","tuples","fDef","keyValues","midPointRefWithPositionInvalidTest","midPoint","fieldInvalidTestValueRef","wrapPositionInvalidTest","fieldInvalidPredicate","zeroValueRef","datumDefToExpr","valueRefForFieldOrDatumDef","interpolatedSignalRef","fieldOrDatumDef2","offsetMixins","widthHeightValueOrSignalRef","postEncodingTransform","shapeDef","initMarkdef","originalMarkDef","specifiedOrient","xIsContinuous","yIsContinuous","xIsTemporal","yIsTemporal","cornerRadiusEnd","newProps","newProp","cursor","defaultFilled","filledConfig","markCompiler","parseMarkGroups","details","FACETED_PATH_PREFIX","requestDataName","marks","getMarkGroup","fromPrefix","getPathGroups","hasCornerRadius","STACK_GROUP_PREFIX","fieldScale","stackFieldGroup","func","groupUpdate","innerGroupUpdate","clip","groupByField","strokeForeground","strokeOffset","getGroupsForStackedBarWithCornerRadius","xScale","yScale","scaleClip","projectionClip","dimensionChannel","fieldDefToSort","unitCount","parentCount","interactiveFlag","fixedShape","shapeMixins","vgThicknessChannel","markPropOrConfig","NameMap","nameMap","rename","oldName","isUnitModel","isFacetModel","isConcatModel","isLayerModel","Model","correctDataNames","lookupDataSource","scaleNameMap","projectionNameMap","signalNameMap","isFaceted","parseScale","renameTopLevelLayoutSizeSignal","parseProjection","parseLegends","assembleEncodeFromView","_","baseView","isTopLevel","assembleHeaderMarks","headerMarks","titleNoEncoding","nonMarkTitleProperties","toLowerCase","fullName","fieldRef","getSignalName","oldSignalName","renameScale","renameProjection","originalScaleName","localScaleComponent","variableName","origName","sel","some","ModelWithField","acc","filterOp","predicate","assembleProjectionForModel","assembleProjectionsForModelAndChildren","fits","fit","ProjectionComponent","specifiedProjection","posssiblePair","gatherFitData","projComp","parseUnitProjection","nonUnitProjection","mergable","first","second","allPropertiesShared","mergeIfNoConflict","modelProjection","parseNonUnitProjections","defaultScaleResolve","parseGuideResolve","channelScaleResolve","assembleScales","assembleScalesForModel","selectionExtent","domains","otherScaleProps","assembleScaleRange","domainRaw","ScaleComponent","typeWithExplicit","parseScaleDomain","localScaleComponents","parseDomainForChannel","parseSelectionDomain","facetParent","replace","parseUnitScaleDomain","childComponent","domainsTieBreaker","se","parseNonUnitScaleDomain","scaleConfig","reason","canUseUnaggregatedDomain","useUnaggregatedDomain","normalizeUnaggregatedDomain","specifiedScales","parseSingleChannelDomain","convertDomainIfItIsDateTime","mapDomainToDataSignal","defaultDomain","unionWith","stackDimensions","normalizeSortField","fieldDefToSortBy","isStackedMeasure","domainSort","binSignal","propertyOf","getFieldFromDomain","nonUnionDomain","assembleDomain","uniqueDomains","_s","sorts","unionDomainSorts","allData","mergeDomains","parseScales","ignoreRange","parseScaleCore","scaleComponents","specifiedScale","hasNestedOffsetScale","sType","parseUnitScaleCore","scaleTypeWithExplicitIndex","explicitScaleType","childScaleType","scaleTypeTieBreaker","childScale","parseNonUnitScaleCore","parseScaleProperty","localScaleCmpt","mergedScaleCmpt","specifiedValue","scalePadding","scalePaddingInner","supportedByScaleType","channelIncompatability","copyKeyFromObject","scaleRules","domainMin","domainMax","hasSecondaryRangeChannel","parseUnitScaleProperty","parseNonUnitScaleProperty","interpolate","nice","specifiedDomain","barConfig","continuousPadding","pointPadding","paddingValue","bandPaddingInner","barBandPaddingInner","rectBandPaddingInner","bandWithNestedOffsetPaddingInner","offsetBandPaddingInner","paddingInnerValue","bandPaddingOuter","bandWithNestedOffsetPaddingOuter","offsetBandPaddingOuter","xReverse","zero","last","parseScaleRange","valueWithExplicit","childValueWithExplicit","RANGE_PROPERTIES","parseUnitScaleRange","rangeWithExplicit","parseRangeForChannel","getBinStepSignal","binCount","updatedName","scheme","sizeValue","getPositionStep","positionChannel","getOffsetStep","rangeMin","rangeMax","domainMid","positionSize","getDiscretePositionSize","offsetScaleType","positionScaleType","positionScaleName","getOffsetRange","sizeRangeMin","xyStepSignals","maxBandSize","minXYStep","maxStrokeWidth","maxFontSize","maxSize","pointStep","pow","MAX_SIZE_RANGE_STEP_RATIO","sizeRangeMax","rMax","rMin","interpolateRange","quantileCount","quantizeCount","defaultContinuousToDiscreteCount","PI","minStrokeWidth","minOpacity","maxOpacity","defaultRange","offsetChannel","offsetDef","offsetIsDiscrete","offsetScaleCmpt","stepCount","viewConfig","minBandSize","minFontSize","minSize","widthStep","heightStep","defaultScaleType","assembleInit","isExpr","wrap","assembled","assembleUnitSelectionSignals","modifyExpr","cleanupEmptyOnArray","assembleFacetSignals","assembleTopLevelSignals","hasSelections","store","isPoint","topLevelSignals","assembleUnitSelectionData","dataCopy","escape","hasSelectionId","assembleUnitSelectionMarks","assembleLayerSelectionMarks","assembleSelectionScaleDomain","scaleCmpt","parsedExtent","clear","idx","findIndex","addClear","vIdx","visual","tIdx","STORE","TUPLE","MODIFY","VL_SELECTION_RESOLVE","selectionCompilers","unitName","facetModel","getFacetModel","identifier","disableDirectManipulation","selDef","isString","select","toggle","sgname","BRUSH","SCALE_TRIGGER","fieldsSg","hasScales","dataSignals","scaleTriggers","filterExpr","evt","between","cs","vname","dname","scaled","coord","channelSignals","toNum","hasChannel","xvname","yvname","vgStroke","enter","cb","legendBindings","projLen","selDef_","isObject","legendFilter","stream","markName","ds","markname","hasLegend","sgName","force","find","parseInteractiveLegend","hasField","legendSelections","VORONOI","nearest","cellDef","isVoronoi","exists","parseUnitSelection","selDefs","selCmpts","selectionConfig","defaults","cfg","parseSelectionPredicate","pred","dfnode","tunode","parseSelectionExtent","encodings","materializeSelections","lookupName","brushes","cmpt","TUPLE_FIELDS","SelectionProjectionComponent","parsed","timeUnits","signalName","initVal","tplType","allSignals","bound","isTopLevelLayer","namedSg","mapping","substring","TOGGLE","tpl","ANCHOR","DELTA","onDelta","delta","sizeSg","reversed","sign","zoom","sx","sy","base","SignalRefWrapper","exprGenerator","defineProperty","enumerable","Split","copyKeyFromSplit","makeExplicit","makeImplicit","tieBreakByComparing","compare","diff","defaultTieBreaker","mergeValuesWithExplicit","tieBreaker","UnitModel","specifiedAxes","specifiedLegends","initScales","initAxes","initLegends","isGeoShapeMark","hasGeoPosition","initScale","scaleInternal","_axis","axisSpec","initAxis","axisInternal","_legend","CompositeMarkNormalizer","hasMatchingType","BOXPLOT","BOXPLOT_PARTS","boxPlotNormalizer","normalizeBoxPlot","getBoxPlotType","_encoding","_p","outerSpec","boxplot","boxPlotType","continuousAxisChannelDef","continuousAxis","encodingWithoutContinuousAxis","ticksOrient","boxOrient","customTooltipWithoutAggregatedField","continuousFieldName","boxplotSpecificAggregate","boxParamsQuartiles","postAggregateCalculates","oldEncodingWithoutContinuousAxis","filteredEncoding","boxParams","encodingWithoutSizeColorAndContinuousAxis","makeBoxPlotPart","sharedEncoding","makeBoxPlotExtent","makeBoxPlotBox","makeBoxPlotMidTick","fiveSummaryTooltipEncoding","fieldPrefix","titlePrefix","endTick","whiskerTooltipEncoding","whiskerLayers","partName","positionPrefix","endPositionPrefix","extraEncoding","boxLayers","lowerBoxExpr","upperBoxExpr","iqrExpr","lowerWhiskerExpr","upperWhiskerExpr","fieldExpr","joinaggregateTransform","filteredWhiskerSpec","encodingWithoutSizeColorContinuousAxisAndTooltip","axisWithoutTitle","outlierLayersMixins","filteredLayersMixins","filteredLayersMixinsTransforms","continousAxisField","filterTooltipWithAggregatedField","oldEncoding","customTooltipWithAggregatedField","getCompositeMarkTooltip","tooltipSummary","withFieldName","fiveSummaryTooltip","mainTitle","getTitle","tooltipFieldDefs","makeCompositeAggregatePartFactory","compositeMarkDef","compositeMarkConfig","partLayerMixins","partBaseSpec","compositeMarkContinuousAxis","continuousAxisChannelDef2","continuousAxisChannelDefError","continuousAxisChannelDefError2","filterAggregateFromChannelDef","continuousAxisWithoutAggregate","compositeMarkOrient","xAggregate","yAggregate","ERRORBAND","ERRORBAND_PARTS","errorBandNormalizer","normalizeErrorBand","tooltipEncoding","errorBandDef","makeErrorBandPart","errorband","is2D","bandMark","bordersMark","tension","ERRORBAR","ERRORBAR_PARTS","errorBarNormalizer","normalizeErrorBar","errorBarParams","makeErrorBarPart","errorbar","thickness","inputType","xError","xError2","yError","yError2","errorBarIsInputTypeRaw","isTypeAggregatedUpperLower","errorBarIsInputTypeAggregatedUpperLower","isTypeAggregatedError","errorBarIsInputTypeAggregatedError","errorBarOrientAndInputType","errorBarSpecificAggregate","tooltipTitleWithFieldName","getTitlePrefix","centerOp","lowerExtentOp","upperExtentOp","postAggregateCalculate","errorBarAggregationAndCalculation","oldAggregate","oldGroupBy","operation","compositeMarkRegistry","parts","normalizer","getAllCompositeMarks","getViewConfigContinuousSize","getViewConfigDiscreteStep","getViewConfigDiscreteSize","DEFAULT_STEP","defaultConfig","background","continuousWidth","continuousHeight","box","outliers","borders","tab10","DEFAULT_FONT_SIZE","guideLabel","groupTitle","groupSubtitle","DEFAULT_COLOR","blue","orange","red","teal","green","yellow","purple","pink","brown","gray0","gray1","gray2","gray3","gray4","gray5","gray6","gray7","gray8","gray9","gray10","gray11","gray12","gray13","gray14","gray15","getAxisConfigInternal","axisConfig","axisConfigInternal","configPropsWithExpr","initConfig","specifiedConfig","font","fontSize","restConfig","mergedConfig","fontConfig","cell","category","colorSignalConfig","fontSizeSignalConfig","writeConfig","outputConfig","markConfigType","axisConfigType","headerConfigType","styleConfigInternal","getStyleConfigInternal","MARK_STYLES","VL_ONLY_CONFIG_PROPERTIES","VL_ONLY_ALL_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX","stripAndRedirectConfig","vlOnlyMarkSpecificConfigs","redirectConfigToStyleConfig","titleMarkConfig","subtitleMarkConfig","subtitle","redirectTitleConfig","toProp","compositeMarkPart","propConfig","isUrlData","isInlineData","isNamedData","isSequenceGenerator","isSphereGenerator","isGraticuleGenerator","DataSourceType","isDateTime","MONTHS","SHORT_MONTHS","DAYS","SHORT_DAYS","dateTimeParts","normalize","day","year","month","lowerM","monthIndex","shortM","shortMonthIndex","normalizeMonth","quarter","q","normalizeQuarter","date","lowerD","dayIndex","shortD","shortDayIndex","normalizeDay","dateTimeToExpr","string","dateTimeExprToExpr","dateTimeToTimestamp","UTC","channelHasFieldOrDatum","channelHasNestedOffsetScale","extractTransformsFromEncoding","aggOp","remaining","isTitleDefined","newField","newFieldDef","aggregateEntry","secondaryChannel","markChannelCompatible","markSupported","primaryFieldDef","initEncoding","normalizedEncoding","positionDef","defs","normalizeEncoding","newChannelDef","fieldDefs","arr","channelDefArray","thisArg","el","r1","pathGroupingFields","isExprRef","replaceExprRef","newIndex","VL_ONLY_LEGEND_CONFIG","HEADER_TITLE_PROPERTIES_MAP","HEADER_LABEL_PROPERTIES_MAP","HEADER_TITLE_PROPERTIES","HEADER_LABEL_PROPERTIES","HEADER_CONFIGS","version","LEGEND_SCALE_CHANNELS","defaultLegendConfig","COMMON_LEGEND_PROPERTY_INDEX","clipHeight","columnPadding","cornerRadius","fillColor","gradientStrokeColor","gradientStrokeWidth","gradientThickness","gridAlign","legendX","legendY","rowPadding","strokeColor","symbolDash","symbolDashOffset","symbolLimit","symbolOffset","symbolSize","symbolStrokeWidth","current","newLogger","reset","args","debug","invalidSpec","FIT_NON_SINGLE","containerSizeNonSingle","containerSizeNotCompatibleWithAutosize","droppingFit","unknownField","cannotProjectOnChannelWithoutField","cannotProjectAggregate","nearestNotSupportForContinuous","selectionNotSupported","selectionNotFound","SCALE_BINDINGS_CONTINUOUS","LEGEND_BINDINGS_MUST_HAVE_PROJECTION","cannotLookupVariableParameter","noSameUnitLookup","NEEDS_SAME_SELECTION","INTERVAL_INITIALIZED_WITH_X_Y","noSuchRepeatedValue","columnsNotSupportByRowCol","CONCAT_CANNOT_SHARE_AXIS","unrecognizedParse","differentParse","local","ancestor","ADD_SAME_CHILD_TWICE","invalidTransformIgnored","NO_FIELDS_NEEDS_AS","customFormatTypeNotAllowed","projectionOverridden","parentProjection","REPLACE_ANGLE_WITH_THETA","offsetNestedInsideContinuousPositionScaleDropped","replaceOffsetWithMainChannel","primitiveChannelDef","invalidFieldType","invalidFieldTypeForCountAggregate","invalidAggregate","missingFieldType","droppingColor","relativeBandSizeNotSupported","emptyFieldDef","LINE_WITH_VARYING_SIZE","incompatibleChannel","markOrFacet","when","offsetEncodingScaleIgnored","invalidEncodingChannel","channelShouldBeDiscrete","channelShouldBeDiscreteOrDiscretizing","facetChannelDropped","discreteChannelCannotEncode","rangeMarkAlignmentCannotBeExpression","lineWithRange","hasX2","hasY2","orientOverridden","original","actual","CANNOT_UNION_CUSTOM_DOMAIN_WITH_FIELD_DOMAIN","cannotUseScalePropertyWithNonColor","cannotUseRelativeBandSizeWithNonBandScale","unaggregateDomainHasNoEffectForRawField","unaggregateDomainWithNonSharedDomainOp","unaggregatedDomainWithLogScale","cannotApplySizeToNonOrientedMark","scaleTypeNotWorkWithChannel","scaleTypeNotWorkWithFieldDef","scalePropertyNotWorkWithScaleType","propName","scaleTypeNotWorkWithMark","stepDropped","mergeConflictingProperty","toString","mergeConflictingDomainProperty","independentScaleMeansIndependentGuide","domainSortDropped","MORE_THAN_ONE_SORT","FACETED_INDEPENDENT_DIFFERENT_SOURCES","FACETED_INDEPENDENT_SAME_FIELDS_DIFFERENT_SOURCES","FACETED_INDEPENDENT_SAME_SOURCE","INVALID_CHANNEL_FOR_AXIS","cannotStackRangedMark","cannotStackNonLinearScale","stackNonSummativeAggregate","invalidTimeUnit","droppedDay","errorBarCenterAndExtentAreNotNeeded","errorBarCenterIsUsedWithWrongExtent","errorBarContinuousAxisHasCustomizedAggregate","errorBand1DNotSupport","channelRequiredForBinned","channelShouldNotBeUsedForBinned","domainRequiredForThresholdScale","isLogicalOr","or","isLogicalAnd","and","isLogicalNot","not","forEachLeaf","subop","normalizeLogicalComposition","Mark","ARC","AREA","BAR","IMAGE","LINE","POINT","RECT","RULE","TICK","TRAIL","CIRCLE","SQUARE","GEOSHAPE","isPathMark","isRectBasedMark","PRIMITIVE_MARKS","isMarkDef","FILL_STROKE_CONFIG","VL_ONLY_MARK_CONFIG_PROPERTIES","timeUnitBandSize","timeUnitBandPosition","VL_ONLY_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX","defaultMarkConfig","MARK_CONFIGS","isRelativeBandSize","BAR_CORNER_RADIUS_INDEX","horizontal","vertical","defaultBarConfig","binSpacing","defaultRectConfig","defaultTickConfig","getMarkType","CoreNormalizer","arguments","nonFacetUnitNormalizers","hasRow","hasColumn","hasFacet","mapFacetedUnit","mapUnit","parentEncoding","repeater","specWithReplacedEncoding","mapUnitWithParentEncodingOrProjection","normalizeLayerOrUnit","mapLayerOrUnit","unitNormalizer","mapRepeat","mapLayerRepeat","mapNonLayerRepeat","repeat","childSpec","repeaterPrefix","layerValue","childRepeater","childName","remainingProperties","repeatValues","repeatValue","rowValue","columnValue","mapFacet","mergedProjection","mergeProjection","mergedEncoding","mergeEncoding","normParams","facetMapping","getFacetMappingAndLayout","newEncoding","facets","defWithoutLayout","mapLayer","otherParams","parentChannelDef","mergedChannelDef","normalizedSpec","topLevelSelectionNormalizer","coreNormalizer","selectionCompatNormalizer","normalizeGenericSpec","sizeInfo","isFitCompatible","autosizeDefault","contains","_normalizeAutoSize","normalizeAutoSize","dropLineAndPoint","_point","_line","dropLineAndPointFromConfig","getPointOverlay","markConfig","getLineOverlay","PathOverlayNormalizer","pointOverlay","lineOverlay","stackProps","overlayEncoding","stackFieldChannel","replaceRepeaterInFacet","replaceRepeaterInMapping","replaceRepeaterInFieldDef","replaceRepeaterInEncoding","replaceRepeatInProp","replaceRepeaterInFieldOrDatumDef","replaceRepeaterInChannelDef","RuleForRangedLineNormalizer","mainChannelDef","SelectionCompatibilityNormalizer","emptySelections","selectionPredicates","normalizeTransforms","enc","normalizeChannelDef","tx","normalizePredicate","normalizeBinExtent","obj","isArray","cond","normalizeSelectionComposition","TopLevelSelectionsNormalizer","addSpecNameToParams","path","views","proto","assembleParameterSignals","isSelectionPredicate","isFieldEqualPredicate","isFieldLTPredicate","isFieldLTEPredicate","isFieldGTPredicate","isFieldGTEPredicate","isFieldRangePredicate","isFieldOneOfPredicate","in","isFieldPredicate","predicateValueExpr","fieldFilterExpression","useInRange","predicateValuesExpr","isFieldValidPredicate","fieldValidPredicate","lower","upper","exprs","PROJECTION_PROPERTIES","ScaleType","LINEAR","LOG","POW","SQRT","SYMLOG","IDENTITY","SEQUENTIAL","TIME","QUANTILE","QUANTIZE","THRESHOLD","BIN_ORDINAL","ORDINAL","BAND","SCALE_CATEGORY_INDEX","linear","log","sqrt","symlog","identity","sequential","time","ordinal","quantize","threshold","scaleCompatible","scaleType1","scaleType2","scaleCategory1","scaleCategory2","SCALE_PRECEDENCE_INDEX","scaleTypePrecedence","QUANTITATIVE_SCALES","CONTINUOUS_TO_CONTINUOUS_SCALES","isQuantitative","CONTINUOUS_TO_DISCRETE_SCALES","CONTINUOUS_DOMAIN_SCALES","DISCRETE_DOMAIN_SCALES","hasDiscreteDomain","hasContinuousDomain","isContinuousToContinuous","isContinuousToDiscrete","defaultScaleConfig","isExtendedScheme","isParameterDomain","isDomainUnionWith","isFieldRange","SCALE_PROPERTY_INDEX","round","clamp","exponent","constant","NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTY_INDEX","NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTIES","scaleTypeSupportProperty","channelScalePropertyIncompatability","scaleTypeSupportDataType","specifiedType","fieldDefType","channelSupportScaleType","SELECTION_ID","interval","isLegendBinding","isLegendStreamBinding","isSelectionParameter","DEFAULT_SORT_OP","SORT_BY_CHANNEL_INDEX","isSortByChannel","isSortByEncoding","isSortField","isSortArray","getStepFor","for","isStep","isFrameMixins","DEFAULT_SPACING","COMPOSITION_LAYOUT_PROPERTIES","extractCompositionLayout","specType","compositionConfig","spacingConfig","isAnyConcatSpec","isVConcatSpec","isHConcatSpec","isConcatSpec","isFacetMapping","isFacetFieldDef","isFacetSpec","isLayerSpec","SpecMapper","mapHConcat","mapVConcat","mapConcat","subspec","isRepeatSpec","isLayerRepeatSpec","isFitType","autoSizeType","getFitType","TOP_LEVEL_PROPERTIES","extractTopLevelProperties","includeParams","isUnitSpec","STACK_OFFSET_INDEX","STACKABLE_MARKS","STACK_BY_DEFAULT_MARKS","isUnbinnedQuantitative","potentialStackedChannel","stackedFieldDef","stackedField","getDimensionChannel","dimensionDef","dimensionField","dimensionOffsetChannel","dimensionOffsetDef","dimensionOffsetField","sc","LOCAL_SINGLE_TIMEUNIT_INDEX","week","dayofyear","hours","minutes","seconds","milliseconds","TIMEUNIT_PARTS","isLocalSingleTimeUnit","isUTCTimeUnit","VEGALITE_TIMEFORMAT","getTimeUnitParts","containsTimeUnit","fullTimeUnit","lastTimeUnit","dateExpr","timeUnitSpecifierExpression","timeUnitParts","formatExpression","normalizeTimeUnit","timeUnitToString","tu","extractTitleConfig","subtitleColor","subtitleFont","subtitleFontSize","subtitleFontStyle","subtitleFontWeight","subtitleLineHeight","subtitlePadding","isText","isFilter","isImputeSequence","isLookup","isLookupData","isLookupSelection","isPivot","isDensity","isQuantile","isRegression","isLoess","isSample","isWindow","isJoinAggregate","isFlatten","isCalculate","isBin","isImpute","isTimeUnit","isStack","isFold","normalizeTransform","Type","quantitative","temporal","nominal","isContinuous","QUANTITATIVE","TEMPORAL","NOMINAL","GEOJSON","getFullName","deepEqual","duplicate","never","message","pick","omit","stringify","h","charCodeAt","isNullOrFalse","array","item","mergeDeep","dest","src","deepMerge_","keys","unique","results","u","isEqual","dict","dictKeys","otherKeys","setEqual","hasIntersection","prefixGenerator","prefixes","wrappedWithAccessors","computedPrefixes","fieldIntersection","isEmpty","isBoolean","varName","alphanumericS","match","logicalExpr","deleteNestedProperty","orderedProps","titleCase","accessPathWithDatum","pieces","flatAccessWithDatum","escapePathAccess","replacePathInField","replaceAll","replacement","RegExp","removePathFromField","accessPathDepth","getFirstDefined","arg","idCounter","uniqueId","id","resetIdCounter","internalField","isInternalField","normalizeAngle","isNumeric","parseFloat","isSignalRef","isVgRangeStep","isDataRefUnionedDomain","isFieldRefUnionDomain","isDataRefDomain","VG_MARK_CONFIGS","ariaRole","blend","strokeCap","strokeDashOffset","strokeJoin","strokeMiterLimit","endAngle","padAngle","innerRadius","outerRadius","dir","dx","dy","ellipsis","fontWeight","fontStyle","lineBreak","lineHeight","cornerRadiusTopLeft","cornerRadiusTopRight","cornerRadiusBottomLeft","cornerRadiusBottomRight","aspect","smooth","VG_MARK_INDEX","symbol","VG_CORNERRADIUS_CHANNELS"],"sourceRoot":""}